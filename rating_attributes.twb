<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
        <calculation class='tableau' formula='0' />
        <members>
          <member value='0' />
          <member value='5' />
          <member value='10' />
          <member value='20' />
          <member value='30' />
          <member value='50' />
          <member value='100' />
          <member value='150' />
          <member value='200' />
        </members>
      </column>
    </datasource>
    <datasource caption='df_explored' inline='true' name='federated.1wozqji1a1a2lx17llt5118pipx6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_explored' name='textscan.16k6urx07a93ru1e1tywk00rw85l'>
            <connection class='textscan' directory='C:/Users/charlotte.stiller/OneDrive - Metacrew Group GmbH/Dokumente/Charlotte/_Data Science_IT/Ironhack/9_Final_Project/Upload' filename='df_explored.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16k6urx07a93ru1e1tywk00rw85l' name='df_explored.csv' table='[df_explored#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='item_nb' ordinal='1' />
            <column datatype='string' name='brand' ordinal='2' />
            <column datatype='string' name='product' ordinal='3' />
            <column datatype='string' name='size' ordinal='4' />
            <column datatype='string' name='price' ordinal='5' />
            <column datatype='string' name='category' ordinal='6' />
            <column datatype='string' name='type' ordinal='7' />
            <column datatype='string' name='scope' ordinal='8' />
            <column datatype='integer' name='age' ordinal='9' />
            <column datatype='string' name='rating' ordinal='10' />
            <column datatype='string' name='number_rating' ordinal='11' />
            <column datatype='integer' name='char_regenierend' ordinal='12' />
            <column datatype='integer' name='char_pflegend' ordinal='13' />
            <column datatype='integer' name='char_feuchtigkeitsspendend' ordinal='14' />
            <column datatype='integer' name='char_reinigend' ordinal='15' />
            <column datatype='integer' name='char_schützend' ordinal='16' />
            <column datatype='integer' name='char_anti-aging' ordinal='17' />
            <column datatype='integer' name='char_straffend' ordinal='18' />
            <column datatype='integer' name='char_beruhigend' ordinal='19' />
            <column datatype='integer' name='char_festigend' ordinal='20' />
            <column datatype='integer' name='char_langhaftend' ordinal='21' />
            <column datatype='integer' name='char_stärkend' ordinal='22' />
            <column datatype='integer' name='char_revitalisierend' ordinal='23' />
            <column datatype='integer' name='char_Anti-Pollution' ordinal='24' />
            <column datatype='integer' name='char_reparierend' ordinal='25' />
            <column datatype='integer' name='eff_glanzverleihend' ordinal='26' />
            <column datatype='integer' name='eff_formend' ordinal='27' />
            <column datatype='integer' name='eff_verlängernd' ordinal='28' />
            <column datatype='integer' name='eff_glättend' ordinal='29' />
            <column datatype='integer' name='eff_farberhaltend' ordinal='30' />
            <column datatype='integer' name='eff_aufhellend' ordinal='31' />
            <column datatype='integer' name='eff_verdichtend' ordinal='32' />
            <column datatype='integer' name='awa_parabenfrei' ordinal='33' />
            <column datatype='integer' name='awa_sulfatfrei' ordinal='34' />
            <column datatype='integer' name='awa_amoniakfrei' ordinal='35' />
            <column datatype='integer' name='awa_acetonfrei' ordinal='36' />
            <column datatype='integer' name='awa_laktosefrei' ordinal='37' />
            <column datatype='integer' name='awa_glutenfrei' ordinal='38' />
            <column datatype='integer' name='awa_paraffinfrei' ordinal='39' />
            <column datatype='integer' name='awa_für sensible Haut geeignet' ordinal='40' />
            <column datatype='integer' name='awa_mikroplastik-frei' ordinal='41' />
            <column datatype='integer' name='awa_silikonfrei' ordinal='42' />
            <column datatype='integer' name='awa_vegan' ordinal='43' />
            <column datatype='integer' name='awa_komedogen-frei' ordinal='44' />
            <column datatype='integer' name='awa_palmöl-frei' ordinal='45' />
            <column datatype='integer' name='awa_farbstoff-frei' ordinal='46' />
            <column datatype='integer' name='awa_Clean Beauty' ordinal='47' />
            <column datatype='integer' name='awa_ohne ölige Inhaltsstoffe' ordinal='48' />
            <column datatype='integer' name='awa_alkoholfrei' ordinal='49' />
            <column datatype='integer' name='awa_parfümfrei' ordinal='50' />
            <column datatype='integer' name='awa_konservierungsstoff-frei' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16k6urx07a93ru1e1tywk00rw85l' name='df_explored.csv' table='[df_explored#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='item_nb' ordinal='1' />
            <column datatype='string' name='brand' ordinal='2' />
            <column datatype='string' name='product' ordinal='3' />
            <column datatype='string' name='size' ordinal='4' />
            <column datatype='string' name='price' ordinal='5' />
            <column datatype='string' name='category' ordinal='6' />
            <column datatype='string' name='type' ordinal='7' />
            <column datatype='string' name='scope' ordinal='8' />
            <column datatype='integer' name='age' ordinal='9' />
            <column datatype='string' name='rating' ordinal='10' />
            <column datatype='string' name='number_rating' ordinal='11' />
            <column datatype='integer' name='char_regenierend' ordinal='12' />
            <column datatype='integer' name='char_pflegend' ordinal='13' />
            <column datatype='integer' name='char_feuchtigkeitsspendend' ordinal='14' />
            <column datatype='integer' name='char_reinigend' ordinal='15' />
            <column datatype='integer' name='char_schützend' ordinal='16' />
            <column datatype='integer' name='char_anti-aging' ordinal='17' />
            <column datatype='integer' name='char_straffend' ordinal='18' />
            <column datatype='integer' name='char_beruhigend' ordinal='19' />
            <column datatype='integer' name='char_festigend' ordinal='20' />
            <column datatype='integer' name='char_langhaftend' ordinal='21' />
            <column datatype='integer' name='char_stärkend' ordinal='22' />
            <column datatype='integer' name='char_revitalisierend' ordinal='23' />
            <column datatype='integer' name='char_Anti-Pollution' ordinal='24' />
            <column datatype='integer' name='char_reparierend' ordinal='25' />
            <column datatype='integer' name='eff_glanzverleihend' ordinal='26' />
            <column datatype='integer' name='eff_formend' ordinal='27' />
            <column datatype='integer' name='eff_verlängernd' ordinal='28' />
            <column datatype='integer' name='eff_glättend' ordinal='29' />
            <column datatype='integer' name='eff_farberhaltend' ordinal='30' />
            <column datatype='integer' name='eff_aufhellend' ordinal='31' />
            <column datatype='integer' name='eff_verdichtend' ordinal='32' />
            <column datatype='integer' name='awa_parabenfrei' ordinal='33' />
            <column datatype='integer' name='awa_sulfatfrei' ordinal='34' />
            <column datatype='integer' name='awa_amoniakfrei' ordinal='35' />
            <column datatype='integer' name='awa_acetonfrei' ordinal='36' />
            <column datatype='integer' name='awa_laktosefrei' ordinal='37' />
            <column datatype='integer' name='awa_glutenfrei' ordinal='38' />
            <column datatype='integer' name='awa_paraffinfrei' ordinal='39' />
            <column datatype='integer' name='awa_für sensible Haut geeignet' ordinal='40' />
            <column datatype='integer' name='awa_mikroplastik-frei' ordinal='41' />
            <column datatype='integer' name='awa_silikonfrei' ordinal='42' />
            <column datatype='integer' name='awa_vegan' ordinal='43' />
            <column datatype='integer' name='awa_komedogen-frei' ordinal='44' />
            <column datatype='integer' name='awa_palmöl-frei' ordinal='45' />
            <column datatype='integer' name='awa_farbstoff-frei' ordinal='46' />
            <column datatype='integer' name='awa_Clean Beauty' ordinal='47' />
            <column datatype='integer' name='awa_ohne ölige Inhaltsstoffe' ordinal='48' />
            <column datatype='integer' name='awa_alkoholfrei' ordinal='49' />
            <column datatype='integer' name='awa_parfümfrei' ordinal='50' />
            <column datatype='integer' name='awa_konservierungsstoff-frei' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;de&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;de_DE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_nb</remote-name>
            <remote-type>20</remote-type>
            <local-name>[item_nb]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>item_nb</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>product</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[size]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>size</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scope</remote-name>
            <remote-type>129</remote-type>
            <local-name>[scope]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>scope</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[number_rating]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>number_rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_regenierend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_regenierend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_regenierend</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_pflegend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_pflegend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_pflegend</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_feuchtigkeitsspendend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_feuchtigkeitsspendend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_feuchtigkeitsspendend</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_reinigend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_reinigend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_reinigend</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_schützend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_schützend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_schützend</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_anti-aging</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_anti-aging]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_anti-aging</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_straffend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_straffend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_straffend</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_beruhigend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_beruhigend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_beruhigend</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_festigend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_festigend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_festigend</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_langhaftend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_langhaftend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_langhaftend</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_stärkend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_stärkend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_stärkend</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_revitalisierend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_revitalisierend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_revitalisierend</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_Anti-Pollution</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_Anti-Pollution]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_Anti-Pollution</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>char_reparierend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[char_reparierend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>char_reparierend</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eff_glanzverleihend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eff_glanzverleihend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>eff_glanzverleihend</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eff_formend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eff_formend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>eff_formend</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eff_verlängernd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eff_verlängernd]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>eff_verlängernd</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eff_glättend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eff_glättend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>eff_glättend</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eff_farberhaltend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eff_farberhaltend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>eff_farberhaltend</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eff_aufhellend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eff_aufhellend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>eff_aufhellend</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eff_verdichtend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eff_verdichtend]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>eff_verdichtend</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_parabenfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_parabenfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_parabenfrei</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_sulfatfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_sulfatfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_sulfatfrei</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_amoniakfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_amoniakfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_amoniakfrei</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_acetonfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_acetonfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_acetonfrei</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_laktosefrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_laktosefrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_laktosefrei</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_glutenfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_glutenfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_glutenfrei</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_paraffinfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_paraffinfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_paraffinfrei</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_für sensible Haut geeignet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_für sensible Haut geeignet]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_für sensible Haut geeignet</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_mikroplastik-frei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_mikroplastik-frei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_mikroplastik-frei</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_silikonfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_silikonfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_silikonfrei</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_vegan</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_vegan]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_vegan</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_komedogen-frei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_komedogen-frei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_komedogen-frei</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_palmöl-frei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_palmöl-frei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_palmöl-frei</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_farbstoff-frei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_farbstoff-frei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_farbstoff-frei</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_Clean Beauty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_Clean Beauty]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_Clean Beauty</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_ohne ölige Inhaltsstoffe</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_ohne ölige Inhaltsstoffe]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_ohne ölige Inhaltsstoffe</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_alkoholfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_alkoholfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_alkoholfrei</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_parfümfrei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_parfümfrei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_parfümfrei</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>awa_konservierungsstoff-frei</remote-name>
            <remote-type>20</remote-type>
            <local-name>[awa_konservierungsstoff-frei]</local-name>
            <parent-name>[df_explored.csv]</parent-name>
            <remote-alias>awa_konservierungsstoff-frei</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_acetonfrei:qk]&quot;' value='acetone-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_alkoholfrei:qk]&quot;' value='alcohol-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_amoniakfrei:qk]&quot;' value='ammonia-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_Clean Beauty:qk]&quot;' value='clean beauty' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_farbstoff-frei:qk]&quot;' value='color fabric-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_für sensible Haut geeignet:qk]&quot;' value='sensitive skin' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_glutenfrei:qk]&quot;' value='gluten-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_komedogen-frei:qk]&quot;' value='comedogen-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_konservierungsstoff-frei:qk]&quot;' value='preservative-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_laktosefrei:qk]&quot;' value='lactose-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_mikroplastik-frei:qk]&quot;' value='microplastic-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_ohne ölige Inhaltsstoffe:qk]&quot;' value='without oily ingredients' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_palmöl-frei:qk]&quot;' value='palm oil-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parabenfrei:qk]&quot;' value='paraben-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_paraffinfrei:qk]&quot;' value='paraffin-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parfümfrei:qk]&quot;' value='parfume-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_silikonfrei:qk]&quot;' value='silicone-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_sulfatfrei:qk]&quot;' value='sulfate-free' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_vegan:qk]&quot;' value='vegan' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_anti-aging:qk]&quot;' value='anti-aging' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_Anti-Pollution:qk]&quot;' value='anti-pollution' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_beruhigend:qk]&quot;' value='calming' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_festigend:qk]&quot;' value='firming' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_feuchtigkeitsspendend:qk]&quot;' value='moisturizing' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_langhaftend:qk]&quot;' value='long-lasting' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_pflegend:qk]&quot;' value='nourishing' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_regenierend:qk]&quot;' value='regenerating' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reinigend:qk]&quot;' value='cleansing' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reparierend:qk]&quot;' value='repairing' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_revitalisierend:qk]&quot;' value='revitalizing' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_schützend:qk]&quot;' value='protective' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_stärkend:qk]&quot;' value='strengthening' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_straffend:qk]&quot;' value='tighten up' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_aufhellend:qk]&quot;' value='lightening' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_farberhaltend:qk]&quot;' value='color-retaining' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_formend:qk]&quot;' value='shaping' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glanzverleihend:qk]&quot;' value='gloss-imparting' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glättend:qk]&quot;' value='smoothing' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verdichtend:qk]&quot;' value='thickening' />
          <alias key='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verlängernd:qk]&quot;' value='lengthening' />
        </aliases>
      </column>
      <column caption='Calculation_price_bin' datatype='string' name='[Calculation_1405686075856506882]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [price] &lt;= 0 then &quot;0-5&quot;&#13;&#10;elseif [price] &lt; 5 then &quot;5-10&quot;&#13;&#10;elseif [price] &lt; 10 then &quot;10-20&quot;&#13;&#10;elseif [price] &lt; 20 then &quot;20-30&quot;&#13;&#10;elseif [price] &lt; 30 then &quot;30-40&quot;&#13;&#10;elseif [price] &lt; 40 then &quot;40-50&quot;&#13;&#10;elseif [price] &lt; 50 then &quot;50-60&quot;&#13;&#10;elseif [price] &lt; 60 then &quot;60-70&quot;&#13;&#10;elseif [price] &lt; 70 then &quot;70-80&quot;&#13;&#10;elseif [price] &lt; 80 then &quot;80-90&quot;&#13;&#10;elseif [price] &lt; 90 then &quot;90-100&quot;&#13;&#10;elseif [price] &lt; 100 then &quot;100-110&quot;&#13;&#10;elseif [price] &lt; 110 then &quot;110-120&quot;&#13;&#10;elseif [price] &lt; 120 then &quot;120-130&quot;&#13;&#10;elseif [price] &lt; 130 then &quot;130-140&quot;&#13;&#10;elseif [price] &lt; 140 then &quot;140-150&quot;&#13;&#10;elseif [price] &lt; 150 and [price] &gt; 200 then &quot;150-200&quot;&#13;&#10;else &quot;200+&quot; &#13;&#10;end' />
      </column>
      <column caption='Calculation_size_bin' datatype='string' name='[Calculation_1405686075869478915]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [size] &lt;= 25 then &quot;1-25&quot;&#13;&#10;elseif [size] &lt; 50 then &quot;25-50&quot;&#13;&#10;elseif [size] &lt; 75 then &quot;50-75&quot;&#13;&#10;elseif [size] &lt; 100 then &quot;75-100&quot;&#13;&#10;elseif [size] &lt; 125 then &quot;100-125&quot;&#13;&#10;elseif [size] &lt; 150 then &quot;125-150&quot;&#13;&#10;elseif [size] &lt; 200 then &quot;150-200&quot;&#13;&#10;elseif [size] &lt; 500 then &quot;200-500&quot;&#13;&#10;else &quot;500+&quot; &#13;&#10;end' />
      </column>
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_explored.csv' datatype='table' name='[__tableau_internal_object_id__].[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]' role='measure' type='quantitative' />
      <column datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_Clean Beauty]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_acetonfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_alkoholfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_amoniakfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_farbstoff-frei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_für sensible Haut geeignet]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_glutenfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_komedogen-frei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_konservierungsstoff-frei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_laktosefrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_mikroplastik-frei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_ohne ölige Inhaltsstoffe]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_palmöl-frei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_parabenfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_paraffinfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_parfümfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_silikonfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_sulfatfrei]' role='measure' type='quantitative' />
      <column datatype='integer' name='[awa_vegan]' role='measure' type='quantitative' />
      <column datatype='string' name='[category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Gesicht&quot;' value='Face' />
          <alias key='&quot;Haare&quot;' value='Hair' />
          <alias key='&quot;Körper&quot;' value='Body' />
          <alias key='&quot;Parfum&quot;' value='Parfume' />
        </aliases>
      </column>
      <column datatype='integer' name='[char_Anti-Pollution]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_anti-aging]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_beruhigend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_festigend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_feuchtigkeitsspendend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_langhaftend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_pflegend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_regenierend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_reinigend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_reparierend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_revitalisierend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_schützend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_straffend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[char_stärkend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[eff_aufhellend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[eff_farberhaltend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[eff_formend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[eff_glanzverleihend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[eff_glättend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[eff_verdichtend]' role='measure' type='quantitative' />
      <column datatype='integer' name='[eff_verlängernd]' role='measure' type='quantitative' />
      <column datatype='integer' name='[item_nb]' role='measure' type='quantitative' />
      <column aggregation='None' caption='price (bin)' datatype='integer' name='[price (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[price]' peg='0' size='20' />
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[price]' role='measure' type='quantitative' />
      <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
      <column datatype='string' name='[scope]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Augen&quot;' value='Eyes' />
          <alias key='&quot;Augenbrauen&quot;' value='Eyebrows' />
          <alias key='&quot;Gesicht&quot;' value='Face' />
          <alias key='&quot;Haare&quot;' value='Hair' />
          <alias key='&quot;Hals&quot;' value='Neck' />
          <alias key='&quot;Hände&quot;' value='Hands' />
          <alias key='&quot;Körper&quot;' value='Body' />
          <alias key='&quot;Mund&quot;' value='Mouth' />
          <alias key='&quot;Nägel&quot;' value='Nails' />
          <alias key='&quot;Wimpern&quot;' value='Eyelashes' />
        </aliases>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[size]' role='measure' type='quantitative' />
      <column datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Anti-Aging Pflege&quot;' value='anti-aging-products' />
          <alias key='&quot;AugenbrauenWimpernstyling&quot;' value='eyebrow + lash styling ' />
          <alias key='&quot;Augenpflege&quot;' value='eye care' />
          <alias key='&quot;Badezusatz&quot;' value='bath additive' />
          <alias key='&quot;Bartpflege&quot;' value='beard grooming' />
          <alias key='&quot;Beautytools&quot;' value='beauty tools' />
          <alias key='&quot;Bodylotion&quot;' value='bodylotion' />
          <alias key='&quot;Concealer&quot;' value='concealer' />
          <alias key='&quot;Creme&quot;' value='cream' />
          <alias key='&quot;Deodorant&quot;' value='deodorant' />
          <alias key='&quot;Duschgel&quot;' value='shower gel' />
          <alias key='&quot;Eau de Cologne&quot;' value='eau de cologne' />
          <alias key='&quot;Eau de Parfum&quot;' value='eau de parfum' />
          <alias key='&quot;Eau de Toilette&quot;' value='eau de toilette' />
          <alias key='&quot;Enthaarungsprodukt&quot;' value='depilation product' />
          <alias key='&quot;Foundation&quot;' value='foundation' />
          <alias key='&quot;Fusspflege&quot;' value='foot care' />
          <alias key='&quot;Geschenkset&quot;' value='gift set' />
          <alias key='&quot;Gesichtscreme&quot;' value='face cream' />
          <alias key='&quot;Gesichtspflege&quot;' value='facial care' />
          <alias key='&quot;Gesichtsreinigung&quot;' value='facial cleansing' />
          <alias key='&quot;GesichtsSpayWasser&quot;' value='facial toner + spray' />
          <alias key='&quot;Haarprodukt&quot;' value='hair product' />
          <alias key='&quot;Haarshampoo&quot;' value='shampoo' />
          <alias key='&quot;Handpflege&quot;' value='hand care' />
          <alias key='&quot;Highlighter&quot;' value='highlighter' />
          <alias key='&quot;KajalEyeliner&quot;' value='kajal + eyeliner' />
          <alias key='&quot;Körperpflege&quot;' value='personal hygiene' />
          <alias key='&quot;Künstliche Wimpern&quot;' value='eyelashes' />
          <alias key='&quot;Lidschatten&quot;' value='eyeshadow' />
          <alias key='&quot;Lipgloss&quot;' value='lip gloss' />
          <alias key='&quot;Lippenbalm&quot;' value='lip balm' />
          <alias key='&quot;Lippenpflege&quot;' value='lip care' />
          <alias key='&quot;Lippenstift&quot;' value='lipstick' />
          <alias key='&quot;Make-up Set&quot;' value='make-up set' />
          <alias key='&quot;Mascara&quot;' value='mascara' />
          <alias key='&quot;Maske&quot;' value='mask' />
          <alias key='&quot;Mode-Accessoires&quot;' value='fashion accessories' />
          <alias key='&quot;Nagellack&quot;' value='nail polish' />
          <alias key='&quot;Parfum&quot;' value='parfume' />
          <alias key='&quot;Peeling&quot;' value='peeling' />
          <alias key='&quot;Pinsel&quot;' value='brush' />
          <alias key='&quot;Primer&quot;' value='primer' />
          <alias key='&quot;PuderRougeBronzer&quot;' value='powder + rouge + bronzer' />
          <alias key='&quot;Schmuck&quot;' value='jewellery' />
          <alias key='&quot;Seife&quot;' value='soap' />
          <alias key='&quot;SerumÖle&quot;' value='serum + oil' />
          <alias key='&quot;Sonnenprodukte&quot;' value='sun products' />
        </aliases>
      </column>
      <column-instance column='[__tableau_internal_object_id__].[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_acetonfrei]' derivation='Attribute' name='[attr:awa_acetonfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_alkoholfrei]' derivation='Attribute' name='[attr:awa_alkoholfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[item_nb]' derivation='Attribute' name='[attr:item_nb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Attribute' name='[attr:rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[item_nb]' derivation='Avg' name='[avg:item_nb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_acetonfrei]' derivation='Count' name='[cnt:awa_acetonfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_alkoholfrei]' derivation='Count' name='[cnt:awa_alkoholfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[item_nb]' derivation='Count' name='[cnt:item_nb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='CountD' name='[ctd:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='CountD' name='[ctd:rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[size]' derivation='CountD' name='[ctd:size:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Avg' name='[cum:avg:rating:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[rating]' derivation='Avg' name='[cum:avg:rating:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[rating]' derivation='Avg' name='[diff:cum:avg:rating:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' ordering-type='Rows' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[rating]' derivation='Max' name='[max:rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1405686075869478915]' derivation='None' name='[none:Calculation_1405686075869478915:nk]' pivot='key' type='nominal' />
      <column-instance column='[awa_acetonfrei]' derivation='None' name='[none:awa_acetonfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_alkoholfrei]' derivation='None' name='[none:awa_alkoholfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[item_nb]' derivation='None' name='[none:item_nb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[scope]' derivation='None' name='[none:scope:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age]' derivation='Sum' name='[sum:age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_Clean Beauty]' derivation='Sum' name='[sum:awa_Clean Beauty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_acetonfrei]' derivation='Sum' name='[sum:awa_acetonfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_alkoholfrei]' derivation='Sum' name='[sum:awa_alkoholfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_amoniakfrei]' derivation='Sum' name='[sum:awa_amoniakfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_farbstoff-frei]' derivation='Sum' name='[sum:awa_farbstoff-frei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_für sensible Haut geeignet]' derivation='Sum' name='[sum:awa_für sensible Haut geeignet:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_glutenfrei]' derivation='Sum' name='[sum:awa_glutenfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_komedogen-frei]' derivation='Sum' name='[sum:awa_komedogen-frei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_konservierungsstoff-frei]' derivation='Sum' name='[sum:awa_konservierungsstoff-frei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_laktosefrei]' derivation='Sum' name='[sum:awa_laktosefrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_mikroplastik-frei]' derivation='Sum' name='[sum:awa_mikroplastik-frei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_ohne ölige Inhaltsstoffe]' derivation='Sum' name='[sum:awa_ohne ölige Inhaltsstoffe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_palmöl-frei]' derivation='Sum' name='[sum:awa_palmöl-frei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_parabenfrei]' derivation='Sum' name='[sum:awa_parabenfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_paraffinfrei]' derivation='Sum' name='[sum:awa_paraffinfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_parfümfrei]' derivation='Sum' name='[sum:awa_parfümfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_silikonfrei]' derivation='Sum' name='[sum:awa_silikonfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_sulfatfrei]' derivation='Sum' name='[sum:awa_sulfatfrei:qk]' pivot='key' type='quantitative' />
      <column-instance column='[awa_vegan]' derivation='Sum' name='[sum:awa_vegan:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_Anti-Pollution]' derivation='Sum' name='[sum:char_Anti-Pollution:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_anti-aging]' derivation='Sum' name='[sum:char_anti-aging:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_beruhigend]' derivation='Sum' name='[sum:char_beruhigend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_festigend]' derivation='Sum' name='[sum:char_festigend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_feuchtigkeitsspendend]' derivation='Sum' name='[sum:char_feuchtigkeitsspendend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_langhaftend]' derivation='Sum' name='[sum:char_langhaftend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_pflegend]' derivation='Sum' name='[sum:char_pflegend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_regenierend]' derivation='Sum' name='[sum:char_regenierend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_reinigend]' derivation='Sum' name='[sum:char_reinigend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_reparierend]' derivation='Sum' name='[sum:char_reparierend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_revitalisierend]' derivation='Sum' name='[sum:char_revitalisierend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_schützend]' derivation='Sum' name='[sum:char_schützend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_straffend]' derivation='Sum' name='[sum:char_straffend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[char_stärkend]' derivation='Sum' name='[sum:char_stärkend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eff_aufhellend]' derivation='Sum' name='[sum:eff_aufhellend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eff_farberhaltend]' derivation='Sum' name='[sum:eff_farberhaltend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eff_formend]' derivation='Sum' name='[sum:eff_formend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eff_glanzverleihend]' derivation='Sum' name='[sum:eff_glanzverleihend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eff_glättend]' derivation='Sum' name='[sum:eff_glättend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eff_verdichtend]' derivation='Sum' name='[sum:eff_verdichtend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eff_verlängernd]' derivation='Sum' name='[sum:eff_verlängernd:qk]' pivot='key' type='quantitative' />
      <column-instance column='[item_nb]' derivation='Sum' name='[sum:item_nb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Avg' name='[win:avg:rating:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[rating]' derivation='Sum' name='[win:sum:rating:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075869478915:nk]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (scope)' hidden='true' name='[Action (scope)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[scope]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/charlotte.stiller/OneDrive - Metacrew Group GmbH/Dokumente/Charlotte/_Data Science_IT/Ironhack/9_Final_Project/Upload/df_explored.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/24/2021 12:08:49 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='df_explored' increment-value='%null%' refresh-type='create' rows-inserted='47716' timestamp-start='2021-11-24 12:08:49.662' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47716</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_nb</remote-name>
              <remote-type>20</remote-type>
              <local-name>[item_nb]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>item_nb</remote-alias>
              <ordinal>1</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36641</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>brand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[brand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>brand</remote-alias>
              <ordinal>2</ordinal>
              <family>df_explored.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1999</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LDE_RDE' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product</remote-alias>
              <ordinal>3</ordinal>
              <family>df_explored.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32215</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LDE_RDE' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>size</remote-name>
              <remote-type>5</remote-type>
              <local-name>[size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>size</remote-alias>
              <ordinal>4</ordinal>
              <family>df_explored.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>385</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>5</ordinal>
              <family>df_explored.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1416</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>6</ordinal>
              <family>df_explored.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LDE_RDE' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>7</ordinal>
              <family>df_explored.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LDE_RDE' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>scope</remote-name>
              <remote-type>129</remote-type>
              <local-name>[scope]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>scope</remote-alias>
              <ordinal>8</ordinal>
              <family>df_explored.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LDE_RDE' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>age</remote-alias>
              <ordinal>9</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>10</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[number_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_rating</remote-alias>
              <ordinal>11</ordinal>
              <family>df_explored.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>373</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LDE_RDE' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_regenierend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_regenierend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_regenierend</remote-alias>
              <ordinal>12</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_pflegend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_pflegend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_pflegend</remote-alias>
              <ordinal>13</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_feuchtigkeitsspendend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_feuchtigkeitsspendend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_feuchtigkeitsspendend</remote-alias>
              <ordinal>14</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_reinigend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_reinigend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_reinigend</remote-alias>
              <ordinal>15</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_schützend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_schützend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_schützend</remote-alias>
              <ordinal>16</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_anti-aging</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_anti-aging]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_anti-aging</remote-alias>
              <ordinal>17</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_straffend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_straffend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_straffend</remote-alias>
              <ordinal>18</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_beruhigend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_beruhigend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_beruhigend</remote-alias>
              <ordinal>19</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_festigend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_festigend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_festigend</remote-alias>
              <ordinal>20</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_langhaftend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_langhaftend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_langhaftend</remote-alias>
              <ordinal>21</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_stärkend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_stärkend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_stärkend</remote-alias>
              <ordinal>22</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_revitalisierend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_revitalisierend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_revitalisierend</remote-alias>
              <ordinal>23</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_Anti-Pollution</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_Anti-Pollution]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_Anti-Pollution</remote-alias>
              <ordinal>24</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>char_reparierend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[char_reparierend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>char_reparierend</remote-alias>
              <ordinal>25</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eff_glanzverleihend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[eff_glanzverleihend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eff_glanzverleihend</remote-alias>
              <ordinal>26</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eff_formend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[eff_formend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eff_formend</remote-alias>
              <ordinal>27</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eff_verlängernd</remote-name>
              <remote-type>20</remote-type>
              <local-name>[eff_verlängernd]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eff_verlängernd</remote-alias>
              <ordinal>28</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eff_glättend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[eff_glättend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eff_glättend</remote-alias>
              <ordinal>29</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eff_farberhaltend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[eff_farberhaltend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eff_farberhaltend</remote-alias>
              <ordinal>30</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eff_aufhellend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[eff_aufhellend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eff_aufhellend</remote-alias>
              <ordinal>31</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eff_verdichtend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[eff_verdichtend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eff_verdichtend</remote-alias>
              <ordinal>32</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_parabenfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_parabenfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_parabenfrei</remote-alias>
              <ordinal>33</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_sulfatfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_sulfatfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_sulfatfrei</remote-alias>
              <ordinal>34</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_amoniakfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_amoniakfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_amoniakfrei</remote-alias>
              <ordinal>35</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_acetonfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_acetonfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_acetonfrei</remote-alias>
              <ordinal>36</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_laktosefrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_laktosefrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_laktosefrei</remote-alias>
              <ordinal>37</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_glutenfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_glutenfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_glutenfrei</remote-alias>
              <ordinal>38</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_paraffinfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_paraffinfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_paraffinfrei</remote-alias>
              <ordinal>39</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_für sensible Haut geeignet</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_für sensible Haut geeignet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_für sensible Haut geeignet</remote-alias>
              <ordinal>40</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_mikroplastik-frei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_mikroplastik-frei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_mikroplastik-frei</remote-alias>
              <ordinal>41</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_silikonfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_silikonfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_silikonfrei</remote-alias>
              <ordinal>42</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_vegan</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_vegan]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_vegan</remote-alias>
              <ordinal>43</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_komedogen-frei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_komedogen-frei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_komedogen-frei</remote-alias>
              <ordinal>44</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_palmöl-frei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_palmöl-frei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_palmöl-frei</remote-alias>
              <ordinal>45</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_farbstoff-frei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_farbstoff-frei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_farbstoff-frei</remote-alias>
              <ordinal>46</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_Clean Beauty</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_Clean Beauty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_Clean Beauty</remote-alias>
              <ordinal>47</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_ohne ölige Inhaltsstoffe</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_ohne ölige Inhaltsstoffe]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_ohne ölige Inhaltsstoffe</remote-alias>
              <ordinal>48</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_alkoholfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_alkoholfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_alkoholfrei</remote-alias>
              <ordinal>49</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_parfümfrei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_parfümfrei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_parfümfrei</remote-alias>
              <ordinal>50</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>awa_konservierungsstoff-frei</remote-name>
              <remote-type>20</remote-type>
              <local-name>[awa_konservierungsstoff-frei]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>awa_konservierungsstoff-frei</remote-alias>
              <ordinal>51</ordinal>
              <family>df_explored.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:scope:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mund&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Körper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Augen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nägel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gesicht&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Everywhere&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haare&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hände&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Augenbrauen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wimpern&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Creme&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Künstliche Wimpern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sonnenprodukte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anti-Aging Pflege&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gesichtsreinigung&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parfum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bartpflege&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Handpflege&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PuderRougeBronzer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau de Parfum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lippenbalm&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Deodorant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lidschatten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beautytools&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Highlighter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Schmuck&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gesichtscreme&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mode-Accessoires&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AugenbrauenWimpernstyling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GesichtsSpayWasser&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peeling&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fusspflege&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mascara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bodylotion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KajalEyeliner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seife&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eau de Toilette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lippenpflege&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Enthaarungsprodukt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lippenstift&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Geschenkset&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maske&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gesichtspflege&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nagellack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duschgel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lifestyle-Accessoires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concealer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Körperpflege&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SerumÖle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Augenpflege&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haarprodukt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pinsel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Foundation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Make-up Set&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eau de Cologne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lipgloss&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Badezusatz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haarshampoo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Primer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:3:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_laktosefrei:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parabenfrei:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_paraffinfrei:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_pflegend:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[__tableau_internal_object_id__].[cnt:df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[attr:awa_acetonfrei:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:awa_acetonfrei:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[none:awa_acetonfrei:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_acetonfrei:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glanzverleihend:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[win:sum:rating:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[ctd:price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_ohne ölige Inhaltsstoffe:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_beruhigend:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_farberhaltend:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_glutenfrei:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_mikroplastik-frei:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glättend:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_revitalisierend:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_silikonfrei:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_regenierend:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[ctd:size:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_festigend:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[attr:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[ctd:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[cum:avg:rating:qk:2]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[cum:avg:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[diff:cum:avg:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[max:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:rating:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[win:avg:rating:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_Clean Beauty:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_komedogen-frei:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_schützend:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verdichtend:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_sulfatfrei:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_feuchtigkeitsspendend:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[attr:awa_alkoholfrei:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:awa_alkoholfrei:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[none:awa_alkoholfrei:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_alkoholfrei:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_straffend:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_für sensible Haut geeignet:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reinigend:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verlängernd:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_palmöl-frei:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_aufhellend:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_konservierungsstoff-frei:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parfümfrei:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_langhaftend:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:age:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_amoniakfrei:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_formend:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_stärkend:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_vegan:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reparierend:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_farbstoff-frei:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_Anti-Pollution:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[attr:item_nb:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:item_nb:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[none:item_nb:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_anti-aging:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:item_nb:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8b58d1fe-8528-4153-b971-77b84f2fae9b}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8ba1d550-1797-40a4-9cbb-6396cc837388}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_explored.csv' id='df_explored.csv_D38D7A47FBA84947AF02F39B2D5F5CE6'>
            <properties context=''>
              <relation connection='textscan.16k6urx07a93ru1e1tywk00rw85l' name='df_explored.csv' table='[df_explored#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='item_nb' ordinal='1' />
                  <column datatype='string' name='brand' ordinal='2' />
                  <column datatype='string' name='product' ordinal='3' />
                  <column datatype='string' name='size' ordinal='4' />
                  <column datatype='string' name='price' ordinal='5' />
                  <column datatype='string' name='category' ordinal='6' />
                  <column datatype='string' name='type' ordinal='7' />
                  <column datatype='string' name='scope' ordinal='8' />
                  <column datatype='integer' name='age' ordinal='9' />
                  <column datatype='string' name='rating' ordinal='10' />
                  <column datatype='string' name='number_rating' ordinal='11' />
                  <column datatype='integer' name='char_regenierend' ordinal='12' />
                  <column datatype='integer' name='char_pflegend' ordinal='13' />
                  <column datatype='integer' name='char_feuchtigkeitsspendend' ordinal='14' />
                  <column datatype='integer' name='char_reinigend' ordinal='15' />
                  <column datatype='integer' name='char_schützend' ordinal='16' />
                  <column datatype='integer' name='char_anti-aging' ordinal='17' />
                  <column datatype='integer' name='char_straffend' ordinal='18' />
                  <column datatype='integer' name='char_beruhigend' ordinal='19' />
                  <column datatype='integer' name='char_festigend' ordinal='20' />
                  <column datatype='integer' name='char_langhaftend' ordinal='21' />
                  <column datatype='integer' name='char_stärkend' ordinal='22' />
                  <column datatype='integer' name='char_revitalisierend' ordinal='23' />
                  <column datatype='integer' name='char_Anti-Pollution' ordinal='24' />
                  <column datatype='integer' name='char_reparierend' ordinal='25' />
                  <column datatype='integer' name='eff_glanzverleihend' ordinal='26' />
                  <column datatype='integer' name='eff_formend' ordinal='27' />
                  <column datatype='integer' name='eff_verlängernd' ordinal='28' />
                  <column datatype='integer' name='eff_glättend' ordinal='29' />
                  <column datatype='integer' name='eff_farberhaltend' ordinal='30' />
                  <column datatype='integer' name='eff_aufhellend' ordinal='31' />
                  <column datatype='integer' name='eff_verdichtend' ordinal='32' />
                  <column datatype='integer' name='awa_parabenfrei' ordinal='33' />
                  <column datatype='integer' name='awa_sulfatfrei' ordinal='34' />
                  <column datatype='integer' name='awa_amoniakfrei' ordinal='35' />
                  <column datatype='integer' name='awa_acetonfrei' ordinal='36' />
                  <column datatype='integer' name='awa_laktosefrei' ordinal='37' />
                  <column datatype='integer' name='awa_glutenfrei' ordinal='38' />
                  <column datatype='integer' name='awa_paraffinfrei' ordinal='39' />
                  <column datatype='integer' name='awa_für sensible Haut geeignet' ordinal='40' />
                  <column datatype='integer' name='awa_mikroplastik-frei' ordinal='41' />
                  <column datatype='integer' name='awa_silikonfrei' ordinal='42' />
                  <column datatype='integer' name='awa_vegan' ordinal='43' />
                  <column datatype='integer' name='awa_komedogen-frei' ordinal='44' />
                  <column datatype='integer' name='awa_palmöl-frei' ordinal='45' />
                  <column datatype='integer' name='awa_farbstoff-frei' ordinal='46' />
                  <column datatype='integer' name='awa_Clean Beauty' ordinal='47' />
                  <column datatype='integer' name='awa_ohne ölige Inhaltsstoffe' ordinal='48' />
                  <column datatype='integer' name='awa_alkoholfrei' ordinal='49' />
                  <column datatype='integer' name='awa_parfümfrei' ordinal='50' />
                  <column datatype='integer' name='awa_konservierungsstoff-frei' ordinal='51' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated) 1' name='[Action2_97388305C0EA4ED7B3B9DA9B29A72C8E]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='SCOPE_RATING' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (4)' />
        <param name='target' value='SCOPE_RATING' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1' name='[Action3_1D3D3B3C9BFA4200A640CFF390322020]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='CATEGORY' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (4)' />
        <param name='target' value='CATEGORY' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1' name='[Action3_5801F6AC433B4581B8CCF70483105387]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='SCOPES' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (4)' />
        <param name='target' value='SCOPES' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1' name='[Action4_4D1AF69EA5D04D93860D4CB19DAEF6DB]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='TYPE' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (4)' />
        <param name='target' value='TYPE' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AWARD_RATING'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x PRODUCT AWARD</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of ratings per product award  </run>
            <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column datatype='integer' name='[awa_Clean Beauty]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_acetonfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_alkoholfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_amoniakfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_farbstoff-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_für sensible Haut geeignet]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_glutenfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_komedogen-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_konservierungsstoff-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_laktosefrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_mikroplastik-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_ohne ölige Inhaltsstoffe]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_palmöl-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_parabenfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_paraffinfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_parfümfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_silikonfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_sulfatfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_vegan]' role='measure' type='quantitative' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[awa_Clean Beauty]' derivation='Sum' name='[sum:awa_Clean Beauty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_acetonfrei]' derivation='Sum' name='[sum:awa_acetonfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_alkoholfrei]' derivation='Sum' name='[sum:awa_alkoholfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_amoniakfrei]' derivation='Sum' name='[sum:awa_amoniakfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_farbstoff-frei]' derivation='Sum' name='[sum:awa_farbstoff-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_für sensible Haut geeignet]' derivation='Sum' name='[sum:awa_für sensible Haut geeignet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_glutenfrei]' derivation='Sum' name='[sum:awa_glutenfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_komedogen-frei]' derivation='Sum' name='[sum:awa_komedogen-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_konservierungsstoff-frei]' derivation='Sum' name='[sum:awa_konservierungsstoff-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_laktosefrei]' derivation='Sum' name='[sum:awa_laktosefrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_mikroplastik-frei]' derivation='Sum' name='[sum:awa_mikroplastik-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_ohne ölige Inhaltsstoffe]' derivation='Sum' name='[sum:awa_ohne ölige Inhaltsstoffe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_palmöl-frei]' derivation='Sum' name='[sum:awa_palmöl-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_parabenfrei]' derivation='Sum' name='[sum:awa_parabenfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_paraffinfrei]' derivation='Sum' name='[sum:awa_paraffinfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_parfümfrei]' derivation='Sum' name='[sum:awa_parfümfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_silikonfrei]' derivation='Sum' name='[sum:awa_silikonfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_sulfatfrei]' derivation='Sum' name='[sum:awa_sulfatfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_vegan]' derivation='Sum' name='[sum:awa_vegan:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_Clean Beauty:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_acetonfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_alkoholfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_amoniakfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_farbstoff-frei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_für sensible Haut geeignet:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_glutenfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_komedogen-frei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_konservierungsstoff-frei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_laktosefrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_mikroplastik-frei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_ohne ölige Inhaltsstoffe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_palmöl-frei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parabenfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_paraffinfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parfümfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_silikonfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_sulfatfrei:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_vegan:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parabenfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_sulfatfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_amoniakfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_acetonfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_paraffinfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_laktosefrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_glutenfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_mikroplastik-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_für sensible Haut geeignet:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_silikonfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_vegan:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_alkoholfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_komedogen-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_farbstoff-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_ohne ölige Inhaltsstoffe:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_palmöl-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_Clean Beauty:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_konservierungsstoff-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parfümfrei:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rating:ok]' member='4' />
              <groupfilter function='member' level='[none:rating:ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]</column>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' scope='rows' value='count of rating per product award for rating 4 + 5 ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' value='31' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
            <format attr='text-orientation' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]</rows>
        <cols>([federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok] / [federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E6E89CCB-4351-4300-B127-8960151DEA7E}' />
    </worksheet>
    <worksheet name='CATEGORY'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CATEGORY x PRODUCT ID </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of products per category.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Gesicht&quot;' value='Face' />
                <alias key='&quot;Haare&quot;' value='Hair' />
                <alias key='&quot;Körper&quot;' value='Body' />
                <alias key='&quot;Parfum&quot;' value='Parfume' />
              </aliases>
            </column>
            <column-instance column='[item_nb]' derivation='Count' name='[cnt:item_nb:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[item_nb]' role='measure' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='in-tooltip' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C5D78B98-13E7-4C34-9668-DC412B35125A}' />
    </worksheet>
    <worksheet name='CATEGORY_RATING'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x CATEGORY&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>S</run>
            <run>hows the average rating of each category (column height) and the count of ratings per categroy (marks are labeled by count of rating). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Gesicht&quot;' value='Face' />
                <alias key='&quot;Haare&quot;' value='Hair' />
                <alias key='&quot;Körper&quot;' value='Body' />
                <alias key='&quot;Parfum&quot;' value='Parfume' />
              </aliases>
            </column>
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' included-values='in-range'>
            <min>4.0168195718654438</min>
            <max>4.1851557533375718</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by category' />
            <encoding attr='space' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' field-type='quantitative' max='4.5480965026821014' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
            <format attr='text-format' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' value='' />
            <format attr='text-orientation' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='in-tooltip' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:rating:qk]' />
              <lod column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='table average 4,06' label-type='custom' probability='95' scope='per-table' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5382320880889893' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</rows>
        <cols>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]</cols>
      </table>
      <simple-id uuid='{A611D8C5-1ADF-42E3-B1DD-64E282A566BB}' />
    </worksheet>
    <worksheet name='CHARACTERISTIC'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x CHARACTERISTIC</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of ratings per characteristic  </run>
            <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column datatype='integer' name='[awa_Clean Beauty]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_acetonfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_alkoholfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_amoniakfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_farbstoff-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_für sensible Haut geeignet]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_glutenfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_komedogen-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_konservierungsstoff-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_laktosefrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_mikroplastik-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_ohne ölige Inhaltsstoffe]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_palmöl-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_parabenfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_paraffinfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_parfümfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_silikonfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_sulfatfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_vegan]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_Anti-Pollution]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_anti-aging]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_beruhigend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_festigend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_feuchtigkeitsspendend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_langhaftend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_pflegend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_regenierend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_reinigend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_reparierend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_revitalisierend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_schützend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_straffend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[char_stärkend]' role='measure' type='quantitative' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[awa_Clean Beauty]' derivation='Sum' name='[sum:awa_Clean Beauty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_acetonfrei]' derivation='Sum' name='[sum:awa_acetonfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_alkoholfrei]' derivation='Sum' name='[sum:awa_alkoholfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_amoniakfrei]' derivation='Sum' name='[sum:awa_amoniakfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_farbstoff-frei]' derivation='Sum' name='[sum:awa_farbstoff-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_für sensible Haut geeignet]' derivation='Sum' name='[sum:awa_für sensible Haut geeignet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_glutenfrei]' derivation='Sum' name='[sum:awa_glutenfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_komedogen-frei]' derivation='Sum' name='[sum:awa_komedogen-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_konservierungsstoff-frei]' derivation='Sum' name='[sum:awa_konservierungsstoff-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_laktosefrei]' derivation='Sum' name='[sum:awa_laktosefrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_mikroplastik-frei]' derivation='Sum' name='[sum:awa_mikroplastik-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_ohne ölige Inhaltsstoffe]' derivation='Sum' name='[sum:awa_ohne ölige Inhaltsstoffe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_palmöl-frei]' derivation='Sum' name='[sum:awa_palmöl-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_parabenfrei]' derivation='Sum' name='[sum:awa_parabenfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_paraffinfrei]' derivation='Sum' name='[sum:awa_paraffinfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_parfümfrei]' derivation='Sum' name='[sum:awa_parfümfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_silikonfrei]' derivation='Sum' name='[sum:awa_silikonfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_sulfatfrei]' derivation='Sum' name='[sum:awa_sulfatfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_vegan]' derivation='Sum' name='[sum:awa_vegan:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_Anti-Pollution]' derivation='Sum' name='[sum:char_Anti-Pollution:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_anti-aging]' derivation='Sum' name='[sum:char_anti-aging:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_beruhigend]' derivation='Sum' name='[sum:char_beruhigend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_festigend]' derivation='Sum' name='[sum:char_festigend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_feuchtigkeitsspendend]' derivation='Sum' name='[sum:char_feuchtigkeitsspendend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_langhaftend]' derivation='Sum' name='[sum:char_langhaftend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_pflegend]' derivation='Sum' name='[sum:char_pflegend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_regenierend]' derivation='Sum' name='[sum:char_regenierend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_reinigend]' derivation='Sum' name='[sum:char_reinigend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_reparierend]' derivation='Sum' name='[sum:char_reparierend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_revitalisierend]' derivation='Sum' name='[sum:char_revitalisierend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_schützend]' derivation='Sum' name='[sum:char_schützend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_straffend]' derivation='Sum' name='[sum:char_straffend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[char_stärkend]' derivation='Sum' name='[sum:char_stärkend:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_anti-aging:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_Anti-Pollution:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_beruhigend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_festigend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_feuchtigkeitsspendend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_langhaftend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_pflegend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_regenierend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reinigend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reparierend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_revitalisierend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_schützend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_stärkend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_straffend:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_feuchtigkeitsspendend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_pflegend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reinigend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_schützend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_anti-aging:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_langhaftend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_beruhigend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_stärkend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_festigend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_straffend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_Anti-Pollution:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_revitalisierend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_reparierend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:char_regenierend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parabenfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_sulfatfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_amoniakfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_acetonfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_paraffinfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_laktosefrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_glutenfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_mikroplastik-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_für sensible Haut geeignet:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_silikonfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_vegan:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_alkoholfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_komedogen-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_farbstoff-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_ohne ölige Inhaltsstoffe:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_palmöl-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_Clean Beauty:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_konservierungsstoff-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parfümfrei:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rating:ok]' member='4' />
              <groupfilter function='member' level='[none:rating:ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]</column>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' scope='rows' value='count of rating per characteristic for rating 4 + 5 ' />
            <format attr='width' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' value='76' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' value='31' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
            <format attr='text-orientation' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' tooltip='' tooltip-type='custom' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]</rows>
        <cols>([federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok] / [federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{9632C00C-5FE7-462D-B9DA-14EFD9061A18}' />
    </worksheet>
    <worksheet name='EFFECT'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x EFFECT </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of ratings per effect  </run>
            <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column datatype='integer' name='[awa_Clean Beauty]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_acetonfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_alkoholfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_amoniakfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_farbstoff-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_für sensible Haut geeignet]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_glutenfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_komedogen-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_konservierungsstoff-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_laktosefrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_mikroplastik-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_ohne ölige Inhaltsstoffe]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_palmöl-frei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_parabenfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_paraffinfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_parfümfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_silikonfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_sulfatfrei]' role='measure' type='quantitative' />
            <column datatype='integer' name='[awa_vegan]' role='measure' type='quantitative' />
            <column datatype='integer' name='[eff_aufhellend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[eff_farberhaltend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[eff_formend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[eff_glanzverleihend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[eff_glättend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[eff_verdichtend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[eff_verlängernd]' role='measure' type='quantitative' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[awa_Clean Beauty]' derivation='Sum' name='[sum:awa_Clean Beauty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_acetonfrei]' derivation='Sum' name='[sum:awa_acetonfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_alkoholfrei]' derivation='Sum' name='[sum:awa_alkoholfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_amoniakfrei]' derivation='Sum' name='[sum:awa_amoniakfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_farbstoff-frei]' derivation='Sum' name='[sum:awa_farbstoff-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_für sensible Haut geeignet]' derivation='Sum' name='[sum:awa_für sensible Haut geeignet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_glutenfrei]' derivation='Sum' name='[sum:awa_glutenfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_komedogen-frei]' derivation='Sum' name='[sum:awa_komedogen-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_konservierungsstoff-frei]' derivation='Sum' name='[sum:awa_konservierungsstoff-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_laktosefrei]' derivation='Sum' name='[sum:awa_laktosefrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_mikroplastik-frei]' derivation='Sum' name='[sum:awa_mikroplastik-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_ohne ölige Inhaltsstoffe]' derivation='Sum' name='[sum:awa_ohne ölige Inhaltsstoffe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_palmöl-frei]' derivation='Sum' name='[sum:awa_palmöl-frei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_parabenfrei]' derivation='Sum' name='[sum:awa_parabenfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_paraffinfrei]' derivation='Sum' name='[sum:awa_paraffinfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_parfümfrei]' derivation='Sum' name='[sum:awa_parfümfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_silikonfrei]' derivation='Sum' name='[sum:awa_silikonfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_sulfatfrei]' derivation='Sum' name='[sum:awa_sulfatfrei:qk]' pivot='key' type='quantitative' />
            <column-instance column='[awa_vegan]' derivation='Sum' name='[sum:awa_vegan:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eff_aufhellend]' derivation='Sum' name='[sum:eff_aufhellend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eff_farberhaltend]' derivation='Sum' name='[sum:eff_farberhaltend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eff_formend]' derivation='Sum' name='[sum:eff_formend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eff_glanzverleihend]' derivation='Sum' name='[sum:eff_glanzverleihend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eff_glättend]' derivation='Sum' name='[sum:eff_glättend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eff_verdichtend]' derivation='Sum' name='[sum:eff_verdichtend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eff_verlängernd]' derivation='Sum' name='[sum:eff_verlängernd:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_aufhellend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_farberhaltend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_formend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glanzverleihend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glättend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verdichtend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verlängernd:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glättend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_glanzverleihend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_farberhaltend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_aufhellend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_formend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verdichtend:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:eff_verlängernd:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parabenfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_sulfatfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_amoniakfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_acetonfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_paraffinfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_laktosefrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_glutenfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_mikroplastik-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_für sensible Haut geeignet:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_silikonfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_vegan:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_alkoholfrei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_komedogen-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_farbstoff-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_ohne ölige Inhaltsstoffe:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_palmöl-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_Clean Beauty:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_konservierungsstoff-frei:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:awa_parfümfrei:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rating:ok]' member='4' />
              <groupfilter function='member' level='[none:rating:ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]</column>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' scope='rows' value='count of rating per effect for rating 4 + 5 ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' value='43' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
            <format attr='text-orientation' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]</rows>
        <cols>([federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok] / [federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{32235B97-B90E-4171-A7F6-C0FF8D0C5008}' />
    </worksheet>
    <worksheet name='PRICE_RANGE'>
      <layout-options>
        <title>
          <formatted-text>
            <run>PRICE BIN x PRODUCT ID </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of products per  price bin. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column caption='Calculation_price_bin' datatype='string' name='[Calculation_1405686075856506882]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [price] &lt;= 0 then &quot;0-5&quot;&#13;&#10;elseif [price] &lt; 5 then &quot;5-10&quot;&#13;&#10;elseif [price] &lt; 10 then &quot;10-20&quot;&#13;&#10;elseif [price] &lt; 20 then &quot;20-30&quot;&#13;&#10;elseif [price] &lt; 30 then &quot;30-40&quot;&#13;&#10;elseif [price] &lt; 40 then &quot;40-50&quot;&#13;&#10;elseif [price] &lt; 50 then &quot;50-60&quot;&#13;&#10;elseif [price] &lt; 60 then &quot;60-70&quot;&#13;&#10;elseif [price] &lt; 70 then &quot;70-80&quot;&#13;&#10;elseif [price] &lt; 80 then &quot;80-90&quot;&#13;&#10;elseif [price] &lt; 90 then &quot;90-100&quot;&#13;&#10;elseif [price] &lt; 100 then &quot;100-110&quot;&#13;&#10;elseif [price] &lt; 110 then &quot;110-120&quot;&#13;&#10;elseif [price] &lt; 120 then &quot;120-130&quot;&#13;&#10;elseif [price] &lt; 130 then &quot;130-140&quot;&#13;&#10;elseif [price] &lt; 140 then &quot;140-150&quot;&#13;&#10;elseif [price] &lt; 150 and [price] &gt; 200 then &quot;150-200&quot;&#13;&#10;else &quot;200+&quot; &#13;&#10;end' />
            </column>
            <column-instance column='[item_nb]' derivation='Count' name='[cnt:item_nb:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[item_nb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1405686075856506882]' derivation='None' name='[none:Calculation_1405686075856506882:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[item_nb]' derivation='Sum' name='[sum:item_nb:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:item_nb:qk]' />
              <size column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C7861A43-F5B1-433B-BAEF-7556710F2E14}' />
    </worksheet>
    <worksheet name='PRICE_RATING'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x PRICE </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>S</run>
            <run>hows the average rating of each price bin (column height) and the count of ratings per  price bin (marks are labeled by count of rating). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column auto-hidden='true' caption='Clusters (2)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:3]' parent-model='[AnalyticModel:{8ba1d550-1797-40a4-9cbb-6396cc837388}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Calculation_price_bin' datatype='string' name='[Calculation_1405686075856506882]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [price] &lt;= 0 then &quot;0-5&quot;&#13;&#10;elseif [price] &lt; 5 then &quot;5-10&quot;&#13;&#10;elseif [price] &lt; 10 then &quot;10-20&quot;&#13;&#10;elseif [price] &lt; 20 then &quot;20-30&quot;&#13;&#10;elseif [price] &lt; 30 then &quot;30-40&quot;&#13;&#10;elseif [price] &lt; 40 then &quot;40-50&quot;&#13;&#10;elseif [price] &lt; 50 then &quot;50-60&quot;&#13;&#10;elseif [price] &lt; 60 then &quot;60-70&quot;&#13;&#10;elseif [price] &lt; 70 then &quot;70-80&quot;&#13;&#10;elseif [price] &lt; 80 then &quot;80-90&quot;&#13;&#10;elseif [price] &lt; 90 then &quot;90-100&quot;&#13;&#10;elseif [price] &lt; 100 then &quot;100-110&quot;&#13;&#10;elseif [price] &lt; 110 then &quot;110-120&quot;&#13;&#10;elseif [price] &lt; 120 then &quot;120-130&quot;&#13;&#10;elseif [price] &lt; 130 then &quot;130-140&quot;&#13;&#10;elseif [price] &lt; 140 then &quot;140-150&quot;&#13;&#10;elseif [price] &lt; 150 and [price] &gt; 200 then &quot;150-200&quot;&#13;&#10;else &quot;200+&quot; &#13;&#10;end' />
            </column>
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:3]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1405686075856506882]' derivation='None' name='[none:Calculation_1405686075856506882:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[price]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:3:ok]' type='palette'>
                  <map to='#499894'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#79706e'>
                    <bucket>12</bucket>
                  </map>
                  <map to='#86bcb6'>
                    <bucket>10</bucket>
                  </map>
                  <map to='#8cd17d'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#b6992d'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#bab0ac'>
                    <bucket>13</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f1ce63'>
                    <bucket>8</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#ff9d9a'>
                    <bucket>11</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by price bin' />
            <encoding attr='space' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' field-type='quantitative' max='4.3787750385208017' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
            <format attr='text-orientation' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:3:ok]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:rating:qk]' />
              <lod column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='table average 3.88 ' label-type='custom' probability='95' scope='per-table' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</rows>
        <cols>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</cols>
      </table>
      <simple-id uuid='{EB948F87-E5FE-4A3B-9F6B-3E8A7234C3CA}' />
    </worksheet>
    <worksheet name='SCOPES'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SCOPE x PRODUCT ID</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of products per scope.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[item_nb]' derivation='Count' name='[cnt:item_nb:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[item_nb]' role='measure' type='quantitative' />
            <column-instance column='[scope]' derivation='None' name='[none:scope:nk]' pivot='key' type='nominal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <column datatype='string' name='[scope]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Augen&quot;' value='Eyes' />
                <alias key='&quot;Augenbrauen&quot;' value='Eyebrows' />
                <alias key='&quot;Gesicht&quot;' value='Face' />
                <alias key='&quot;Haare&quot;' value='Hair' />
                <alias key='&quot;Hals&quot;' value='Neck' />
                <alias key='&quot;Hände&quot;' value='Hands' />
                <alias key='&quot;Körper&quot;' value='Body' />
                <alias key='&quot;Mund&quot;' value='Mouth' />
                <alias key='&quot;Nägel&quot;' value='Nails' />
                <alias key='&quot;Wimpern&quot;' value='Eyelashes' />
              </aliases>
            </column>
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='531' />
            <format attr='width' value='452' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]' />
              <size column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>437</value>
                <value>&quot;Augenbrauen&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>789</value>
                <value>&quot;Wimpern&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>737</value>
                <value>&quot;Nägel&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>424</value>
                <value>&quot;Hals&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</field>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
                  <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:rating:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4.151048951048951</value>
                <value>703</value>
                <value>&quot;Hände&quot;</value>
                <value>2968</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{CD64D0E9-AC75-4415-B032-069855BB1752}' />
    </worksheet>
    <worksheet name='SCOPE_RATING'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x SCOPE&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>S</run>
            <run>hows the average rating of each scope(column height) and the count of ratings per categroy (marks are labeled by count of rating). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{8b58d1fe-8528-4153-b971-77b84f2fae9b}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[scope]' derivation='None' name='[none:scope:nk]' pivot='key' type='nominal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <column datatype='string' name='[scope]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Augen&quot;' value='Eyes' />
                <alias key='&quot;Augenbrauen&quot;' value='Eyebrows' />
                <alias key='&quot;Gesicht&quot;' value='Face' />
                <alias key='&quot;Haare&quot;' value='Hair' />
                <alias key='&quot;Hals&quot;' value='Neck' />
                <alias key='&quot;Hände&quot;' value='Hands' />
                <alias key='&quot;Körper&quot;' value='Body' />
                <alias key='&quot;Mund&quot;' value='Mouth' />
                <alias key='&quot;Nägel&quot;' value='Nails' />
                <alias key='&quot;Wimpern&quot;' value='Eyelashes' />
              </aliases>
            </column>
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by scope ' />
            <encoding attr='space' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' field-type='quantitative' max='4.5480965026821014' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
            <format attr='text-orientation' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:2:ok]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:rating:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='table average 4,06 ' label-type='custom' probability='95' scope='per-table' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</rows>
        <cols>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</cols>
      </table>
      <simple-id uuid='{6B1B3195-9F1D-4EA1-BE05-6FD2E946789F}' />
    </worksheet>
    <worksheet name='SIZE'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SIZE BIN x PRODUCT ID</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of products per  size bin. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column caption='Calculation_size_bin' datatype='string' name='[Calculation_1405686075869478915]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [size] &lt;= 25 then &quot;1-25&quot;&#13;&#10;elseif [size] &lt; 50 then &quot;25-50&quot;&#13;&#10;elseif [size] &lt; 75 then &quot;50-75&quot;&#13;&#10;elseif [size] &lt; 100 then &quot;75-100&quot;&#13;&#10;elseif [size] &lt; 125 then &quot;100-125&quot;&#13;&#10;elseif [size] &lt; 150 then &quot;125-150&quot;&#13;&#10;elseif [size] &lt; 200 then &quot;150-200&quot;&#13;&#10;elseif [size] &lt; 500 then &quot;200-500&quot;&#13;&#10;else &quot;500+&quot; &#13;&#10;end' />
            </column>
            <column-instance column='[item_nb]' derivation='Count' name='[cnt:item_nb:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[item_nb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1405686075869478915]' derivation='None' name='[none:Calculation_1405686075869478915:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[size]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' value='' />
            <format attr='width' value='947' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075869478915:nk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8CAA854F-6051-4214-98BC-4D15C7B5A004}' />
    </worksheet>
    <worksheet name='SIZE_RATING'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x SIZE BIN</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>S</run>
            <run>hows the average rating of each size bin (column height) and the count of ratings per  size bin (marks are labeled by count of rating). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column caption='Calculation_size_bin' datatype='string' name='[Calculation_1405686075869478915]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [size] &lt;= 25 then &quot;1-25&quot;&#13;&#10;elseif [size] &lt; 50 then &quot;25-50&quot;&#13;&#10;elseif [size] &lt; 75 then &quot;50-75&quot;&#13;&#10;elseif [size] &lt; 100 then &quot;75-100&quot;&#13;&#10;elseif [size] &lt; 125 then &quot;100-125&quot;&#13;&#10;elseif [size] &lt; 150 then &quot;125-150&quot;&#13;&#10;elseif [size] &lt; 200 then &quot;150-200&quot;&#13;&#10;elseif [size] &lt; 500 then &quot;200-500&quot;&#13;&#10;else &quot;500+&quot; &#13;&#10;end' />
            </column>
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1405686075869478915]' derivation='None' name='[none:Calculation_1405686075869478915:nk]' pivot='key' type='nominal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[size]' role='measure' type='quantitative' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[win:avg:rating:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1wozqji1a1a2lx17llt5118pipx6].[win:avg:rating:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075869478915:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[win:avg:rating:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' field-type='quantitative' max='4.5410761740873049' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by size bin ' />
            <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075869478915:nk]' value='67' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[win:avg:rating:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:rating:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='table average 4,10 ' label-type='custom' probability='95' scope='per-table' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</rows>
        <cols>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075869478915:nk]</cols>
        <show-full-range>
          <column>[federated.1wozqji1a1a2lx17llt5118pipx6].[size (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{B3223C5E-5F1F-42A5-AF0D-E900E25F2E1C}' />
    </worksheet>
    <worksheet name='TYPE'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TYPE x PRODUCT ID</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Shows the amount of products per type.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column-instance column='[item_nb]' derivation='Count' name='[cnt:item_nb:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[item_nb]' role='measure' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Anti-Aging Pflege&quot;' value='anti-aging-products' />
                <alias key='&quot;AugenbrauenWimpernstyling&quot;' value='eyebrow + lash styling ' />
                <alias key='&quot;Augenpflege&quot;' value='eye care' />
                <alias key='&quot;Badezusatz&quot;' value='bath additive' />
                <alias key='&quot;Bartpflege&quot;' value='beard grooming' />
                <alias key='&quot;Beautytools&quot;' value='beauty tools' />
                <alias key='&quot;Bodylotion&quot;' value='bodylotion' />
                <alias key='&quot;Concealer&quot;' value='concealer' />
                <alias key='&quot;Creme&quot;' value='cream' />
                <alias key='&quot;Deodorant&quot;' value='deodorant' />
                <alias key='&quot;Duschgel&quot;' value='shower gel' />
                <alias key='&quot;Eau de Cologne&quot;' value='eau de cologne' />
                <alias key='&quot;Eau de Parfum&quot;' value='eau de parfum' />
                <alias key='&quot;Eau de Toilette&quot;' value='eau de toilette' />
                <alias key='&quot;Enthaarungsprodukt&quot;' value='depilation product' />
                <alias key='&quot;Foundation&quot;' value='foundation' />
                <alias key='&quot;Fusspflege&quot;' value='foot care' />
                <alias key='&quot;Geschenkset&quot;' value='gift set' />
                <alias key='&quot;Gesichtscreme&quot;' value='face cream' />
                <alias key='&quot;Gesichtspflege&quot;' value='facial care' />
                <alias key='&quot;Gesichtsreinigung&quot;' value='facial cleansing' />
                <alias key='&quot;GesichtsSpayWasser&quot;' value='facial toner + spray' />
                <alias key='&quot;Haarprodukt&quot;' value='hair product' />
                <alias key='&quot;Haarshampoo&quot;' value='shampoo' />
                <alias key='&quot;Handpflege&quot;' value='hand care' />
                <alias key='&quot;Highlighter&quot;' value='highlighter' />
                <alias key='&quot;KajalEyeliner&quot;' value='kajal + eyeliner' />
                <alias key='&quot;Körperpflege&quot;' value='personal hygiene' />
                <alias key='&quot;Künstliche Wimpern&quot;' value='eyelashes' />
                <alias key='&quot;Lidschatten&quot;' value='eyeshadow' />
                <alias key='&quot;Lipgloss&quot;' value='lip gloss' />
                <alias key='&quot;Lippenbalm&quot;' value='lip balm' />
                <alias key='&quot;Lippenpflege&quot;' value='lip care' />
                <alias key='&quot;Lippenstift&quot;' value='lipstick' />
                <alias key='&quot;Make-up Set&quot;' value='make-up set' />
                <alias key='&quot;Mascara&quot;' value='mascara' />
                <alias key='&quot;Maske&quot;' value='mask' />
                <alias key='&quot;Mode-Accessoires&quot;' value='fashion accessories' />
                <alias key='&quot;Nagellack&quot;' value='nail polish' />
                <alias key='&quot;Parfum&quot;' value='parfume' />
                <alias key='&quot;Peeling&quot;' value='peeling' />
                <alias key='&quot;Pinsel&quot;' value='brush' />
                <alias key='&quot;Primer&quot;' value='primer' />
                <alias key='&quot;PuderRougeBronzer&quot;' value='powder + rouge + bronzer' />
                <alias key='&quot;Schmuck&quot;' value='jewellery' />
                <alias key='&quot;Seife&quot;' value='soap' />
                <alias key='&quot;SerumÖle&quot;' value='serum + oil' />
                <alias key='&quot;Sonnenprodukte&quot;' value='sun products' />
              </aliases>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{06A14F3C-81FE-4A52-95B6-3D56F993B694}' />
    </worksheet>
    <worksheet name='TYPE_RATING'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RATING x TYPE&#10;&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>S</run>
            <run>hows the average rating of each type (column height) and the count of ratings per type (marks are labeled by count of rating). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_explored' name='federated.1wozqji1a1a2lx17llt5118pipx6' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='price Parameter' datatype='integer' name='[price Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wozqji1a1a2lx17llt5118pipx6'>
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column datatype='integer' datatype-customized='true' name='[rating]' role='dimension' type='ordinal' />
            <column datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Anti-Aging Pflege&quot;' value='anti-aging-products' />
                <alias key='&quot;AugenbrauenWimpernstyling&quot;' value='eyebrow + lash styling ' />
                <alias key='&quot;Augenpflege&quot;' value='eye care' />
                <alias key='&quot;Badezusatz&quot;' value='bath additive' />
                <alias key='&quot;Bartpflege&quot;' value='beard grooming' />
                <alias key='&quot;Beautytools&quot;' value='beauty tools' />
                <alias key='&quot;Bodylotion&quot;' value='bodylotion' />
                <alias key='&quot;Concealer&quot;' value='concealer' />
                <alias key='&quot;Creme&quot;' value='cream' />
                <alias key='&quot;Deodorant&quot;' value='deodorant' />
                <alias key='&quot;Duschgel&quot;' value='shower gel' />
                <alias key='&quot;Eau de Cologne&quot;' value='eau de cologne' />
                <alias key='&quot;Eau de Parfum&quot;' value='eau de parfum' />
                <alias key='&quot;Eau de Toilette&quot;' value='eau de toilette' />
                <alias key='&quot;Enthaarungsprodukt&quot;' value='depilation product' />
                <alias key='&quot;Foundation&quot;' value='foundation' />
                <alias key='&quot;Fusspflege&quot;' value='foot care' />
                <alias key='&quot;Geschenkset&quot;' value='gift set' />
                <alias key='&quot;Gesichtscreme&quot;' value='face cream' />
                <alias key='&quot;Gesichtspflege&quot;' value='facial care' />
                <alias key='&quot;Gesichtsreinigung&quot;' value='facial cleansing' />
                <alias key='&quot;GesichtsSpayWasser&quot;' value='facial toner + spray' />
                <alias key='&quot;Haarprodukt&quot;' value='hair product' />
                <alias key='&quot;Haarshampoo&quot;' value='shampoo' />
                <alias key='&quot;Handpflege&quot;' value='hand care' />
                <alias key='&quot;Highlighter&quot;' value='highlighter' />
                <alias key='&quot;KajalEyeliner&quot;' value='kajal + eyeliner' />
                <alias key='&quot;Körperpflege&quot;' value='personal hygiene' />
                <alias key='&quot;Künstliche Wimpern&quot;' value='eyelashes' />
                <alias key='&quot;Lidschatten&quot;' value='eyeshadow' />
                <alias key='&quot;Lipgloss&quot;' value='lip gloss' />
                <alias key='&quot;Lippenbalm&quot;' value='lip balm' />
                <alias key='&quot;Lippenpflege&quot;' value='lip care' />
                <alias key='&quot;Lippenstift&quot;' value='lipstick' />
                <alias key='&quot;Make-up Set&quot;' value='make-up set' />
                <alias key='&quot;Mascara&quot;' value='mascara' />
                <alias key='&quot;Maske&quot;' value='mask' />
                <alias key='&quot;Mode-Accessoires&quot;' value='fashion accessories' />
                <alias key='&quot;Nagellack&quot;' value='nail polish' />
                <alias key='&quot;Parfum&quot;' value='parfume' />
                <alias key='&quot;Peeling&quot;' value='peeling' />
                <alias key='&quot;Pinsel&quot;' value='brush' />
                <alias key='&quot;Primer&quot;' value='primer' />
                <alias key='&quot;PuderRougeBronzer&quot;' value='powder + rouge + bronzer' />
                <alias key='&quot;Schmuck&quot;' value='jewellery' />
                <alias key='&quot;Seife&quot;' value='soap' />
                <alias key='&quot;SerumÖle&quot;' value='serum + oil' />
                <alias key='&quot;Sonnenprodukte&quot;' value='sun products' />
              </aliases>
            </column>
          </datasource-dependencies>
          <computed-sort column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]' direction='DESC' using='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by type' />
            <encoding attr='space' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' field-type='quantitative' max='4.5480965026821014' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]' value='239' />
            <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]' value='23' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[price Parameter]' value='' />
            <format attr='text-orientation' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]' value='-90' />
            <format attr='font-size' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' value='8' />
            <format attr='text-format' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' value='N' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='in-tooltip' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]' />
              <text column='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:rating:qk]' />
              <lod column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='table average 4,06' label-type='custom' probability='95' scope='per-pane' value-column='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</rows>
        <cols>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]</cols>
      </table>
      <simple-id uuid='{FEB546A1-468D-4D5A-8CF5-7BC54E044549}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='D_AWA'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88500' id='3' name='AWARD_RATING' show-title='false' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='9500' id='5' type-v2='text' w='98400' x='800' y='89500'>
            <formatted-text>
              <run bold='true' fontname='Tableau Book,serif'>Graph:</run>
              <run fontname='Tableau Book,serif'>Æ  </run>
              <run>Shows the amount of ratings per </run>
              <run fontname='Tableau Book,serif'>product award</run>
              <run>Æ </run>
              <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
              <run>Æ&#10;</run>
              <run bold='true' fontname='Tableau Book,serif'>Conclusion: </run>
              <run>Ammonia-free, sulfat-free are only used for hair products. Acetone-free is only used for nailpolish. Paraben, paraffin, lactose, micro-plastic and gluten are part of  lot of different beauty products. </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='24' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='88500' id='3' is-fixed='true' name='AWARD_RATING' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9500' id='5' type-v2='text' w='98400' x='800' y='89500'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Book,serif'>Graph:</run>
                    <run fontname='Tableau Book,serif'>Æ  </run>
                    <run>Shows the amount of ratings per </run>
                    <run fontname='Tableau Book,serif'>product award</run>
                    <run>Æ </run>
                    <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontname='Tableau Book,serif'>Conclusion: </run>
                    <run>Ammonia-free, sulfat-free are only used for hair products. Acetone-free is only used for nailpolish. Paraben, paraffin, lactose, micro-plastic and gluten are part of  lot of different beauty products. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6864196C-210D-4FFF-AC5A-4D8A41722C24}' />
    </dashboard>
    <dashboard name='D_CATEGORY'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='52000' id='3' name='CATEGORY_RATING' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46000' id='9' name='CATEGORY' show-title='false' w='49200' x='800' y='53000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='46000' id='18' type-v2='text' w='49200' x='50000' y='53000'>
                <formatted-text>
                  <run bold='true'>Top: </run>
                  <run>Æ&#10;</run>
                  <run bold='true'>S</run>
                  <run>hows the average rating of each category (column height) and the count of ratings per categroy (marks are labeled by count of rating). 

</run>
                  <run bold='true'>Left:</run>
                  <run> 
Shows the amount of products per category.

</run>
                  <run bold='true'>Conclusion:</run>
                  <run>
Parfum, body and face are the categories with the highest average ratings. Body has the least products in the dataset and therefore has the least competition for a new product. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='39' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='52000' id='3' is-fixed='true' name='CATEGORY_RATING' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46000' id='9' is-fixed='true' name='CATEGORY' show-title='false' w='49200' x='800' y='53000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='46000' id='18' type-v2='text' w='49200' x='50000' y='53000'>
                  <formatted-text>
                    <run bold='true'>Top: </run>
                    <run>Æ&#10;</run>
                    <run bold='true'>S</run>
                    <run>hows the average rating of each category (column height) and the count of ratings per categroy (marks are labeled by count of rating). 

</run>
                    <run bold='true'>Left:</run>
                    <run> 
Shows the amount of products per category.

</run>
                    <run bold='true'>Conclusion:</run>
                    <run>
Parfum, body and face are the categories with the highest average ratings. Body has the least products in the dataset and therefore has the least competition for a new product. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7B8AD02F-45A2-4550-BD36-CC5610283632}' />
    </dashboard>
    <dashboard name='D_EFF_CHA'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='10' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='45875' id='11' name='EFFECT' show-title='false' w='98400' x='800' y='1000'>
                  <layout-cache minheight='241' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6250' id='27' type-v2='text' w='98400' x='800' y='46875'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Book,serif'>Graphs:</run>
                    <run fontname='Tableau Book,serif'>Æ  </run>
                    <run>Shows the amount of ratings per effect (Top) and per  </run>
                    <run fontname='Tableau Book,serif'>charakteristic</run>
                    <run>  (Low)  </run>
                    <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontname='Tableau Book,serif'>Conclusion: </run>
                    <run fontname='Tableau Book,serif'>Smoothing, gloss-imparting are the most rated effects. Moisturizing, nourishinig are the most rated charakteristics.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45875' id='12' name='CHARACTERISTIC' show-title='false' w='98400' x='800' y='53125'>
                  <layout-cache minheight='241' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='46' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='45875' id='11' is-fixed='true' name='EFFECT' show-title='false' w='98400' x='800' y='1000'>
                  <layout-cache minheight='241' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6250' id='27' type-v2='text' w='98400' x='800' y='46875'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Book,serif'>Graphs:</run>
                    <run fontname='Tableau Book,serif'>Æ  </run>
                    <run>Shows the amount of ratings per effect (Top) and per  </run>
                    <run fontname='Tableau Book,serif'>charakteristic</run>
                    <run>  (Low)  </run>
                    <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontname='Tableau Book,serif'>Conclusion: </run>
                    <run fontname='Tableau Book,serif'>Smoothing, gloss-imparting are the most rated effects. Moisturizing, nourishinig are the most rated charakteristics.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45875' id='12' is-fixed='true' name='CHARACTERISTIC' show-title='false' w='98400' x='800' y='53125'>
                  <layout-cache minheight='241' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0958AD7B-CC9D-4910-89F4-CA562D8F3326}' />
    </dashboard>
    <dashboard name='D_PRICE'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='38' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='PRICE_RATING' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='35' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98400' x='800' y='50000'>
                <zone fixed-size='352' h='49000' id='36' is-fixed='true' name='PRICE_RANGE' show-title='false' w='49200' x='800' y='50000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49000' id='39' type-v2='text' w='49200' x='50000' y='50000'>
                  <formatted-text>
                    <run bold='true'>Top: </run>
                    <run>Æ&#10;</run>
                    <run bold='true'>S</run>
                    <run>hows the average rating of each price bin (column height) and the count of ratings per  price bin (marks are labeled by count of rating). 

</run>
                    <run bold='true'>Left:</run>
                    <run> 
Shows the amount of products per  price bin. 

</run>
                    <run bold='true'>Conclusion:</run>
                    <run>
The price bin 70-80  is the bin with the highest average rating. This price bin has  not that much products in the dataset and therefore has not a big competition for a new product. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='54' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='PRICE_RATING' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='36' is-fixed='true' name='PRICE_RANGE' show-title='false' w='49200' x='800' y='50000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49000' id='39' type-v2='text' w='49200' x='50000' y='50000'>
                  <formatted-text>
                    <run bold='true'>Top: </run>
                    <run>Æ&#10;</run>
                    <run bold='true'>S</run>
                    <run>hows the average rating of each price bin (column height) and the count of ratings per  price bin (marks are labeled by count of rating). 

</run>
                    <run bold='true'>Left:</run>
                    <run> 
Shows the amount of products per  price bin. 

</run>
                    <run bold='true'>Conclusion:</run>
                    <run>
The price bin 70-80  is the bin with the highest average rating. This price bin has  not that much products in the dataset and therefore has not a big competition for a new product. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{92A66CCA-6E38-4CE5-94D1-22602E18E26D}' />
    </dashboard>
    <dashboard name='D_SCOPE'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
          <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
            <zone h='65625' id='3' name='SCOPES' show-title='false' w='50600' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='98000' id='5' param='horz' type-v2='layout-flow' w='47800' x='51400' y='1000'>
              <zone h='98000' id='6' name='SCOPE_RATING' show-title='false' w='47800' x='51400' y='1000'>
                <layout-cache cell-count-w='11' minheight='200' non-cell-size-w='64' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone forceUpdate='true' h='32375' id='11' type-v2='text' w='50600' x='800' y='66625'>
              <formatted-text>
                <run bold='true'>Top: </run>
                <run>Æ&#10;</run>
                <run bold='true'>S</run>
                <run>hows the average rating of each scope(column height) and the count of ratings per categroy (marks are labeled by count of rating). 

</run>
                <run bold='true'>Right:</run>
                <run> 
Shows the amount of products per scope.

</run>
                <run bold='true'>Conclusion:</run>
                <run>
Body and hands are the scopes with the highest average ratings. Hands has the least products in the dataset and therefore has the least competition for a new product. </run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='48' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='65625' id='3' is-fixed='true' name='SCOPES' show-title='false' w='50600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='6' is-fixed='true' name='SCOPE_RATING' show-title='false' w='47800' x='51400' y='1000'>
                  <layout-cache cell-count-w='11' minheight='200' non-cell-size-w='64' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='32375' id='11' type-v2='text' w='50600' x='800' y='66625'>
                  <formatted-text>
                    <run bold='true'>Top: </run>
                    <run>Æ&#10;</run>
                    <run bold='true'>S</run>
                    <run>hows the average rating of each scope(column height) and the count of ratings per categroy (marks are labeled by count of rating). 

</run>
                    <run bold='true'>Right:</run>
                    <run> 
Shows the amount of products per scope.

</run>
                    <run bold='true'>Conclusion:</run>
                    <run>
Body and hands are the scopes with the highest average ratings. Hands has the least products in the dataset and therefore has the least competition for a new product. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1E945C2F-A2BE-46C9-A5B6-E9075959E46C}' />
    </dashboard>
    <dashboard name='D_SIZE'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='41500' id='1' name='SIZE' show-title='false' w='98400' x='800' y='57500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='56500' id='6' name='SIZE_RATING' show-title='false' w='61400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='56500' id='9' type-v2='text' w='37000' x='62200' y='1000'>
                <formatted-text>
                  <run bold='true'>Left: </run>
                  <run>Æ&#10;</run>
                  <run bold='true'>S</run>
                  <run>hows the average rating of each size bin (column height) and the count of ratings per  size bin (marks are labeled by count of rating). 

</run>
                  <run bold='true'>Below:</run>
                  <run> 
Shows the amount of products per  size bin. 

</run>
                  <run bold='true'>Conclusion:</run>
                  <run>
The size bin 75-100 is the bin with the highest average rating. This size bin has  not that much products in the dataset and therefore has not a big competition for a new product. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='30' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='56500' id='6' is-fixed='true' name='SIZE_RATING' show-title='false' w='61400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='56500' id='9' type-v2='text' w='37000' x='62200' y='1000'>
                  <formatted-text>
                    <run bold='true'>Left: </run>
                    <run>Æ&#10;</run>
                    <run bold='true'>S</run>
                    <run>hows the average rating of each size bin (column height) and the count of ratings per  size bin (marks are labeled by count of rating). 

</run>
                    <run bold='true'>Below:</run>
                    <run> 
Shows the amount of products per  size bin. 

</run>
                    <run bold='true'>Conclusion:</run>
                    <run>
The size bin 75-100 is the bin with the highest average rating. This size bin has  not that much products in the dataset and therefore has not a big competition for a new product. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41500' id='1' is-fixed='true' name='SIZE' show-title='false' w='98400' x='800' y='57500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{00D0068B-07DB-427F-B09F-E9508279DF5D}' />
    </dashboard>
    <dashboard name='D_TYPE '>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='74000' id='7' param='horz' type-v2='layout-flow' w='98666' x='667' y='1000'>
            <zone h='74000' id='5' type-v2='layout-basic' w='98666' x='667' y='1000'>
              <zone h='74000' id='3' name='TYPE_RATING' show-title='false' w='98666' x='667' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='24000' id='12' type-v2='text' w='98666' x='667' y='75000'>
            <formatted-text>
              <run bold='true'>Graph: </run>
              <run>Æ&#10;</run>
              <run bold='true'>S</run>
              <run>hows the average rating of each type (column height) and the count of ratings per type (marks are labeled by count of rating). 

</run>
              <run bold='true'>Conclusion:</run>
              <run>
Eau de toilette, bath additive, a gift set and body lotion are the types with the highest average ratings. Bath additive (195) and bodylotion (515) have the least products in the dataset (eau de toilette 1.072) and therefore has the least competition for a new product. Gift set is not specific enough to derive something from it. </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='31' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='74000' id='3' is-fixed='true' name='TYPE_RATING' show-title='false' w='98666' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='24000' id='12' type-v2='text' w='98666' x='667' y='75000'>
                  <formatted-text>
                    <run bold='true'>Graph: </run>
                    <run>Æ&#10;</run>
                    <run bold='true'>S</run>
                    <run>hows the average rating of each type (column height) and the count of ratings per type (marks are labeled by count of rating). 

</run>
                    <run bold='true'>Conclusion:</run>
                    <run>
Eau de toilette, bath additive, a gift set and body lotion are the types with the highest average ratings. Bath additive (195) and bodylotion (515) have the least products in the dataset (eau de toilette 1.072) and therefore has the least competition for a new product. Gift set is not specific enough to derive something from it. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B4951AF0-24D6-429F-ACC4-2859BCB90045}' />
    </dashboard>
    <dashboard name='STORY' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CREATE THE PERFECT BEAUTY PRODUCT</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_11' value='#ffffff' />
          <format attr='text-orientation' id='story-description_11' value='0' />
          <format attr='border-style' id='story-description_11' value='dotted' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='731' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='9' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='5807' id='10' type-v2='title' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92335' id='7' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='6736'>
              <zone h='92335' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='6736'>
                <zone h='11731' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='6736' />
                <zone h='80604' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='18467'>
                  <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='THE PERFECT CATEGORY (body) ' captured-sheet='D_CATEGORY' id='6'>
                        <capturedDeltas>
                          <worksheet name='CATEGORY_RATING'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by category' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <dashboard name='D_CATEGORY'>
                            <zone id='18'>
                              <formatted-text>
                                <run bold='true'>Top: </run>
                                <run>Æ&#10;</run>
                                <run bold='true'>S</run>
                                <run>hows the average rating of each category (column height) and the count of ratings per categroy (marks are labeled by count of rating). 

</run>
                                <run bold='true'>Left:</run>
                                <run> 
Shows the amount of products per category.

</run>
                                <run bold='true'>Conclusion:</run>
                                <run>
Parfum, body and face are the categories with the highest average ratings. Body has the least products in the dataset and therefore has the least competition for a new product. </run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='THE PERFECT SCOPE (hands) ' captured-sheet='D_SCOPE' id='2'>
                        <capturedDeltas>
                          <dashboard name='D_SCOPE'>
                            <zone id='11'>
                              <formatted-text>
                                <run bold='true'>Top: </run>
                                <run>Æ&#10;</run>
                                <run bold='true'>S</run>
                                <run>hows the average rating of each scope(column height) and the count of ratings per categroy (marks are labeled by count of rating). 

</run>
                                <run bold='true'>Right:</run>
                                <run> 
Shows the amount of products per scope.

</run>
                                <run bold='true'>Conclusion:</run>
                                <run>
Body and hands are the scopes with the highest average ratings. Hands has the least products in the dataset and therefore has the least competition for a new product. </run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                          <worksheet name='SCOPE_RATING'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
                                <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by scope' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='FIND THE PERFECT TYPE OF PRODUCT (body lotions, bath additives)' captured-sheet='D_TYPE ' id='8'>
                        <capturedDeltas>
                          <dashboard name='D_TYPE '>
                            <zone id='12'>
                              <formatted-text>
                                <run bold='true'>Graph: </run>
                                <run>Æ&#10;</run>
                                <run bold='true'>S</run>
                                <run>hows the average rating of each type (column height) and the count of ratings per type (marks are labeled by count of rating). 

</run>
                                <run bold='true'>Conclusion:</run>
                                <run>
Eau de toilette, bath additive, a gift set and body lotion are the types with the highest average ratings. Bath additive (195) and bodylotion (515) have the least products in the dataset (eau de toilette 1.072) and therefore has the least competition for a new product. Gift set is not specific enough to derive something from it. </run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                          <worksheet name='TYPE_RATING'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
                                <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by type' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='THE PERFECT PRICE (70-80 €) ' captured-sheet='D_PRICE' id='1'>
                        <capturedDeltas>
                          <dashboard name='D_PRICE'>
                            <zone id='39'>
                              <formatted-text>
                                <run bold='true'>Top: </run>
                                <run>Æ&#10;</run>
                                <run bold='true'>S</run>
                                <run>hows the average rating of each price bin (column height) and the count of ratings per  price bin (marks are labeled by count of rating). 

</run>
                                <run bold='true'>Left:</run>
                                <run> 
Shows the amount of products per  price bin. 

</run>
                                <run bold='true'>Conclusion:</run>
                                <run>
The price bin 70-80  is the bin with the highest average rating. This price bin has  not that much products in the dataset and therefore has not a big competition for a new product. 

</run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                          <worksheet name='PRICE_RATING'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
                                <encoding attr='space' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' field-type='quantitative' max='4.3787750385208017' min='3.0' range-type='fixed' scope='rows' type='space' />
                                <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating per price (€) bin  ' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='THE PERFECT SIZE (75-100 ml/g)' captured-sheet='D_SIZE' id='5'>
                        <capturedDeltas>
                          <worksheet name='SIZE_RATING'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='auto-subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='false' />
                                <format attr='subtitle' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='3-5' />
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' scope='rows' value='average rating by size (ml/g) bin' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='THE PERFECT EFFECT AND CHARACTERISTIC (E: smoothing, gloss-imparting; C: moisturizing, nourishinig)' captured-sheet='D_EFF_CHA' id='3'>
                        <capturedDeltas>
                          <worksheet name='CHARACTERISTIC'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' scope='rows' value='count of rating per characteristic' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <dashboard name='D_EFF_CHA'>
                            <zone id='27'>
                              <formatted-text>
                                <run bold='true' fontname='Tableau Book,serif'>Graphs:</run>
                                <run fontname='Tableau Book,serif'>Æ  </run>
                                <run>Shows the amount of ratings per effect (Top) and per  </run>
                                <run fontname='Tableau Book,serif'>charakteristic</run>
                                <run>  (Low)  </run>
                                <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
                                <run>Æ&#10;</run>
                                <run bold='true' fontname='Tableau Book,serif'>Conclusion: </run>
                                <run fontname='Tableau Book,serif'>Smoothing, gloss-imparting are the most rated effects. Moisturizing, nourishinig are the most rated charakteristics.</run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                          <worksheet name='EFFECT'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' scope='rows' value='count of rating per effect' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='THE PERFECT AWARD (Paraben, paraffin, lactose, micro-plastic, gluten)' captured-sheet='D_AWA' id='4'>
                        <capturedDeltas>
                          <worksheet name='AWARD_RATING'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <format attr='title' class='0' field='[federated.1wozqji1a1a2lx17llt5118pipx6].[Multiple Values]' scope='rows' value='count of rating per product award' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <dashboard name='D_AWA'>
                            <zone id='5'>
                              <formatted-text>
                                <run bold='true' fontname='Tableau Book,serif'>Graph:</run>
                                <run fontname='Tableau Book,serif'>Æ  </run>
                                <run>Shows the amount of ratings per </run>
                                <run fontname='Tableau Book,serif'>product award</run>
                                <run>Æ </run>
                                <run fontname='Tableau Book,serif'>for rating 4 + 5.</run>
                                <run>Æ&#10;</run>
                                <run bold='true' fontname='Tableau Book,serif'>Conclusion: </run>
                                <run>Ammonia-free, sulfat-free are only used for hair products. Acetone-free is only used for nailpolish. Paraben, paraffin, lactose, micro-plastic and gluten are part of  lot of different beauty products. </run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                        </capturedDeltas>
                      </story-point>
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{EA1733BA-4722-42C0-B53F-210AC7A16DCC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='dashboard' maximized='true' name='STORY'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F9548BE2-CF00-4142-B508-429220A2F276}' />
    </window>
    <window class='worksheet' name='CATEGORY_RATING' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='1' param='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA535C83-16B7-4C11-9F67-0C201E008E64}' />
    </window>
    <window class='worksheet' name='CATEGORY' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='106'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57BEE882-3F62-4AE4-84A8-F5BB0280B8F1}' />
    </window>
    <window class='dashboard' name='D_CATEGORY'>
      <viewpoints>
        <viewpoint name='CATEGORY' />
        <viewpoint name='CATEGORY_RATING'>
          <zoom type='entire-view' />
          <highlight field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E80C674B-F9E2-475C-8A6E-9A31A01ECDA5}' />
    </window>
    <window class='worksheet' name='SCOPE_RATING' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7621C0B4-8840-415C-8F0E-ED2D143E66A9}' />
    </window>
    <window class='worksheet' name='SCOPES' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='106'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{516B1C41-3210-4E0E-82AA-2C4B12DE0508}' />
    </window>
    <window class='dashboard' name='D_SCOPE'>
      <viewpoints>
        <viewpoint name='SCOPES'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SCOPE_RATING'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9746B2C9-06E3-4250-9C8B-217CB9250914}' />
    </window>
    <window class='worksheet' name='TYPE_RATING' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='104'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:category:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32F151AA-8875-4BC9-8B3E-CCCD346F221D}' />
    </window>
    <window class='worksheet' name='TYPE' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='106'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{654547D1-C2EB-4A8E-A68E-E27398AF1AF1}' />
    </window>
    <window class='dashboard' name='D_TYPE '>
      <viewpoints>
        <viewpoint name='TYPE_RATING'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DE69C476-DA38-492A-957B-9A6794C41BE7}' />
    </window>
    <window class='worksheet' name='PRICE_RATING' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:3:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='106'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7626E645-6304-420E-9850-C6A1E3A88B86}' />
    </window>
    <window class='worksheet' name='PRICE_RANGE' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wozqji1a1a2lx17llt5118pipx6].[sum:item_nb:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='106'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:5:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7268D02D-2D85-4A29-BBAF-21A122D0C940}' />
    </window>
    <window class='dashboard' name='D_PRICE'>
      <viewpoints>
        <viewpoint name='PRICE_RANGE' />
        <viewpoint name='PRICE_RATING'>
          <zoom type='entire-view' />
          <highlight field='[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:3:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5ABC2CCA-5280-4C81-8E88-02518FD12B1F}' />
    </window>
    <window class='worksheet' name='SIZE_RATING' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wozqji1a1a2lx17llt5118pipx6].[win:avg:rating:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[avg:rating:qk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075869478915:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:size (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83945CF9-92F0-4E7E-88CF-5385B9919455}' />
    </window>
    <window class='worksheet' name='SIZE' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[cnt:item_nb:qk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075869478915:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:size (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F0547A3-8D29-4566-8764-DD883C847951}' />
    </window>
    <window class='dashboard' name='D_SIZE'>
      <viewpoints>
        <viewpoint name='SIZE' />
        <viewpoint name='SIZE_RATING'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9A461FAA-4474-4A5C-B8B8-35524A8244A9}' />
    </window>
    <window class='worksheet' name='AWARD_RATING' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02C6B01B-931D-46D1-B708-784B85DDDA44}' />
    </window>
    <window class='worksheet' name='CHARACTERISTIC' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='1' param='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D3A1E23-E6DA-4F95-9424-3CA3B37E8F6E}' />
    </window>
    <window class='worksheet' name='EFFECT' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='1' param='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:AdhocCluster:6:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:Calculation_1405686075856506882:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:price (bin):ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:nk]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:rating:ok]</field>
            <field>[federated.1wozqji1a1a2lx17llt5118pipx6].[none:scope:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D124264-F29A-4406-93F5-0679ECE52B48}' />
    </window>
    <window class='dashboard' name='D_EFF_CHA'>
      <viewpoints>
        <viewpoint name='CHARACTERISTIC'>
          <zoom type='entire-view' />
          <highlight field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='EFFECT'>
          <zoom type='entire-view' />
          <highlight field='[federated.1wozqji1a1a2lx17llt5118pipx6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0BCD1572-D333-4A10-A1A0-3A2A1451C477}' />
    </window>
    <window class='dashboard' name='D_AWA'>
      <viewpoints>
        <viewpoint name='AWARD_RATING'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2C996189-163F-43B6-ABED-A170251C5251}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AWARD_RATING' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2955Nc2ZXg93suvc/KLO8L3jTaN02THA7J5XBnSGl3tavdiJ2NWElf9Tfw
      T1BshL4oYrURE6uQmYmRNJQ0NN1stvcNjzIoX5lZmZXeZz6rD9UACdR7hQJQqEID7xeB6Or3
      bt578+Y915x7zrmCZVkWLi7PKeJxV8DF5Tg5MgFotVpHVZSLywO50x+PTAAMwziqop5hLDbX
      NzCPuxrPAHf6o7sE+gZRym2ylt1xBeAQcQXgG4JlaCwur9NrlKk1OsddnWcG+bgr4HIwBEnh
      O9/7PtmtDPFI4Lir88wg3FGD9nq9J7pOb7fbBIPBJ5a/i8vDcKc/3p0BZFlGkqQnVmC/38fj
      8Tyx/F1cHoY7/fEeAXiSSJKEoihPtAwXl4Nypz+6m2CX55pDHfYty8I0TUTxXrkSBOEwi3Fx
      OTQOVQBWF27S1TS8sRFEvUm31eHU+Qsobv93eUo5VAGQZZFeSyOkyKzP32D8/JvIwu6pm2ma
      6LoO7M4UumkiiSKiOzu4HAOGYaDr+uEKQFfViERC9Nodxk+cp1fO0B+M45MlRFFElmW6msY/
      3LhGR1UB+NnZcwyGI4dZDReXByJJErIsH64AnDpzAVXT8Hg87B4vWHDfCP+7xXkujY5xMpWm
      0evxd1cv8+9eewNZdPfjLkfPofY6QRTxer0IgoAoioiitGeJU2q1mEkOIAgCEb8fjyShfr00
      cnE5ao582B2LxbmazaCbBtv1GqZl4X3CZxAuLk4IR+URVq/XiUajqIbOW4uLbDfqBD0efnrm
      HDG//yiq4OJylzv98ciHXo8k87Oz5466WBcXW9ydp8tzjSsALs81rgC4PNe4AuDyXOMKgMtz
      jSsALs81rgC4PNe4AuDyXHOoB2GmaWJZFoIg3mMD9ygOMXeN6RBchxqXJ4atAKi9DpLHR25j
      lUh6jGjQd6DMyjs5cpkt5PgEPqH7yA4xreoq2du/wjJ1AtFJxk7+AlFy/YldDh9bAdhYuoon
      EObGZgtub/JPf/LDA2WWGhqjXm8yMTXMR2/9g6NDzH6Yhsrm/N8xdfHfo3jD7Gz8gfzaO6Sn
      DlYHF5eDsK9DTCQa4/fvfcoP/9lfk1u6euBM9V4dQwmjiIKjQ8yD6PUr+IJpAqEBAFJjr7N5
      6/944lErXJ4v7jjEOFqDWpaFaVlID+GoYpkmliAgfP15AQtL2HV7vGN99yBMQ2Xx8//AzAv/
      HsUbobD2NqKkMOjOAC6HyAOtQdVui5tLy1x64dKB/XYFUeROyjsb14fdvoqSh/HT/4L16/8Z
      09QIxWYYnf6rh8zFxeVgOArA7VtXuXJjmZmT54kFjnYDGopNceq1//5Iy3R5PtlnCWTSVzV8
      Xu+hFHTQJZCLy1Fwpz/aLvB3NTYGzVqFnuZebOHy7GK7BFq7+h5/94ebhBWVEy/+gB9/58Wj
      rpeLy5FgKwCzl77PvwoO8MEX1/jua27nd3l22dcpfveVcH9on0fC3QO4PE08UA167bP3WNrc
      oV6rcfG17/PqxRNHWT8XlyPBUQBMy2RweATZF8Lq1Y6yTi4uR4bjMe/cidP0O22mZmZ58aWn
      bx9gGRpGeRmztoVlufcmujwajjPArcUlpmZm8AXCKE+ZHY6ldVE/+58QwsOgdUBUUC79awTB
      dW9weTgce0zMr/DlV5dZWN44yvocCH39A6Sx11Au/FcoL/07sEys2uZxV8vlG4itAOxsLJCt
      dtH6PVRNO3BmlqmzcnuJdk+j3WnTaTbQzCcQeVFtIfhjf7Q38oaxtO7hl+PyzGO7tklNnGKo
      Y/Dmm99jcXHhwJmtLt7C8kURsMhlNuioIhfOnz60yt5Bmvw26pd/A6KE1W9hVFaRT/3FoZfj
      8uxjKwBGv81nH73P/PwiEyfOHzizVkdlNOVlYyNLcWuVoROvgGVhmOaBHWIOhC+J9MK/wdj6
      GGQf0sv/DQYSuGHWXQ7Ivg4xsi/Eyy9c4JOrt2BjnVcunDxQpuNjg2xmC6SGxomEX8ToNenp
      afzKwR1iDkxsFGL/4vDyc3mueOANMYI3zMnpcWrqwTttYnCcxOD4oVTQxeUocOzdkqnz8vd+
      gl9yIzK4PLs4qkElq8Pf/M//id9/8MVR1sfF5UhxNIbr9/t4vN6Hdml0wjWGc3maeKAx3MIX
      79MNjTIzOkR6IH6UdTsUdMPks/ksm4U6Y+kIb5wdQ5bck2KXe3HsEYPjk5Q2l9nc3jnK+hwa
      73y1BsBffvsksiTy1herPOx1aIZp8v7KMv/xk4/4z198xnaj/tB5uDzdOApAsbhDKBKhuFM4
      yvocGplig9fPjBLye3j19AjblRYP23WvZjN0NJW/fvV1/uLMOX514zq66RrePUs4LoF8Hg+d
      bhPZHzvK+hwaiizR7KjEwj7aXQ1ZFO7Zz1iWxWq5xHsryximyenBIb49PXNPCJjlUokfnzqN
      IkkkgkEGgiFq3S6pUOjov5DLE8E+NOLiZVZKPb71+uso3oPFBX3a+OFL0/z9+/PEQj5qrR4/
      eXX2niC7LbXPH5Zv81+/9DIeSebXC7dYKOQ5OzR8N81oNMrCToHXJ6fo6zrlTouI75vZHi72
      2GqBtF6L3/7ubQbSQwSiA1w4PfvYBR2HFkjTDZpdlbDfgyJL97xbKZVYK5f40aldW6VcvcZX
      W1v85fkLf/y8YfCP8zcpt9uYlsX3ZueYG0jtiVatGQaqoeOTlYeKpOdyfOyrBRJlLz/44Y92
      /5aeLl+Ah0GRJRJh+0u4U6EQ764s0dU0PJLE1VyWqWTy3s9LEn917gKaaSAJom3nzjcbfJHd
      IqAo9HSdN6dmCH9DZ83nEdveXS9m+dt/+DXj4xO0NIF/+Ytnz9Iy7PXynelZ/tcvP8cCZpID
      nBkc2pNOEAQ8DoOAYZp8mc3w47lTeGSZSqfNF5kt/mzW9Z/+pmD7yyaGp/izN15kYauE3xc8
      6jodCYIgcCo9yIlUGrAQHuEiDsOykEQBjyQhAFGfn66+13+i2e9xa6eAZVmcTg0S8987K1mW
      hdVuo2WzSPE4UmrvMsvlyeC4YNU0nRde/y4/+9GbB86s26xy8+ZNqs3u1w4x9SfjEHOIiIKA
      KIiP1OEUUcQjyWzUqvR1nRv5bYbD9+5zeprGu2srjEdjTMeTvL++SkdV70ljFIvU//7/xKhW
      aX/4Ed3PPnfPG44IRwEIBAN8+s5vePeTrw6c2dbWJqFYkkjQy3Zmg+WNbWTx2R3JBEHgzakZ
      Cq0mf1hdRhJFXhgevifNVr3GbGKAkUiUwXCY84NDrFRK96Rpv/c+kV/8nMAbbxD5xc9RV1ax
      +v2j/CrPLc5hUUyLbq9Dq9U8cGZTsydpVkssrmYpbT5Bh5inCAF4eXj07v+bhonJHw/LvJJE
      qd26+90rnTYRr++etjA0DUMUsXQdLAtTFNA1DfEpC0bwLLGvQwxAvaszNjRA8yF8gmvlIoVi
      heTINNGzT9gh5hvCWCzGRq3KB5vriIKAbppcGhm7R6MUfO1VOv/4awKvv462sYESj6OEQvcs
      y/q6xs38Nm21z3gszmQ86e4THoMHOsRE/RIlMcCFi2cPnGl6ZIL0yMSdHB63js8EoiDynakZ
      Gr0eFhZRn3/PhSOemRnEQID+wiLyYJrAqVP3dG7TsvhkY42TqUHi/gA38jksYDoxcMTf5tnD
      2RQiGEamzMrqOrPje9WDLgdHFIQ9mp8/RRAElOFhlPv2D3foaRqyKDIc2R1Uzg+P8PnmuisA
      h4CzAHg91GtVupJr/HXcKJJEX9fRTQNZlKh1uwQ8nuOu1jOBowC02x1Gp09zYu7xzSBcHg9F
      kpgbSPPeym18ioJq6LwxMXPc1XomcBSAZr3GtSs32dou8M//8ieHUphlWVy/fp3z53dDrSwu
      LmKaJmfOnGF9fZ2BgQGKxSKmaTI3N+du8v6EiXiC4UgE1TDwK54DX1zosj/OllueICemx5Dv
      MyJ7HLLZLMVicfcKVUFgbGyMTqdDs9kkk8lQq9Xo9/tYlkWv1zu0cp8VFEkm6PE6d37L2o2N
      ZBi7f7s8EMcZ4NyFF7Csiw/tRLIfa2trNBoNyuUy6XQaXdcRBIH5+Xl0XSeXyxGLxRBF0T0J
      fVgsC5ZvQ622+/fwMIyNcyi3mzzD2AqAZVksLS0wO3uC5eXbnD595lAKe/PNN8nlcsTjcarV
      KltbWyiKwosvvkin08E0TfL5PKqq4t9Ha+JiQ7EIhg6vvLorAFevQCwO4fBx1+ypxiE0YosP
      3/09C4vLjE4fLCrcgzAMA9M0SafTWJZFLBYjGAwiyzKGYeDz+ZBlGb/fjyzLd09KZVlG07S7
      6ZyeSZK0e7Jn80xRlLv5HeSZIAiIorjvM03TEEXxsZ4JgoBhGLbPPB4Pqqoe/Fm1jDCQwtC0
      3WfhMFK9DoHAPekkSbr7ezzKM8uyME3zwM/ufLeDPpNlGfNry4GDPLMs657+YPfMrt/cWWFI
      v/zlL395f2cVZS+mBd/7wQ/Jb64yMjp6f5KH5ubNmyiKwsLCAsvLywwNDfH73/+eRCLB/Pw8
      q6urpNNp3nnnHZLJJDdu3GBjY4OBgQHeeecdUqkU165dY3Nzk3g8zh/+8AfS6TRXrlwhm80S
      i8V49913GRoa4quvvmJ7e5twOMx7773H8PAwn3/+OYVCgVAoxHvvvcfIyAifffYZxWIRv9/P
      +++/z9jYGB9//DHlchmv18sHH3zA+Pg4H374IdVqFUVR+OCDD5icnOSDDz6gXq8jSRIffvgh
      U1NTvPvuu7RaLQRB4KOPPmJmZoZ33nmHdruNaZp8/PHHzM7O8vbbb9Pr9TAMg48//pgTJ07w
      u9/9DlVVUVWVTz75hBMnTvCb3/wGXdfp9Xp8+umnd58ZhkGn0+Gzzz67+8wKhmgtLfLZwiIn
      pqf5zX/6jzA6Rr3d5vPPP7+bThAEarUaX3zxxd1nkiRRLpf58ssv7z6TZZlisXjPM4/Hw87O
      Dl999dXdZ16vl+3tbS5fvnz3md/vJ5vN3n3229/+lkAgwNbWFteuXWN2dpbf/va3hEIhNjY2
      uHHjBlNTU/zud78jFAqxurrK/Pw8ExMTvPXWW0QiEZaXl1lYWGBsbIy3336baDTK0tISS0tL
      jIyM8PbbbxOPx+/2r8HBwbv969atW3v6V61WIx6PO8cF2tlY5OOrS6THZvnWSwc/DXbCjQv0
      hLEsyOchu7W77p+ehXjc3QM48MC4QM12C03tky/kgccXAJcnjCDsbnwdTpNd7HEUgEg8xcyM
      QN9wRxCXZxdbAShmbvP2h18iSzLh1NhDZGexsnCTgYlTaJ06Rr9HYngU5Rn2CXD5ZmN/Q8zY
      CaZGs5x+4RWufPnlgTNrVQo0Ol0CfZ3M7ZuE09OkBe7u4O/sxl1cjps7/dFxCXT+9Cz/43/4
      H/j2z/7lgTPN5PL0Wg2KpQpenw9d3fUlEATh7j8Xl6eBO/3RUQBuLNzmr//b/47r124ABzsL
      OH3+Et1mFUMJoXUDCKZKT7fwK+JdPbqLy9PAnf7oKAAz46N8+vkXpMcezhrUH/46krTvmxdR
      2uX5w1EASsUyL337+4zEn82wKC4usI81qC/g473f/Iq3P3RviHmWME0TTVUx3SjXwD4zQK/X
      wevzP5ORHJ5X+r0um6vLSJKMrmuMTc4QeM4jXTvOAPV6E4/Xw9r8Za7MrxxlnVyeENmNdcYm
      Z5g5dYapuVNkN9f2mJ2bpklls0hhMYPWVR1yenZwnAFe+fafoeoG8H1kxfU/fRbQdR3v12bm
      iscDCHedkwAs02Llw3m8AS++SIDFd64y991z+CKBY6z1k8VxBrh94zJ1TSAYDOL1KEdZJ5cn
      RCAUolTIYxoGtUoZRVHuOZvpNjpgWYy/NEv6xAjjL82RX8wcY42fPI4zgNfv4Q//+H+THpvj
      R2++epR1cnlCjIxPUshmWFmcxx8IMD5zv9+1dY/1qPD1o4el2Wvw1tKv6ahtYv44Pzz5E/zK
      0zmLOAqAoviIpUeZHHRNmJ8VRFFkeHzC8b0/EgTLInNlFV8kQGExw+x3z+1NaJrQ6oAsgd93
      j9CYlslvF/8/vjX1XQbDw6yWl/nD7bf4i7M/fxJf6bFxXAJVa1XKuVWuL64dZX1cjhFBFJj9
      zlkCiTC6qnPyzy7iv3/9r2rw1Q3YysHiCqxs3OOAb5gGmqEyHBlFEiVmknNUu5Uj/iYHx3EG
      mJubY3Elw/lLLx5lfVyOGVESSU6mnRNsZmFsGIZSux3/yk3o9iCwu7mWRAlJlNlp5UmFBtmo
      rhP1Pb0XLToKwPVbi/z5P/kpVy5f5uT4Pg3i8nyhqhD4OiSjIIDXsxuK5WtEQeQnp37GW0u/
      pq/3CXlC/OjUT4+psg/GUQASQS9vv/0WWr/Pp1cXeP2F00dZL5enlZEhuL0KJ2ag24VOF0L3
      mstE/TH+2cV/hfWIN+8cJY4+wXe864G7UQgeRGUnRy6/QzA5imR26bfbTJ08jSIKrk/ws4Jl
      Qb0J2e3d0X9iFL6BcUof6BP85Udvkym2KOTznHv5O7z52sUHZhqJxljf2CQqy6xeu8Lo6W8h
      C38MieKaVTwjhAJw6k+shL+Bv+sDL8gIBYPIdY2hyTmCysGUwZ1un+mZSTKFKqPTJ+lUC5ij
      A0jS83tBhsvTyQMvyEgmUyxt7hAfHOalF184UKYeRWanaXD65BSmoSJiYZi7Nym6uPwplmVh
      GW2wDAQ5cmz7BEcB2Nze4bU3voXHc/BLn33BMBPBr0Pxye5l0S72WJaJWnobo7+NIEgg+vAN
      /QJBOPoVgu1BmGVZpOJhrl65wtLq5lHXyeUZx+zlMPUG/tF/i2/k3yAqCfTmzWOpi31YlK0l
      1nJlKuUylidy1HVyecYx9RqSd/Duskfyj2F0j2egtZ0BUmNzeDwSP/3pT4n63PW7y+Ei+afQ
      WvMYvTymWkatvI8cvnAsdbGPDq31KeXzfFCqMX36wepPF5eHQZRD+Ab/C9TKe2DpeJN/juhJ
      HUtdbAVA9gYYGRzg6tIa+tIiF05OHXG1XJ51JG8K//A/P+5qOGuB4oNjXBBEKn3XGcbl2cVR
      ANRGldkXvs2rAVcAXJ5dHP0BFAV+9Xf/O29/4IZFcXl2sTWG6/c6qLpFOHR4QbFcYziXp4l9
      jeEKG/P8/e8+5YVzZwgnh3jl4uFckufi8rRhuwSaOPkSP//zb1GrVFC87m2NLs8u9nsAQWC7
      WOPHP/unlLOrR1wlF5ejw1ELdOnCWT56/30mT9pEBXCgspMjm98hlBhFsu51iHFxeRpxFADR
      F+bHP/kx3W73wJklUkM06g18fg+LX33sOsS4PLXs6xCj99v8b//L3zA+dYK2Br/4ix8dKNON
      5QWkcIpEJOA6xLg8FqZpkruxQT1XQfF5mHh5Fl/48IJr7esQIyk+vv/9H9BRTeIDgwfONJZM
      U2206PaCjI9PI2K6DjEuj0RhIYNlWpz50SW6jQ4rH85z5scvIkqHe8uQrQAIokSxkAMlBJKP
      0cGBA2UWTQwQTRwsrYvLftRyFU68eQ5RlgjGwyg+D1pXxRv6o6OVZVlYWgVTqyF5h0HyP7Rn
      maM4Bb0K65tb5ItPb1Qvl2eXQCxIfbuCZVnoqoba6SN7/2iWY1kWev0yWuVjLLVMP/8rLLX8
      0OU4Lsr9wSCSAJ2H2AS7uBwWYy9Ms/LRPIWlHJZhMP7SDJIi/TGBqWK01/CO/JcIgogUOoVW
      eg/v8F89VDmOAhBLDnHqlIet7Z1H/hIuLo+KpMic+N55DM1AlESbtb8JgsTXMawRRA+W9XBa
      Rsuy9lGDChbrK8ucfeW7D1t3F5dDQRAEZI9DFxV9iEoYvfopon8cvfYFSvRg0UvusLW15bwH
      WFleZubUGRZvXX+oTF1cjgJBEFAGfoCgRDHaq8jx1xAD0w+Vx8TEhPMMkB5IcO32CuHk6GNX
      1sXlSSAIEnL4DIQf7fNra2vOM0C52eenP/sZIVl71Pq5uBwrlmWhN67Ty/4tvezfojcX77kU
      cGpqylkAhhJB/t9f/T90LTfAlcs3E7NfwOhs4h3+Bd7hn2O0FrC0XbX+wsICuVzOOTr0YeM6
      xLgcNVrlU0RvGim4uzfQGzfBMpGjF+72x8M9V3ZxeYoQAxPozXksU8MyVYz2CqJv+J40rnWa
      yzOL6B1C9I/S3/6/AJAj5xA8yXvSHLIAWHS7PXw+367ps2UiKh6kp/iGEJdnF0EQkCMXkSMX
      uHtgdl9fPNQlUKNS5PPL1wDY3FxjYWHpMLN3cXloBEFAEMSv/7t3ID7UGSCSSJOKFwHYWpln
      /Ox3EHEdYlyePh54Q8yjUNnJsbWVITYwzNSpi6iNPL3BBH7FdYhxebq44xDjqkFdnktcNaiL
      C4e8CXZx+abhCoDLc40rAC7PNa4AuDzXuALg8lzjCoDLc40rAC7PNa4AuDzXHKoAWIZGLpfH
      tCx6/R79bgfdPJKDZheXR+JQBWD19m1EQWV1q0B2a53F5TXcsKAuTzOHKgCGKDM4mMbo98ms
      LRGIpRBdXwCXp5hDFYCoX+HKlVtEkwmmT19C6JbpauZhFuHicqi41qAuzyV7bolstVoYhvHE
      Cux0Ovu+tyzrgaGtDyPNN6mcO2PTUZRzFG1imuYD+9idy1T2KwMev03u9Me7AhAKhfb9wGGw
      3wxgmqaj29qfptmvcQ6S5jDysCwLy7KeeDlH2SaPW45Tm3TaDTz+CLIIuq6jquq+dVUUBUVR
      HN8fVtvDbn+UfvnLX/7ygSkPgX6/j8+3G2TL0ntcvXwZVRfwBEMoorDnB6gUt1nNFND6XSKR
      CLBX6lcXr9PWdNodk/DXFyf8aRq93+TLq7cQTBNvKIIk7M1jJ7dFZqdCv9slEgnvycOyDJau
      f0HXUNBNgYBP2VPXTqPCtYVVBFMjEIog2pST3VyjWKnS62mEw8E95Rj9Fjfnl6hUygSjCRRp
      rx9rrZTn9kYOXe05tsnt+evslCog+wj6vXvSmFqHLy9fwzQsvOEIssCeckr5DBvbJdRex7Yc
      y7JYvvkVHV1E1SDo9zgKkCjJSKKIIOydATZWFtnK79Bt94jFdgdHRVHudl5TV1lZWUE1IBgI
      INjUtVndYWF1C1PrEwpH7qb5UzbXblNtNul0DcKh3WuW7vTHYzkI0zp1Gs0m+e0sHc1+C1Kt
      1mnVSxR2So75NOpV8tt5as2G7fteo0y92SGf30Z1mHlrjSa10jbFsv1FIJah06hVyOXzNDs9
      2zStepVGo04hX8Dp2KPZalPMZylXa/blmBpdzSQSiTheKVWt1Wk3KuR3ivaFAM32bqf1OkRV
      Vpslaq0uhe0cfQcX7Wq9SaNa2BUk+8rSqJXZzudptNsONbHQNI12s4buoAep1urkM6tsO3wf
      QZSJhPzksxtcvXqVrk19a7UazUaV7YJzGP9ms0Uhl6Va39v2xyIASjhFLOQnkkgT9dn/2KPD
      aRC9DA4N274HSCQG8AeCDKbTtu8DiVGifpHYwBABB3fkoVQC2RNiaGjI9r0geYgnUoRDYQZi
      9lFYE+kh/B6ZRHoI2WEVMRCL4AvGGBzce+eaZVmInjCnZicIBoOOYWRGhgdBVBgcdG6TEydO
      4vF4kByWAN74KHG/SGRgiKDDSmM4nUSUA45tgiAST6YJBUOkEnHbJPWdLd795EuqpTJOesDh
      dBJfKMn4+ITte73XpKVLnDkxw/j0LF5pb5rBwSFkSSG9T5skYxH8oSiD6b1tfywCoNa3afRN
      rH6Tcsd+yFzb2iYUUKgU8475VCplFI/CdjZj+75dXKdtedFbFZoOMX4zhTJ+r0ixsG373tL7
      1GplBBEKpaptmp3cFqbspVMr4aT1LdSaKJJBYTtn+75Rr9Go12nUq/Qdhsz1zSzBgJdqqWBf
      CLBw4wpLS/Osbtp/n15pjabpxexUqfft89jcLhLwSZQc2gTLpFopIkqi42wke/yIeo9So4vk
      MChsFsr4FZPMpv1l7KV8lo31dRZXNvF4vLaHqplMBo/PS63sPAOUak0UySKfy+55dywCIPui
      JGJRBF+IVMC+dVLJOBgmqRH70QEgGk/Sb/eYmbOPC+8JJUmGvEjhJBGPfR7JWBhTNxket89D
      EGWiyWEMTWd8xP4CwEg8SdgjEUgMotiMUgCxkB/TEJmY3luOIAiEwyHanQ61WgOnvWhqIIlo
      miSHxuwTAKNTcySiUWIRe6WGEhwgGfYhBuPEHeIeD8SjWIbJ0PiUfQJBIJYcQu+rTI7vHXkN
      tYMh+jg5N8vQ8CBOW+tUPIKuCcyeOmv7fnBijrnJUQJ+r+MGPZFM4hEgkR7BqaBoOIimwdTM
      3rY/JmM4k3yxgozuuDbvNau0NVD79utugEKhgOL10OvaD2WWaVCq1MFQ0R3KaVSKaIK8bzn5
      nSIeGfoOi2a936HW6qJrKk6nKuWdPILipd/bW45lWWysrdGpV9Bw1oD0WzWaqoWqOgzdQLmY
      x8Iku7VJvW2TzjLZKVURTBXNoU1atRJ9U6Tfdy4nX9hBUST6fRutjiDS6bSRZBlJlBwFupjb
      wlL89BzuoRMkheGRUWJ+iWrLPo3aadDo6btt4tD2O4VtZK+PXm/v9znyQD2mobG5ucGZiy+R
      DHlsR8zKTpaOGOLS+WEEh7VsNpthZHyaoeERJJt4Q1qnTjZf5MKLrxD1Ccg22WznMnjCA5wb
      HkYU7YfuTGaTqblTDKZSyPLeztmr5Si0LC5degGfLNoOQtlshlh6hKGhEURpbzmCIDAxPgze
      AMVMlp5uEvDcm65ezFI3/bx4YWZ/dSQSQ0PD9NY2qNabRIPeu+/0fputTIbzL71Gwm/fJjv5
      DPjjXJh1bpNsNsP49BxDQ8O2sZ4EUaKxs4kQn6JT3CQ2kMJ3X1ZrayvEhyYYn5hClOy7oWXq
      rN5eRDUl5ob2XpLdKmepqh5evHgOeZ9+khqZYGhoBMmmnKNXgwoChc3bbBVbdEQWVWYAABM/
      SURBVFt1wvEUyn2LRBGL69euomoarZ5OIhbZk1+3WWV+8TaqqiF5gwR8965xRFFiY+kGhYZK
      p1Unlhjg/nvWBEPl2vUbqJpG38B22dAo51la3UTt9/CFIvju066IssLi9a9odDRa7Q6JRHzP
      WtVQO9y4OY+qapiCTDi498e0TJ21lXWGRkfwBcP47hsZRFHgxtUr9FWNVkclGbc/UzH6LXZq
      HUYnZhkciN5jiyWIIpmVm+RqKt1GlWgitUcIBFPn2rXrqNquVioe3bvxb1WLLCyvoqoqnkAE
      v/fegUEQJUKhIDv5PILsYSidQrxPDWqqHT765DN6vT4aEomvy5Fl+a6A670GS/PXMZQInkCY
      sP++31iSuHn1Mp2+RrPTIxmP7Zlt1G6Tm/OLqKoGspdQYHfdd7c/WkdErVa7+7dpmlY5t2bV
      e87pTdO01tfX9s1T7dStTKG0bx7ZzTWrrz96OaZpWp1K1srX+49V14OkeRAHyePql59YC0vz
      1vWbi4555DNrVkd99HJM07R69YK1XWk5pmmWt63ff/Cptbm6bPWN3Weaplntdvvuv1arZV2+
      /MU9z3T9jz+WqfetQj5nXfnqstVwqPBB2sTQNWtjc+ueZ3f64zHtASz6ukU5v4Vq2C/ceq0a
      za5G2UE/D2Ai4VckNIcFvmVqlCo16pUKDsWg9TuoqkqxbK+fB9jZKaJ1W7S69qeYlqlj6jrZ
      bedzgGJxh9RAkp2i/WXOpt7jq08/YH0jR6Nnv9fodxo0Ouq+bTKQHKDXUZm22fBZloWh64Si
      CURLc9yv6GoPTVXZcdB6gUW1pRJWdCq1lv33MQ16rTrbxartstAwdDRNI5UaQncyj7Astjdu
      ExkYRjfsNWNat0W91aNcruy7/zJM+7oez0FYI0+p52EgEXNUka1v5RDMPlkHFSfAlc8/5Pbt
      BZbW7FWL7eImla5JpbBF20ENevv2MoNDw4SCftv3lt6nWCzQaNQoOAhJfnMFJTxANBJ21HiU
      CjlKpRLlat32val2abeabGYyqA5q0I3NDJgq2eyWQymgeL1I6OzY1dU0KBV32FhbY3ltw3FQ
      uL10m/TQMCGbpRoAFmxvb1PYztF0UEAIgsDLr3+HV199GcWml7UbNbLZLLVajUqtaZuHqat0
      Wg02tzL0HQa5TCaDbmj7tkmhWKLXbpDNPiVqUMkXpV/bZmNj01ELND01gWDBwD4qv8m5s0SC
      ftt1KkAoPc1QSMTwhAk5KFciQR9bWxmKFfuOKcpexqdOovX6jA/bq0FDkSiF7DqZ3LatIkLX
      dWbmThIIRpieGrfNQ1ACpEanOHv2NEmHE6rZmRn0XpdI0vnQp9PuEIilGB1M7C1Dkon7TXRf
      CrlXp+NwEhwN+Vlb36BQsp+tDNPkxMmTRBODjKbtD8Jkj4+N5VssLa/angTrlkDQK6NpGobD
      6C55Q4xOzpFMxEhH7Qeo8ckpArJIamjcUQ06OT6KYUrMzM3seXcsAmAZKp12A5/HS89mGDJ1
      jU8/+wyP18fW5rptHvV6HSyTQChGMOC1TdMubdGTIgR9iu3SpNGoE4rGCQUDeD32nc7UVZrd
      LlqnQb5oPwPomkazq+EVDNtRtd/vU69VMU2dWs3ebENSvIym41z94lNqDj1za3OdWHLvxvVP
      mZw9yczkOB7ZXoOjBGJY3Qqq6MPvoAPUjN3voffslzf9XpdqpbK7jHEYmfudJpLip1oqsry6
      vud9IpGkXq/SbNapNezNKfRujYbpYzgE2xX7NP1uG0SJbq/rqAbd3NzE41HodPaqUo9FAARR
      QhIssjsVPDa2A4IkMzM9jdfnY2Z6r9TCriVfu92i0+k4riFlr59Oo0a327VdH5YKOeaXVvD5
      fI4CIEgyWrfH5OwMQb/9yZGseDB6LSrNnu1ppYzOlWs3KJfLtrZAlmXRbdXYzNd4+dXXCDv0
      TEUUaLQ79PbRzz8IyzQRJQlZkR33Kx6Pl0alQE+3H1IDwSDZzBbdXh/TIRPLMgmEowT8Hvp9
      ex1+o9liaHCIZsN+T5PJ5dFaNbYrbUJ+h5NMwLJ2NUxOdLtdNE2zTXMsAftFj494Mo0p+fDb
      DFSCINBqtWh1+yiKl1QyZptPs9VhYmqGgM9+BvAEYyTCZQRJsR01U+lBqo02oijuYwpsYSBQ
      yOUYnjppm8K04Dtv/oBWNb8raPdl5QlEePnll/EqMpLX/oTWQmJkKI1p6l/bvO+tTzI9SGMr
      j2JzHnEQLNOgUsxiSGFGB0OOdktgkU4Po6kdyvU2yWjwvvcC46PDlBothoZHbHOIpsYpLy8h
      hhNMTtgvY1+49BKlSo1LFy/Yvp+aO82E6Wz+3G/X6Zsi/oAfSXEWENnrZ3h4GF9g7zLqyGcA
      y7Jo7Gxh+pPEhQ47NrZAmtojGksyNjJEKGK/xgQYSifZym6jO0h/q7SJNzWFV2va2gI161UK
      Ozvs7OxQa9hP95ZpopsWAZ+Hrs1JIsDt+WvcnL9Fvty0nQEEQaBQKLC5tcXqyrLt+3Yly3Jm
      h2JmjXLLfse+sZVh7tQpGhVnu5cH4k0QoEGpXHNaMVBrtDhx6jSSCIXM5t4Elkmx3mFmJMbW
      tr0tUDm3ghQZYngwhcfhYpTc1gb5fJ7tgn0eRq/F5avXWF5eptPfO8t7g1H6nSaj45OYqv0s
      AxAN+tlYW6VY3bvZPoYZwKKlSQSEHn0lzKiNNWi9lOPzrxaYm5nEG3R2oskXK4yPDpLNFTk1
      u3eUCQ1MUlrfQAgO2G6CRyZmCUbiCKKMvM8IkhxIEfZ7UB1mifMvvk6x0qCnOqiagEQkgIoH
      j9fmEMyyUHwhoiGDaCjJQNi+LmPDw6zcXiIYs9+MPwhBlIh4NbbFGJ52nq4+jV1Rc7PT3Lp2
      lZHJGfzevQmym2vomsZmrkRyeNK2rEAoTmYjg9oKMjs7azvbFEplpudO4fU5aJtEkX6nQ8Dn
      tRVWyzTYWl+hVGsRDNuvEgDGp08wove4vVaA+xQZRz4DCILIYCLM1sYa24WS7TnAwMgM33/z
      25w7d465KWctUNDvZadUIxqzF5KV659QVWXK2+uOatDM5gY3b95gcem27fvKTo6l28tktnfw
      eu33AL5AmJGRYfRu09H2vViukttapVi0H+0kX4hY0ItlGhgO6+psLsf03ElaNWcfiQeh+KOY
      3Sqq4MXrMPxtbW4SjcfZ3t62VQ+PTs4S8YnopmlrXqD3WqiCl0Q8it/vd1QNa1qfRr3uOLOK
      kkI0INPTTEybTZwgSpw+cxZd1+n37GeAbrfDdnaT/E6ZkdG92rPjubRLgIH0EPVK1bbD9DpN
      6vU69XodxRdkZNB+xNN1HckTwGOnaAbSY9MYdZPUibOEHAb4eCJFMNTFlOzVbIn0MBNdi7FU
      iFKzfY9tDYBp6FTLJYqVGoFYylbnDTA0PE6zXkIJ7l3SCYKAX4Zit08xk8ETSZKw2bScOHWa
      lZUlRiftFQMHQWvXiI/M4m1v0dPBY9MuXq+HZq+H4jQrWia9bhvDE6Veq5GK3TuCy74QcR/E
      HQamOySjUSrVKoISgOTe90a/g25oaIZGo9Mn4t87jVcqVQQBeh37JWxmfZmVjQzj45P4Qntn
      iWO6tU7EFxng7Fl7M1hfIEwyplNttKiUy44C0KjXCcUUR02EaKhktksoegs5FCNq83t2mhW8
      sSEGHM4SBFHG7LdZ3WwzNn1ibwLLAlEmmUwiSjIWFsJ9Y16jWqLb6yJ7gwSD9rOIKCtUizuM
      TE7Y7iN6rTpdzcTj89PrdiD6aD7cSjhJ7dYyoiRzxubXb9ZK7FSa+Hw+JAdpXllZxhtNM55M
      EoruPW8AdrVa2R2Sg8Mko6E9SoZauYDgDRHxgs9mmQUg+6PMnjpPs9UjFbt/I75LIh5DCkAk
      HLY9Bzhx5iLBaJKRkVHbzx+PGlT20SrnWFhYcHTLk2QZr9eLto/prz8UYXp6mmjIfvQOJIeJ
      eaDeF2zXugCDw6MIhkq35+CsLYCIgYlgqzYUZQW1VSSTL3HrxjWu39p7N3IkPkA06KXb7aF4
      7DVWIOALBGi1Wnjut9pj1/Cr0bA/QzgopqGT2y4Ri0WIRIK2quFwbACfV+bk6TNoHfsT2kQ0
      TKlYIr9TpO2wfJEVLx5FJrexws3FvRv/WHIQvyJQrZZptu0jhui9Jpc/eZd6u0++aj/CRweG
      MNsVLl+fdzwHyG+tcXtljWr9KTGFwNpdszU7fUdNRKvZQu21CeyjBYoE/WxsbNBo26//2uUc
      6bkXSAUsWg79O5fNsL6xRiZjb3Jh6RrtZhUD0fEQKxAMI1gmgVAUn8e+Sbe2d5idmWBjZcV2
      xjL1Pn1DZGBgAMVmCjAN466D+qMiSjKjo0N02216dnb8XzM9Mc7Vy5eJp+xPnOOpYd544w3O
      nDlDzGbwMbU+2WwWE5GB9BCnbE5gAfLlKpalU3PwcJM8fgYGUlSqVeJh+0GuViqgRNK8+cbL
      zo5E6UFa9Qrt/t6N4LEIgNFvIyk+tHaDlqNTfIlCpY3WtTdRAChVKgSDQRSHU89QaoLezho9
      Oew4AwTDcQYSMccNbqPZYmB0DtnsM+BwHhFNjXHp4jlefukSp07YLJOAsE/i/Q8/xbRM6jbO
      HaI3hGI0qdSaaDYC4gtFUSSJRCzMPmc+D6Rb3KDQVDH7XdoOs+/G5haiLFMvO7leWly9cplG
      s2l7EizIHsYmppicGCOdSiHb+EAAnJ6bwTIEpuZO2b4v5LcJJEYYTcccY8z2Oi36mkG/33c0
      hqs1W3h9Co3yXtOOYxEATzjFQDxManSSAb/9N5s7dZaL589w5vQZx3z0fp9ms4nq4NqkdeoU
      yjUa1Yqj95NHBtOSCEfsN2z+QJBEIsHM3En8Hgd/xwPQ6Ki88tJFRNlDPLJX7Wd0qjRbLSxD
      p9axV1nlclusbuSoPcY5gD89zYunp/EEwo5uokODg2i9Nr6w0+wrMBCPkMnk6Gt7pcjot2m2
      WtxeWmBtK+t44nxrfoFz58+ytmyvgRtIxjBEL/GAZO/dBoSjMaqlPNt55zaZnJhCtASGx/bu
      A47JKT5PV44TsZoUuw4bWFFCkSUkh9EDAEH4+hTX/rXeb+PxBei2m6gOo+ZOqcLI6CiF7Jrt
      ssDr8xMIBAgEAsg2a/ODEo+EyObyxBL2m0YlNMDI4CCqKZKO2O8TZmfnmJqe4cTc3CPXQxAV
      ItEoszNTjqNqqVwiFk+iOBxggUWl1iDggbLN2lz2haBfw1LCtGtlR6tTv0dmaXmVZq3Mdmmv
      iYik+OjVi2zka4Qd7L12dnbQTAvVwW4JYH19lXAkTNEmxM6xaIGkQIz++jI7mEiZVRJzc/sa
      eDlx9vwFuj3NUYsQSE7y2h31msOPPTExTrPVYnh4hL6qO+b1uJiCwunTc44mF3q3jq4EaBcy
      1LsTJIN76yEpXqKPZgXxUOi9HpoMnn3CGHpkiXZXJZVwMEPx+tF6ZUTZ4yhoF19+Y996CJKH
      M+fO7/7t0G6Dg8MUKwto7KMVMw0arTblco30YIpY6I/L3eMRAE+QFy698Nj5LN26ihIZQGn0
      OXty74nkg+JDAkRiSSLOh4iHhtGrc/X6TVKDw4wO7lV6i7KXRrnM+PS0o3/rUWGKEoODQ477
      olJhm2A0jmWxxx3yDsHYIBeju/GaHidC/oN+w53iDtFonKZNsIE7XHzpNcd33+grkqZPnieo
      SKRSNqcoTxkqHl44f5pmzd7yUfQEeOmVVxgbGyPqZKd8RExMTLCd2aKn2u+SU4MjeCWBvqrh
      cYjjWdlep6UJ5DPrODi4HQrJZBLRE2R82D442oP4RgtAciDN3KlzpOJPPrDv4xIN+llYXCKW
      fLQf6ijJZDJMTE2zbWcIx66p806tycRQjI2MfeCybGaDpfmbNFXRNqLbYaGpfar1Kl2H0CoP
      4hstAN8U6vU6Hq+XQCCI4myD/NSQiEXZ3s4RitprgQRBJOyVWdvaYWgoZZvm1PmXSSci9Dst
      x03wYdDv96mVCuSLTv7L++MKwBEQjUbRNJV+v4/uFKHrKaLe7nH69GnMvr0XlmWZtFSD2ckh
      Cnl74z5RkgkEAghG39FA8DCQZYU3vv09Xnv50iPtNVwBOCLK1QZj4+OO/stPE7FwgIWFBRS/
      g32UIJKOh1nPVZkcdwgqLAiUCjmiQxOOVqeHgUeRmL91neX1LceDsP043t3Wc4Taa5Pf3iYc
      S5JKPN1XRaWGx3GwgthFEBgcmWBvrOU/UslvEEhN0czdpj8wgO8J9TTL2r07YD+XyP1wZ4Aj
      IhwK0et9M5ZAh0E0OUh9ZwvRH+MxDtAfSLVSIRJLUCttU2vYG+/thzsDHBFzp88fdxWOFLXX
      3TUMFyxMiyd2X/To5AzNdpcTJ0463omwH64AuBw6pv51QDMlQTgcfKyDsAfh8QVIOrlUHgB3
      CeRy+AgSoXCEVCqJto+b6NOAOwO4HDqiJFPMbaIFNHyKxNhTfPThCoDLoaP3WkycfolGo4n4
      iDGMjgp3CeRy6Mi+EAGvhCUIDA0N7rmX4WniKa6ayzcZWfFg9tt89ulnjgGQnwZcAXB5Imi9
      DhoyyWTiialAD4P/H/1Za2MWigSXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CATEGORY' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CATEGORY_RATING' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CHARACTERISTIC' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='D_AWA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D_CATEGORY' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D_EFF_CHA' width='192'>
      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
      /z9VYKPtXZcyFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='D_PRICE' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='D_SCOPE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D_SIZE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D_TYPE ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EFFECT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WZck13WY+8WY81Q5VdY89wiAIEiCICkKoijRpmXpei1J1l32g5ef/SPI
      H+EXr6s3e3mQLUsQBY4Y2WQDYDe60VN11zxljTkPkWNE3IfqLqBZmZVRjaysqu741qqXyB1R
      O06cHWefffY+IZimaWJj8wIiCIIgnrYSNjanyYkagKZpGIZxkv/ihULXdSqVymmr8VxxogZg
      GAbnwcMymhXWN/dOWw1L6Lp+2iocjdng4b17rGxsn7YmlrBdIEwW55dIp8+HAZx1msU9dko6
      4b7QaatiiRfeAMqZLZKpApubmzSatrv2ZZG8/XzzKzPMP3zI2R/7QT5tBU4bT98Ab34nwera
      Oor8wr8PvjT1SpH5pTXc/sBpq2IJ4UkYtFardX3CqmkaTqcTUbQ7VjcwDINarYbL5TptVZ4L
      3G63cDACnEQnFUXx4M+mOwiCYLdnFzkwAEVRLJ2Q2dmgrgQIKE2WVpMkRsap5Xcp6wqj/SHm
      F5cZGJ0m6HXQaDRQVRVJkk7sBl4kdF1H13UcDsdpq/LccOw5gKnXyVVK1Bs5QtEoW5vriIaM
      S6yxtFpkZGqG9eUV/DNT6LpOs9k8F6HQ88ATA2g2m6etynPDsQ0gEAyS2quBKKGVS8iSAMjI
      ooFmGMiyjMi++yNJErIs2yNAlxAE4aBNbbrDMZ1Jg+XlNbK7m6huH5WyhtcfwSFXyZsSE0P9
      zN27Qyg+cDLa2th0GeEkk+FKpRIul8seAbrEk1QIr9d72qo8FwiCIPR0LDVNk61igdVcFlEQ
      mApH6HO5EQShl2rY2BzQMwMwTZO7O1sUqlUuRGPohsHtzSQTfWHG+8K9UsPG5il6ZgClep2d
      UpHvT84cvPEjHg8/n3/ESDCEZMe2bU6BnvW6jFYm7vU95e7IooRHUdEa9V6pYWPzFD0zAI/q
      oFCtPnXMNE2qzQYOyQ7r2ZwOPTOAPrebhqGzks3QNAwaus793W3Cbg+KHSWyOSV6GgZt6Dq3
      tpKkyiUEBIYCQS7H4rb/bxE7DNpdeh4GVSSJrw8O/74SvVTBxuYpeu582x3e5ixh+x42LzTH
      NoBKMUumoGEaTZYX5siVKmR2N1nf2sNo1lmYm6NSP+OF2zY2jzm2C5TZ3aQghSjv5ik1RMKC
      zsZuAYegs1RMER4YZmlxiSuXpk9CXxubrnJsA4gnEpT2apTLFQbGplhbmUdVwnjEGhldx+12
      o4j75Xt2PUB3sesBus8xDcBgaXGF3VKTyzPjrC8vE4oNUs/vsNtQmB4KM3vnDtGB0a7VA5im
      SVGrIwjgdakv9CTargfoPmc6HTpTqPD2R/OoioRhmAiCwA+/OYXP/WKWBNrrAN2l5+sAx6HR
      1PnJ9Tn+7I0ZQj4nAMlUkbc/muev/+jKCz0S2HSPMxsG3c6UiIc89PldCIKAIAgMRnyIgkC+
      XDtt9WyeE86sATR1A7mF6yRJIoZhT6ptusOZNYBE2Mf6bp5a/fOIR1GrU6rUCXhfzDmATfc5
      s3MAhyLx5qtj/I937zGeCGEYJqs7eX7wjUlE2/+36RJnOgpkmibVepO13QKSIDAc9+NQzqzN
      njh2FKi7nOkoEOzHvV0OhQvDds2wzclwZucANja9wDYAmxca2wBsXmhsA7B5oTm2AZTzKdL5
      MgDZ3U3y5Rqp7Q1WkzvojRpzjx5SrtrZijbng2MbQCGTYjebR69rrK6tkMrm2UmVaeTTLC0v
      ERsaYWV5+SR0tbHpOscOg0bjMQp7NRYezlJrNCjv7hDxBHCJNbK6jsvlRLbrAU4Eux6g+xxp
      APsdV+DzhVeD5aUVUiWd1772dcbrGdKaSjm1QrquMDUUYfbOHWKD4/b3AU4Aux6g+7RcCd5e
      mcURivOzn/yM6OgFvv+d157p4vb26N3FXgnuLoIgCC3nAOXcLr946+957Qf/FheVXutlY9Mz
      Wo4ApqGTSe3iDfdTKeYJBoPPdHF7BOgu9gjQXdqOAIIo0RftJ727+cyd38bmPNA2DHrv5m95
      6623SBWq7URsbM49bcMJV197A284QdhnF5/YPL+0HAGehD8T8Ti6HcK3eY5pOQKsz37M29fn
      MMq7DF39A/78e6/3Wi8bm57Q0gAGp7/C1/INHszrvPltu/PbPL8cWRJZq1ZQHC7EZyzBtcOg
      3cUOg3aXI0siMzsbLK1vAwKTFy8T8rp6qJqNTW9oGwadW1igLxxma3Odmzd+10udbGx6RlsD
      mB4d4MMPf43gCjM1NnZwvJDZYS9Xol4p8XD2AZmCxu7mGsvrWzTrFR7NzlKsNHqhu43Nl6at
      C7SynmRocAB3MMDY2MjB8UopT8Yw8MUDjI+PML+0gmDKOIUSS5Uc/WNjrK+scOni1EEatJ0O
      3R3s9uw+bQ1AFSCVyRKUPU8dD0ci5PZqoNeZW9nkwqVxlud3cUoCOV3H4XAgifsPyTRNdF23
      H1iXeFIPoOv2F3i6RUsDKKSS4OmjPybgCvi/8IvB8tIq6bKOUvdhmAapdAVFLJNpKkwNxnh0
      5w7xoQlEUTyoCbCjQN3BrgfoPi3DoPVKiUcLi4RCYVKZHF95+eozXdwOg3YXOwzaXdqGQUVR
      4DcfvENsYBxvuL/XetnY9IyWUSDZ4eFv/vrf4vO6cbns+L/N80vbMOiDuQVkh4LY1Hqpj41N
      T2k7mwr5AqgeB+lyL9Wxsekt7fcFqqb49Y1ZDDvkZvMc03YEGH/5DaKTFSTFLoixeX5pOwIk
      l5dxh8KEAr5e6mNj01PaGoBRy/C3/+X/42fvX++lPjY2PaWtCzQwNsPYepZEItFLfWxsekrb
      EeCze7O8+f0/JbWx1Et9bGx6SksDqJQLDA8Pcf3ar0mMTvdaJxubntHSAPK7q/zdP/4MSZLI
      F3JP/Zbb22Q3W6RRLTP74AHFSp3tjRUWV5M0axqzD+5TsL/kbnNOaF0TbJpkc1n8/gCCICCK
      n9vJ3sYC6aYHZz1PdGSUtZUVTF3GJTapizAwOsH68iqXLk7byXBdxk6G6y6iKLZOhjOBrc0k
      Xq+Phw9neemllw9+C/X1kdmrYSKgKAqiYICkoIgmmmGgKMpT9QCGYfTqfp57DMM4qLGw6Q4t
      DUCvV7j5yXUWFlcYmrz0hV8MlpfWyGg6F6fGmL13n4HRKUp7a+R0hamhKI/u3aF/eNKuBzgB
      dF1HFEW7HqCLtN0WZf7hA8YvXGbh4QMuXrr8TBe3XaDuYrtA3aXt7tAAkqHx07d/ytJmppc6
      2dj0lLYG4HT5MCSV6ZF4L/WxsekpbQ1gL7VHJb/D3dn5XupjY9NTWs6m0lvLiN4o33p9iGDU
      HgFsnl9ajgCqqvKbD99jbmGBew/tEcDm+aXlCJBL7RDqH+Hq1avIqrPXOtnY9IyWI0Bi/BIx
      j8z8wgLbu6le62Rj0zNa7wqhuggHXOxkcqS2N3qtk41Nz2gbBZqcmsEp6ATjI+1EbGzOPW3X
      1Juo/PBf/8URVfM2NueftgaQnLvFStnBzMQIU2PDh343TZNGo4GsKJiGjmkKSJJIo9FAURQE
      4Rk/K2Nj00PaGkAkMchnHz8gG/JDCwNILj0iVzMQZReNYoqaITGaCLKT03C4g1yYGDpRxW1s
      ukFbA1he3yYeD1Epts4FUhSZSjZLIKwgexPExQrbxQaXrlxmZW4RwzDQdR1N05ifn0eWZRKJ
      BMlkkrGxMZaWlpAkiatXr9rbp1vkydbozWbztFV5bmhrAJcvTvPL93/L8MzLLX/XKjW8Ph/1
      qomubZEzJEYTIWbvPcDpCR6kQrtcLl599VXu3LmD1+slkUiwt7d3cEwURdtdsoi9PXr3aduS
      ayuLIMpsbm7CSzOHfh+buUSj0URWFDAMDEASRfrizUMPaGNjg8HBQQDW19eJxWJsbW2RSCTs
      zm9zqrQN8pQKRRrNBsuzt/jtzfuHfhcEEVVVEQUBUZKQJQlBEFpOgOv1OuFwmN3dXQRBQJZl
      qtUq0Wi0+3dkY3MMjvxO8JfFLojpLnZBTHcRBEGQfvSjH/2o1Y9rc3f5xbsfcvfuPVR/lHDg
      +I1er9dZXFzk+vXrzMzM8I//+I94PB7m5+e5desWY2Nj/NM//RPBYJC7d+8yOztLf38/b7/9
      NtFolBs3brC0tEQoFOJnP/sZAwMDXLt2jc3NTVwuF7/85S8ZHR3lnXfeIZ1OI4oi77zzDlNT
      U7z99tuUSiUajQbvvfceFy9e5B/+4R+o1+uUSiU+/PDDg2OmaZJOp7l27drBMVmWSSaTXL9+
      /eCYy+ViaWmJGzduMDk5yVtvvYXf72d2dpa7d+8yNDTET37yE/r6+rh9+zZzc3NEo1F++tOf
      Eo/H+fjjj1ldXcXv9/Pzn/+coaEhPvjgA3Z2dlBVlV/96leMj4/zi1/8glwuh2mavPvuu8zM
      zPDWW29hGAbBYBBVVb/ss7cBfvzjH/+47Qjw8W/eZ/ql1/js5g0cqsq3vv3tY/8DewToLvYI
      0F2O/FL8V155mfc+/JDE+CUGY8Fe6mVj0zPafyHm3mfoJmRzOSLhvl7qZGPTM9qOAIKuUyxr
      SB57lzeb55eWI0BqY45sXaRZr1GvN3qtk41Nz2g5AoQHp7mi+nnzzT9ib2+31zrZ2PSMNjvD
      afyf//lfiQ9O4gpG+ZffswvjbZ5P2n4n+F/+6Z/SaNTsRDWb55q2UaCdbIn+eASFNpmHpklF
      02jqBs1GnVq9gWmaaJqGYRuNzTmhbRRoODGI0+eiVGudrJbeXmevWCee6Gdt/hENQ2Qw7idT
      biApbi5O2qWUNmeftgaQ217g3u0GF6YnGUkcTlrb3d6loTrZ3FrF5YkTFyvslJpcujjzVD1A
      s9m03aguYdcDdJ+2BjB66at4E0UUh7vl75F4mPWdAorqRyskyRgKE4N93L19B18welAPIMty
      z1IhTNPk4c59HuzcRwBeGniFqciF5ybl2q4H6D4tc4F21h6xkmnw2tWLB43++3R6qwuC0NNc
      INM0+fXSe5imyWvDr2Ni8vHKb/A6fLw++q3nwgjsXKDu0nZ7dH8wzMPbv+PDDz/kd5/Ntjv5
      yL9eU6wV2Cvt8t3J7+F1ePE5fHxv+k9Yy65QbVR6ro/N+aClAbj8EX7wR98mn8tRa5yPz/Fk
      tQxRT+wp4xNFiaArSKGWP0XNbM4ybcOg6xtJXv3GN9Hye73U55kJukKktdRTrplhGuSreXwO
      /ylqZnOWaWsAr73+Bvm9Hb72jW/2Up9nxu8MEHAG+WjlGlpdQ6uXubb0Pgn/IC6l9UTexqbl
      JNg0TRYX5xgfn2JpaZHp6cNF8VbodUGMYRjc3brN3N5DBAQuxa9wqf8qYvsvQZ0r7Elwd2lb
      EKPXNT545xfciz8kPjLJeflWvCiKvDL4VV4Z/KoledM0aZYe0Cx8BoDsfwXZe/m5iBjZWKNt
      LtAf/+Ef0GjUyReKvdapJ5imST39PnplHUf8z3DE/wy9skY988G5WbgzTZNKo8FaLstOqYhu
      f5P52LT1DTLZApeuXmV6/PlMaTD1EkZ1A0f0TxFlP6LsxxH9AXplHVMvnbZ6HTFNk5VshveX
      F8hUNFayGX61MIdWr5+2aueKtkuK/Yk4DxbWcQcbTI4O9lKnnmA0sghqhC8uhQiCiKiGMRs5
      kH2nqF1ntEaDR6ld/mTqArK4fw9prcz19RW+NzHd0o0zTZNytcHKdg6nKjMaD6DIL/aGBe2/
      EyzJOBwOtrY2e6lPzxDlAGYjg2l+7jaYpoHZyCAogVPUzBrr+RwTfeGDzg/Q53KjGwZ1/fDa
      jWma3F/e4//++iElrc76Tp7//s49MoUXe5Gw7QhQKRfZ3t5G9T+fu7cJsh9RjVJPf4Aa+gaY
      UM99jKjGEaSz/fYHkESBpn7Y5zdMaDWFL1Xq3F7Y5m++d+XgrZ/Ka/z8kwX+5o+vvrAT/7Yj
      gD8QQJYkYtFY25MbtSqNpkG9VkGr1DBNg2KhgG6c/UmkIAioke8jKn4qW39PZfvvEZUgauSP
      z0VnGAmEWM6mqTT2a7ZN02SjkMOrqigtws6LySyXRiNPuTxhvwsArfbi1n23HQEezS/x5p/8
      gN9d/y1w+bCAqXP30+v4h1+mvLuKjkh/xEuxLmDuZrk4NXqCancHQRBRAq+hBF47bVWOjUOW
      eW1wmPeW5nErKg1DRxUl3hgZa2nAiiyilQ93dN0wEc+BwZ8UbQ1gZnqa2zc+ITY01vL3lbkH
      KN4ApVIatyeGX6ywU9a5dHH6Oa4HMDGyqxjJm2CaiIOvIvZN0Nrp6D6/Xw8Qdrr4/sQ05XoN
      WZRwKQpAy3qBsf4A/+u9B1wc7sPvcWAC8+tpfC4FRRJe2BqDtgawtLTIxasvc/f2Lbh8eCks
      NjiKkkqSaXioPK4HmBrq4+7tz/CH4qdSD3CSmKaJvnYdc+cByuSbgIi+/AGUtpHGv9sTt6ld
      PYD6uOMfhSzL/IvXp/jnjxZwqDLNpoHHpfCD16df6PqCtnuDGo0Kn/zuU0YvvEQi/GzJZM/T
      3qBmQ6P+8X9BfeM/IUj7HcY0dOrX/zPqa/8BwXnyCXfdSIUwTJOSVkeWRFwO+VzMd06KI/cG
      FRUX3/zW8TfEfV4xyykEb/yg8wMIooQYGMYobSO1MADTNKmVKqRXdjENk77RKK6A51Q7nSgI
      +D2OU/v/Z43nI0usBwgOH2Y1/9R8xjRNjEoGwXl43cA0TbIbKZY/eoTT78bT52X900X2Free
      oznR+efFdf6OizOI4Aygr/wGafgbIICevIUgygiew2slhm6wdX+Ni3/8CpKy38yBwTAPf3Wb
      0GAExWXv8X8WsA3AIoIgoLz0lzTnf0H9+n8GQAxPoHzl/6VVZWmtVMXpcx10ftjPVvVFA5Sz
      RYKucM90t2mPbQDHQJAU5As/hAs//PxYG39eVmUatf3Nwr4oU9dqKE777X9WsOcAx8Rq8b/i
      UlEcCpnHE2DTNMlvZWjWGriDnh5qbHMU9kfyThC9qbP+6SJadj+92uF1Mvr1GWT12QZeuyKs
      uxwZBrX58kiyxOjXpzF1AxMQpaM/Cm4aBrXZWar3H4Bpok5M4Prqqwgv6AukF9gu0AkjCAKi
      LCHJ0tGd3zTRPvqY5u4e/j/7V/j/4s9BgNIvf2WHTU8Q2wDOCGa9TmN1Fc8ffhfR7UZ0OnG9
      9hpmo46eTp+2es8ttgt0RjA0DdHrRRC/WKEmIEWi6JksciQC7I8Un332GTMzMySTSXK5HEND
      Q6yvrxOJRBgfHz+tWziXPPMIYBo66VSKelOnppUoliuYpkE2kzkX9QBnDcnrxSgUMb+QlWma
      Js3tbaRo5OBYs9lEVVVqtRpTU1O4XC5UVaVcLuNwOGx36Zg88whQKmSp1atszS9iVDUMBKIh
      N1VUttMFLk2PdVHNFwBZRr10geIvfonnW2+AJFG5dQspGEQKfv6dZkVRcDqdANTrdQRBIBgM
      8t3vfpebN2+SSCRO6w7OJc9sAB6vn2Ryi4HhBKkt9349QMXg0sXh57ge4GRRX3oJwe+n+N77
      YBgoMzM4Ll5Af1zjq+s6mqaxs7NDuVwmkUgwOjpKpVJhbm6Ovr4+DMOw2/sYPPM6wPLsbfYq
      AkNDQ6Q3ltAe1wOsbKUJhPuZGkm88OsA3UbXdQqFAk6nE5fLRaVSOcjlbzabRx5TFOXgpeR0
      OqlWqy2Pqap68NJ64mq1OuZwOA5GIFmWqdfrLY89ua4kSYiiSKPRONCp1bEvcz+qqh4UDR11
      Pw6Hg0ajgdPpFKQf/ehHP3qWhxGK9jOY6MfncRNPDDI00I/bG2AgkaAvsF9UXq/XURQFUbSD
      Td3ANE3m5ua4f/8+U1NTvPPOOwCUy2Vu3rx5cEyWZTKZDLdv3z445nQ62d7e5u7du0xOTvLO
      O+/g9XpZW1vj0aNHDA8P89577xEMBllcXGRpaYn+/n4++OADotEo9+/fZ3Nzk2AwyLVr1+jv
      7+f27dvs7e3h8Xj47W9/y9DQEJ988gn5fB5FUfjoo48YGxvj2rVrVKtVDMPgk08+OdDJMAyq
      1So3btw4OCaKIoVCgU8//fTgmKqqpFKpp+7H7XaTTCZ58OABY2NjvPvuu/j9fpaXl1lYWGBg
      YID333+fvr4+5ubmWF1dJRqN8uGHHxKNRrl37x5/+7d/+2N7JfgcYa8Edxd7Jdim65imgdks
      giAhSKdb/GMF2wBsuoZe26G2+1ME0QGmDqKKI/avEOXWyX+maWKk59E3byOIMtLw6wj+gZ4a
      jW0ANm0xTZNsJcP83iMcspMLsYs4ZVfrbReNOrXdf8bZ/28Q5f2wbVNborb7Ns7EXx46xzRN
      mvO/xCxtI419B/QGjdm3kEe+iTTwak/uD+xUCJs2mKbJ7eRN3pv/JUFnEAH4v3f+ju1C660y
      9coKkmsMUQmBIIAgILsnwKhi6trh62sZjPQCyqv/HqlvAil6AfVr/5HGwruYeu+2aLFHAJuW
      FKp5FlPz/JuX/xpJ3A9iTEam+ef7/8BfvfrvDn10xDQaCGKL7VkECWixV2l+DTE89fTmxLID
      wRXErOYQPJFD5xiGwe6jJNmNFIIgEJ7oJzIWRxCf3WWyRwCblqznVpmITB10fgCvw4cqO9Dq
      5UPykmuMZnkB0/h8e3ajkcU0Gy33WhVcfZjlp78/Z5oG1EoI6uFPWpmmyeoncxiGyfR3rzL5
      nctUsiWS91a+1MKfPQLYtMStesjmMk8dM02Tul5HbvGmFyU3auhbVJL/DdkzhWnU0SurOGL/
      uuWcQQgMYdY19M3biPErYJo0V36NGBxGkF2H5KsFjWa9ydjl4YPrDb86yeyvbtF/cQhZPayT
      aZrou7tUH80hCAKOSxeRwuGn9LENwKYlw8FRPlm9zl5ph4hnf4Pk+9t36HOHccgt9hUSBGTP
      DKJzCL2yiigqqH1/gCC2rn8WRAn1q/+exsOf0Fx8FxAQ45eRL/35/hzi96gWK7iCT4dVBVFA
      dTtpVOqHDcA0qd65S31pCddXXsE0TMrvf4Dj6hWcFy4c/A/bAGxaokgKP7z8F7wz9zMaeh3D
      NIh5+3lz6vvtw5SCgCh7EH0tNlNuJa64UK7+JfDEhWlfZ+0KuNmd33xqkwFDN6iXq6juwwZp
      aBq12VkCf/WXBxV16sgw+b/736gTE4jqvmHaBmDTFr/Tz//z0l9Ra9YQBRFFUroeo9+/Xudr
      OrwunH4367eW6L84iGmYJO+uEBqJILb4yk1zL4WcSDxVTiooClIohJHLIcb2R7WuGoBpGqT2
      UoQiUeQvMTO3OTsIgoBTcZ62GgiCwMhXJ0kv77D88b5PH5tOEBgItzRK0ePBKBafGjFM08TQ
      NATX53OMrhrAzuoiVdnN3sIKl2fsyiSb7iIIApGJfiIT/R1lpXAfZrNJfXER9XGVXO3hQwSX
      C/ELuVRdNYBKzWRwNPFUPYCmaYiieJARanzhU56tjj3Zb6fVMdM0nwp5iaLY8thx/s8Xzz/q
      /1i55kn/H8MwDtqzl210Xp+F8r0/Qrt2jdJHHwMgxWM4/uA7VCqVz/9PN7NBc7sbLCX3CEYG
      mBiO29mgXcbOBj0+pmnCE8MQn96WRhAEwU6HPkfYBtBdBKHVrq42Ni8QtgHYvNDYBmDzQmMb
      gM0LzUEYtFQqHWy/0S0qlQqNRsNyUfzv76VvRR7a79F/1uWfnGNV3jAM6vW65ef0LO153uXh
      eO1/pqJAhmF03Hf/y8j3wgBM0zyWwR9H/rhRIMMwjrUjx7PIn+TzOmn5UyuKv/PpJ8iKQq6s
      c/nqVYLe/aX2do1/99bvkBSFfKnJhctX6PO7jpS/d/sGoiyTLzWYvnSFSGA/v7xdw9z/7CaC
      JFMo15icuUI05DlS/sGdT0GSKZQqjE9fId7nPZBvdc7s3VuYokyxpDE6eZn+iO9I+Yf3bmMI
      MsVSiZGJSySihz/C9wTTMLh182MURaFUk3jl1Zdxq9KR7fPp766jqirFqsDLX3kZj0M+Uv7W
      jY9QVYW8JvDSKy/hcylHyt+++TGqqpArm1x5+SUCbvVI+c8+/QTloD+8RNDrOFL+zq3fISsy
      +ZLOhStX6PMd3R/u3r6B9Lg/zFy6Qjjweb3BqcwBTFEiGo/jkg1yhVJneUEiGovjUiGXL3SU
      NwSRaCyO2yGRz+Y6yyMSi8dxO1Vy2c47MRsIRGNxPG4XufSeRfkYHq+bXHrXgjxEYjHcHg/5
      TKfrm4iySiQSRjUr5CudywlFSSEajaCaNfJavaO8IMlEYzEc1MiXq53lRZloLI5DaJAvHi6H
      bKEQ0Vgcp2SQKxY7yz/uD04F8hb6g/m4P7gcErnc0/3hVFygQmaHpfUdRsbGCfi8SB0S54rZ
      XRbXthkeHSPo9yJ1GKZLuT0WVrYYGh0l6PchS0fLl/Np5pc3GBwZJRTwd5TXChnmltYZGB6l
      L9hZvlLMMre4Rv/wCH3BAEoH+Wopx6PFVeKDw4SDQRR5X76VC2SaJpmdJBu7OUbHJ/B7XYgd
      XIDMbpL17cxjeXdH+ezeJqubaUbHJwh43YgdnlcutcVKcu/x9T0dn28hvcPSxjH6Q2aXxfUv
      3x9OzQVaWt1gYnIa1enseLMAiyvr+/IOV8ebPZCfmEJ1ODt2ToCF5VUmJqZQLMrPL60wPjGF
      qlqXH5uYRFUdHTs/wNziMmPjkyiq46Dzt8U0WNvaZXJyCqdT7diZAVY3tpicmsHpdFiSX1nf
      ZHJqBofL0bHzAyyvJfflnQ5Lz3dpbb8/OKz2h9Xj9YeF5bXH8oef16m4QKoksLGxQbFcsSTv
      kEU2NjYolC0Mp1+Qz5esyTsVaV++eLjWtRVuVSG5sUGu2Nl9A3A79uWzeWvyHqfKxsYG2ZwV
      d0BAQmdjY4NytWHp+rJgsrGxQanS2f0BUET25bWaJfmD53tM+YIF9wq+2B+s9Z+D59uiP/R8
      BCgUCkSiMaoNA0Xu/O+fyFfqOqpF+XAkRqXeRFWsykfRak1UpcWuBi3k+yIRyoY9YtkAAAvj
      SURBVNWGZflQOEK5UsfhsCjfF6FUqVmSLxaLRKNxGgaWRpf99nws32l04fP2r+ugtCg8aSdf
      a5rHkq82DFSL8uFIjGpDR1Wsykf3+0+L59XzEcDn86KVSxSLReqNzhM2n89LXTcZGhqgXMxb
      kq9o+9ev1a1dv1IpP5bv/Abdv75GsVigqXeePvl8Xqra/vWrNWvXr1bKlErW5L1eL+VSkWKx
      SMPC+oDP58UQRAYTMYoWJpBffF6NprX2PO7z1colioU8utnZ/Xmm56u1f749N4BatUo6X2Zk
      ZISA93D1/+9TLmR48OABs7MPkRydv68rCCK5osbIyAhBv0X5wr4+IYvymXyB4eFhNpYXOj5k
      QRDJ5ksMD4/QFzy8PUhr+SKDQyOELchXtTKFSp2RkRE8rhbF6r9HPr3LgwcPePhoHoe783qC
      IIgUtSojIyP43J0rwwRBpFDel/dbeL77z6vMyMgQy3MPaTSNjvL50uPn6zu8fUrr67fvDz03
      gKpWIhQKkcvlLM0BvIEI/bEo45NTRELWFoAG+mPkcjmqNWs+biIWJZVOU65Y81kHE/1kszki
      0Qg1C2+5RH+MdCZNWbPm4yb642QyaUoW5DWtTDAQIJfNoFnQPxjpJxaNMDE1c7D+0on+WJRc
      LmfpXgHi0T7S6TQVCyMYwEB/nEy2QCQWtjSK9ccipNNptKrV5/tYvkX79NwAFFlicXEBTSuy
      vZOydE5f0M/G+gb5YmeDyefzB9VohsVvle2lUmhaifRe55g+wM7ODsn1ZYpV3dJbMZVKUSqX
      yKSsXT+VSlEslchakJdFWFpepljIspfp7NIABHyex5PgzgbzLO25nVyjgcnetrX73dxYYWtr
      nUpTxm1h3rOzvUW1UWdv19r1d3d3qNQqpFo8354bgMsX5MqlC/iDUa5csFY3XMjnyKV3yFiI
      ogQCATKZFDvbG6QsdgiX08Hu1iaSo/OQCuDyBvB5PMiStSV3p9NJemcLWu2n01LeQWZ3G9OC
      vC8Y5eLMJOH4CFOjnWtlAXKpbbLZFLli5xEmEAiwt73O3t426by1qIvL6WRzdQ2Hx9qI7Q9F
      caoOZNGagbmcDrY31lFcnV3WJ/rsJJPILZ5vzw1AFCX29lJI1Hi0uG7tHNWJKAo0atYegCjv
      x58b9c4P2DB0qk2DN779HfSqtTCoUwbJ4SEQ8FuQNlFUJ1955WXUFruXtcKhqsT6B/C6O/vQ
      oiiwt5dGr2RZ2bD2RnS4PBi6QaNmzSVTnW5ME5q1zmFlXW9iqh5ef/01qqXOQQvYj16pTuvt
      6fSGeOnyRUtRIACH00msfwBPi/2DTmUdwO1ykE7n8Pk7T/IAQn4/Hl8fIyNDluTDkShf+8Yb
      xMPtc2ieUK+UyOcLbGxs0j842Fm+VmU7lWNkdPTgU1BHkUvvUS4V+OC3N3E5O7/RG/UaW7sZ
      RkZHCYcsdAhBwKnKZAsaXq+1ESwQDBMIhhkajFmSjyZG+PrXv0440PmNWynl99tzfZuhkeGO
      8rVqhVSuxOjoqKWgSHp3i2IuxfVbszgdrXed+yL1WpXdTIHR0VFC/sMj0qkYQLPR2N8fvmEt
      rXc7lWFyYpjl+fmOfqhWSHPjxg3u379Pqdp50ub0BAh6ndTrdbRK5xGmopVwOp2sLMyxne78
      hvMGQqguDz/4/ps0qp2vX9VKiJJIOrVHcmunozxAs9nANA30prX2TOUKjA1FWFpcweiQCZNP
      73Djxg0e3L+PhebEGwjjccjUG3W0SucRplzM43Q6WXj0gHSh8wgTCEVw+/v4/h++TkXr3J5a
      qYAkiqRSe2y1mJOcjgHoOg5Vpd6wFnUJeFysriWRRDquXrr9YabGR3B7fagW0rDTO5ts7maR
      ZdlSWkAgFEE3mgiyRLFjohrIsoJWyJJMJilaWOl0qAqbm5uUy2VLcXRMaOoGqixTb1iLungc
      Cuube2DUqdaPDjsGwnFGExH84Yil9tlJrrGXLT5uz8669EX7adY1FJeHzPZ2R3lZUclnUiQ3
      NqlUO/cfRZHY3NqkXCq1DLGeigGEggEqtSahoBWfD9LpFKYJsYEh/J7ObkS1VmN3a4NMvvMb
      OhSNMz0xigCUS0Ua+tEdAmAgFmFoZJLhkZGOsqVSkXi8HwSRWCzcUV5x+bg0M4XT4cSpStQ6
      jZKCQNDvo26A30JcHPbbEwQGhkdxOzq/JCpakZ2tbfIWMjWj/YNMjA4hYFIoFtEtRI7isTij
      IyMMj1prz/7+fhAVopG+jvJuXx/Tk2M4nU4UWTj0fE8lGS5fqjIzcwFJsvbvm80mjUbDUmMC
      JBKDNHQIRw5/ZOH3EUWJbKHI1OQED+7dp940uDA5euQ5fVHrX2N3udwoomA5T0cQBIrlCpNT
      kzyanUXTaly5NN3+BNNAqxvMTE8jWUgVgX0XtNFodHR/njA8cREdmWjUQntKEvlSmempMW59
      8inITsb6Q0eeE0tYm9vBfnuKpkG1YW2CLQgCWqXO1NQg9z67S103mR77fK53KiNAuZhlZWWF
      nJVccUCSFbxeLw4LuT0Aq0tzFMsaRYvJc7G+ICur6wyMjhOLRC2dYxVJkng4N4c/EMBtYRIM
      kIiFWVlZIzYwtD96dCCfTbGyskLJQm4/gKw68Hq9lnJ1ABbn5yiXNUsLcwDhgI+VlSTjF68S
      sTBxPg6SJPFofp5AIIDTYlQt2hdgZWWDoYkpouGnR41TMQCvx0uz2cQwO7sbhmFw8dIVAoGA
      peQwgItXXsE0mpY6XD6fR5RkXC43qsNNKGDNjbBKeneTekMnmUxazgbdL9owMZGJ9HWINAkC
      Xrf7cXt2fqMbhsGlK1cJBAKWkgUBLl+6gCAruCxEXfL5PJKs4HJ7cHu9eF2dzzkOO8lVmrpJ
      Mpm0nA2az+cx2Q+PB31PR5pOxQCCkThOGeoWkpnK5TIVrUQqlbY2KWS/Aigej+Ow8obQ61Tq
      +sF+m90mHBsgFoty+dJF6hVrBlAul1FUJ7JFlyaSGEAymjQsRIHK5TLlQpZ0NmdJHkBUnETD
      fZZGDL1eoa4/KU/sfnvGB0cft+cMWqFztR9AqazhdDqRWwRFTmUOsLuxjDc6SLFQgPjRExmf
      z4fH5aDSTBGwGOeee3CH8MA4gijj8xwdW/aHIviCx99NwCq1cp6lpSVKpTKRfmu+bn9/P/lK
      E0O3MG8wTZKLDwkNTVIsloh1yJfy+Xw4hAZmTcZrIXkOYPb+fQZGJxGEPjwd3uihSJzgM+zO
      YJVSLnXQnolha5kE/bEodUFoGXY/U7tCtCOZ3KBayqP4YowMdPbRM7ubrG6lmZqetpSrc9Z4
      8OA+ptFANxVefunKwfFu7Q2a3FijlMvij48dWXD/hJ3kCtsZjZmZaVwW3dCzxL07txFlAd10
      8tKVCwfHz83eoOmdDUzVTVWzNqldS24xPT7A6mryhDU7GcZHhhAEhfHJqRO5/vbaIqo/hGax
      PTd30owPhlhd7xynP4uMjQxjmipT05OHfjsXBjA8fgGPbNJnIawJEPR7Wd/Yps9CnPisUcyl
      2UllcXs8VKvWoi7HZeLSK8h6lXDYWvv4PE42ttKEz2F7ZlM7pHJFPB4XlRYr0+fiG2GrS49w
      +PowikkiwZkjZXPpXZAcuNwOy2Gys4QvGMYX7Lxg9mVYengbT2SU8tY2wemj1zxSO5vIDg+y
      AxzKuXhfPkUoEid0xHvzXNxRwOejUa0QSXROVguGYzhlqGganA8Pr+d4fX00KmXiic5rDJH4
      ADJNNK0M4rl4Xx6Lc9FDilWdq5dn2Nu05tPvZgpcuDDB5rq1dOsXjZohcnF6hG2LyXaZgsaF
      qRHWV5+/9jwXBjA62M/c4gaT0xOW5CNBH3NzS8QHOo8YLyKD8TBL62kmJ6yFZYNeJ/OL6wwM
      DZywZr3nzBtANrVDtqjhdChULWT/AexlC8xMj7OzuXnC2p0/9rY3KVYaOFSJqsWa2myxwtTE
      EFvJrRPWrveceQMIReJUyzm0Up6lxUWKFjZzmhobYm5pg+mZw2GvF51o/wClXIpSIcvCwhJV
      CzUZo0P9LK6lmJkeO3kFe8z/D81IVT5RrGdNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='PRICE_RANGE' width='192'>
      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
      +f8B4X/cqlV6U3cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PRICE_RATING' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='SCOPES' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SCOPE_RATING' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SIZE' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SIZE_RATING' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWWxc2Znff/fe2ljF4r7vqyhKJLV3t9Xutnp6EbrHmAxm4pnxYDKBB8jL
      JANkgEyCBDDgl7wEmKckD3mIswCDTOKOPfak7XZ7LKtbLUvqRS2RkrjvWxWLte91tzyURElW
      VZGXothi8/wAQuJdvvudc+7He+45//sdyTRNE4HgkCJ/2Q4IBF8mzyQADMN4FmYFgj3nmQSA
      6FUJDgqiCyQ41OwqAExdI5XO3v/NIBIKEY0n99AtgWB/2EUAmCzOTXP77l0AjOQGE4sBsjl1
      j10TCJ49NqsnpCIbJM0ynHIKwwRDduNW/CwuLlNbUwmGga7r4j1AcCCwHADIDpxynLVQmHQ6
      hanqeCuqyG6GkSQJWVEAUO7/KxA8z0i7nQhT1RwbPj9Nra0k4zGcZeU4Hfl40nVdBIDgQLDr
      ACiFCADBQUEMgwoONSIABIcaEQCCQ40IAMGhRgSA4FAjAkBwqNlVAKiZJKu+wCO/x1n1hfbM
      KYFgv7AcAKZpMDe3gN+/9mALs9NTbASCe+yaQPDssSyFCK3OsLwRJZuMkBs+QXhxnNVwmlQq
      xtBgD7KE0AIJDgy7ngmempqgvrYWT1UdDkllcnaNgf4uQMwECw4OTyGFMAmHwlTV1CD9xh4R
      AIKDgtACCQ41YhhUcKgRASA41IgAEBxqRAAIDjUiAASHGhEAgkPNrgJAz6XxBfLaH1NXmRq/
      hz8UQ8z9Cg4au9ACmczOzrG6ugyArmm09/SyOjcjAkBw4LCsBYqsz7EeSpFNRlANsDvLWJwY
      xbA5MQ0T3RR5gQQHB8sBUNnYyYs1rUxNTZKKBpEkiUQODE3FlCRsssgLJDg4PJUWaHMzSG1d
      ndACCQ4sQgskONSIYVDBoUYEgOBQIwJAcKgRASA41IgAEBxqRAAIDjW7CoBULMTk3BIAei7F
      3TtjTM0vF5VCZDIZrl27Ri6XAyAUCvHJJ5+gaRqfffYZ8/PzzM7OcvnyZWZnZ3dVEIFgN1ie
      CTYNjYVlH5qhAR0gOzgyMMD4vUkMsw2ZvF7owfSCaZr8/Oc/Z3BwEE3TsNvt+P1+XC4Xt2/f
      pqmpiV//+te888472O12FhYW6Onp2eNiCgSFsZ4XaH2BYCxFLLTB0eMj2CWde3cn6Ow7ikx+
      kWzTNLcWyzZNE5/Ph9frJRgM8sILL+D1erl58yZvvPEGX3zxBel0GofDwdTUFC+99JJYaFuw
      b1gOgNrWPl5phaWlBULry9hlg6Rq4lv34e3r3JoBfvCvaZq0t7cTDoepra3F5/Px7rvv0tvb
      i9/vZ3NzE13XSSaT2Gw2ysvL97aEAkEJnkoLlE5lKHOXPbHnWUkhVFXl3Xff5c0332R+fp7F
      xUXOnz9PS0sLN27cYGlpiVdffZWJiQlyuRz9/f3cvHmTzs5Ozpw5s+f+CA4+TzEKJBW8+Z81
      vb29ZDIZ1tbWeOutt/jiiy8wTRO/38/Fixe5dOkSY2NjqKrK5OQkr7/+OjMzM0Xtzc7O8t57
      7/EP//APAPh8Pn784x+zsrLCjRs3+MlPfkIsFuOjjz7C7/eX9G1tbW3Ln42NDbLZ/GLipmky
      OTnJ4uIiqVSKzz//HNM0mZ6eZnp6eu8qR2AZ68uk7oLP//hfE74xtrODJYk3Zn5acJfdbsfh
      cABw7tw5fvnLX+L1epEkiVOnTnHp0iXcbjdVVVW0trZit9u5du0aqlp8Ee/e3l4qKiqYn58H
      4ObNm7z99tu89957vPXWW2SzWfx+P3a7nXA4TGNjY1FbkUiEVCrF1NQUV65c4Z133qGlpYX5
      +XlWVlY4duwYly5dor+/n8uXLxOPxwFoamrC6/XurH4Ee8q+BIC7px0tld3RsZL8m+Lqh4TD
      Yaanp/H5fHR1deFyuXj55ZdZWloimUzicDh44403uH37NoFAgOHhYWZnZ3n99deL2jRNky++
      +IILFy4AcOLECX7xi1+QSCRIpVKkUilM06ShoaFkIAE4nU6SySQvvfQSyWRya/vKygq5XI4P
      P/yQ2tpauru7WVhYIBKJYJomdru9oL1IJILb7SadTjM3N0dnZyc1NTXous7s7Cx9fX3Mzs5S
      XV1NLBYjGo3S3t5OXV1dST8FD9mXAPAO9WGrzL/cSpKEaZpIUvEbvRjV1dV861vf2vr96NGj
      AHR0dAAwODiIaZqcOXMGWc737n77t38bYGtkSpblx66dy+VoamrC4XCwvJz/zFNVVV599VXu
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='STORY' width='192'>
      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
      OEqa8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TYPE' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2913McSZ7n+QkdqTORSGhNAgQJ6mIJlmxWT1d3T8/d9uzu7dne2e6t2d7r
      /T33dPtwezZmN2tnM9Mzuz291d3VVV2aZFErkCC0zgRSi5D3ECiQKBaqQIKEIPzzgoCnR8Qv
      Af+Gu//C/feTfN/3EQgOKPJuGyAQ7CZCAIIDjfr4L57ns1qq7pYt+4ZESELx7d02Y2eQFHCt
      3bu/rL/Q+28QQK5Y4cL/8X++sJu9LPx//1uYwcYXu23GjuDHhnDv/37X7i91nceb+OyFXV8M
      gQQHGiEAwYFmUwG0p+NPlKViIVTl6TTTkooiS9IT5SFDQ/qe8v2E7/t8cWeZuZUn503zKzVc
      75GH+f5ccSdNeyFM5epbqldpuBu+O4Dn+5Tr7vfWX63Y5Mo7M6caX65vsE3drOLxgTaO9rVw
      ZXSW4d4WbMdlOV/BdT1GBtq4P53Fdl3OHelmabVMudagKR4mX67R25bim3szDHW3cKgzzec3
      J1heLdORSSBJ0JKM0tWSZC5b5NPr4+zXVxFL+Tq/+2aef/NODxdHcxzrTrBasajWXTJJg7Ch
      8Kcbiwx2xBmbLzHYEWdhtcaXd7OcG2ziytgqA21RHNen0nAI6QpzKzU+ONOOpu69zvl3N1fp
      TOq8OZjg8/tFDrWYlBsu83mLM71RdFVioWDz2f0C/c0mHSmD3rRBseZStz3+9utl/v1brXwz
      WaI/E2KlbFO3PQYyJo4HX42V6GrSOdkd/d77/+lunkLN5SfDCb56WKI5qmGoEvmqiyxDw/YY
      bA1xaaLM6Z4I48t1VqsOF4aTfPWwRFNUZbXi0JXSUeTg4bvpX7lQrnPp7gzt6TgRU2e4t5XO
      TIJISMf1fLKFCmFDY3R6mXjEoKc1ye3xRTozCT67PsHrI72UqnVuTy7SnIhg6CpdmQStqRif
      3Zjg4WyOy/em923jB0jHDV4/kiZiqngefD2aI1e0ePdEC9NLVfIVG8+Di6O59XNujOf5y1c7
      kSUJx/W4eD/H2EKJc4Np/nxziVLNJlds7OK32pzB1hDdaZO//yZL3fEYz9YpVB2mVxrcm69S
      qLpMZuscbQ/z5mCCfMXh6lSZqKnQmdJ5/VCM6ZUGbw8m0FUJRZZoS+jM5i1836fheLjeDxgg
      wVuH4/zDlRzzeYvJXJ2Hy3XO9UWp2x4+cH2mwi9PpLg9VwPgXF+MiWydmu1xeaL8xCU3FUC1
      YeG6Hq7nETI0qnWLWsPGdjwWcqXAHkni1aPduJ5HrlilZtmUqg3eOz3Ag5ksvW1N9LWlyJdr
      vHasB11TaNgOb53oY7VU5ZUjXft6GCQBUVNjtWyhyBLRkIoEfHJjiYipUqhYyBJETJVYSAOg
      KxPmv349y3S2ig9ETZWu5jC6KtPbEiEe0oiFtd38Wpsyl7e4O1fl/KE4juvTkdTJ11wihkIq
      onJxvES+6tAU0fjiQZFTPREeLNZJhFRURWIub5EMq/zhdp7VisNyyebufJXOlIGmSpiazFJx
      c5fnVK7BR3fzvDOUQFdlOpIG7UkdQ5MxNZlc2aElrvNP11doiWtETQVdkXA8H9vxiBgKUUOB
      x9qc9PhSiOV8+ancoE3xMLIkkS1UnvFPuj8RbtCtcWOmQkSXGWgJPfP9H3eDXp8ubzo8elY2
      nQNshZWieGkm2JwTXZHner3n3fjhB4ZAuqbQ3ZJcnyxIkkRXJoGuKSSiJul4GICwqT21Z+hl
      otpwqDWc9d/rtkul7mA7HvfnihSrNtPLFe5OF1gp7c2x/VbJlmyWihalusO9+Srjy3Vs1+PB
      Yo26/UOD9+dD1fp+LxIEHrlizdn0883YtOV2tySJhHROD3UCcHaok7Cpk4yGeOVIF68e7SYd
      D/Or88doST1/Ze4HbMfjN1/NcHu6AARLSf5wZYGv7mUpVm1sx+e3l2aRZYmVksXtqcIuW/zs
      1G2PP48W+HS0EHhdJPj0foHJbIO67fHRnfwLt+GT0QKXJkoUag6W45Er2xRrDp8/KFKqu6xW
      HVYqNlemyjQcjzvzVSaydaqWy8XxEo73pMNl0yHQ9FKet0/0c+X+LAB9bSlyxSrNyQhhU0dX
      FWIRk6trnx9ENFXmrWMZsoXgyS7LEu+daOHS/RypqM5nd5YxNYWOphDXxlf5+dmOXbb42ZEl
      KNVdHNenYXvoqsyZnij9GZMPb61ytCP8wm0o111a4zqjCzUkCVYqDpbj099scH+pxnLJZjLb
      oGZ7FGoOnh+4Rr8YcynWHaqWx3tHEhu/12Y3e//sIDPLeWzHIxrSWVgps7hSwvN8bo7NU6jU
      WSlWaG+Of+9Ls4OA7XpMLlaYXq5QrjtU6w4PF8rM5mpMZyscbo9RaTjkShbJyCPf835EV2Ve
      7Y+RiWu0JjRuzVY51hnmdzdXSUe1wLvygsnENJqjGumoyv3FOr1pA4CFos23rpx0VOODkRSd
      SYOupEFYV4iHFN46HGek80mRbtoDfDM6Q9jU1jxGEl/cmqAjHWd0epl0PMKlu9PUGw5Ti6t4
      39O1HAh8aEmaZBIm+D6+JBHSFV4dStMUNbCcGn/1WheaKvPaUHq3rd02MTNoSFFD5d0jCWRJ
      4lxflNWqg8+LbwOv9sfQFIm67aOrEgMZk3w1GN786lQTR9uDBr5YtOhKBeLoatJRZYnplQZx
      80mRbssNelARbtCd4/tWg3qej+X6mJpMw/GwXZ+ILj/TO6VtuUEFgt1AliXMteGkocoY22jF
      QgCCfYHn+/z2xiqFqsMHIyn+240VupsMDmVMvnxYojdt8vpA7Kmve3Ad+IJ9heP6+D68NhDj
      0mQZVZFo2B4Psw1+fSZNcZOVpj+GEIBgX6CrMsPtIS5PlmmLa/z6dBrL9XE9n3LDxXae7UWc
      GAIJ9g35qkNHQme4Pcyn94u0xjWOd0b4ZLTA6Z5nW3YhBCDYN5zrezTG/4tjyfXjX55oeuZr
      iiGQ4EAjBCA40AgBCA40QgCCA40QgOBAIwQgONAIAQgONEIAggONEIDgQCMEIDjQCAEIDjRC
      AIIDjVgM9wxIkXaIn95tM3YGX99tC14oQgDPgJ+fwK98sttm7Ah++tRum/BCEUMgwYFGCEBw
      oBEC2CGmljcGErZdj9p3Yl3O5mpkiw3ylUfZUip1J9j2V3P2dS6FvYqYA2wD2/X4+FaOWEgl
      HdW4OV3i7eE0uVIQ436gLUyhYvPZvVV8z6dQdZjK1viLkxmujBf4cnSFf/t2F5/fW2GwPcJa
      DDJ0VebyWJ6woXBtokhPJsTd2TJn+hN0pU3uzpR573gz8ZD4920X8RfcBtPLNcYXq8RDKrIU
      oVJ3uTFVxHGDJ3VvS4gbUyV+dbaFP99Z4ZPbOZqiGrmSRV8mhCKnuTlV5BdnWvjoZhbX8xlo
      DTO5XGNiqUrUVBnujPLKoSSqLPHWcBP/+eNpkhGN2VyNeNfThwERbEQMgbZBc0InbCh0pk1W
      yxamJhPSFWZyNcaXKshINMd0/unSIrbj0dsSJhZSiYdUwqbC3dkSnekQv7m4gKnJxEwVQ1Xo
      SpuEdIWOJpOmmM5nd1fWf/ZlwuiKTHP85XZP7hSiB9gG8ZDG//pu1xPlbwyl1o9P9MY50fv9
      wYP/3XvdAAx3Phlefrjz0dP95CbnC7aP6AEEBxrRA2yTWsMFCUJ6EHk4WwwS48myxFKhQdhQ
      yMR1ZnJ1ejNPn2dZ8GIR/41tYDsev7m0wO3pIGtmreHy8e0sH93KUrddPN/n41s5xharVOoO
      f7qZ+5ErCnYaIYBtoKkybx1pWk98sVK2ONoZ43Bb4NK0HJ93jqY51BphYrnG8V7htdlrCAFs
      A8f1mMzWmM7VqNQdwqbK3dkyYwtV4iGN6WyNnkyIf7y0QF9LGFN78VlUBE+HmANsA9+H5phO
      Oqbh+RDSZN451oQkSRi6zE9Ggqww54+kKFadg5tJZw8jBLANNFXmyHdcmKb+6CkfMYM/b2dT
      iM5nD18peIGIIZDgQCMEIDjQCAEIDjRiDiD4YULN0Pb67t0/1gsdW0t/JGkmXqP2VJcXAhD8
      IM7iNJVP/2G3zdgS6pELVC4+XUpXMQQSHGiEAAQHGjEEEjw9momk6shNPfj1In55Bb9R3qRu
      CFwbPGdnbSSYE0hmFK+U/d7P5WhKCECwdbTD55HCCZyp66AZ6Md/ivPwEurpv6L+xd+AJKH1
      n8OZvoHc3IskKUjRJsDHuvZb8J8tlemzoHYeQes8gjM/hto5BL6Hu7qI1jmE9fAKaqYXtbVf
      CECwRRQN33Pxi0tIkRS4Fs7UdeyHFwHwq3mkWAbfc5FiGZSWw/i1Im5uEi8/v6ONH0CONVO/
      9Qla+2G0rmHc1UXkUJz6td9jjLyL36hijV0ScwDBFnFt5GgTaudxcG18u4FfL4HnIMUySOEk
      +C4ggQR+dRW/ksOvrKD1ngZpp5uaj3HkDbxKAa+YxSuv4OYXME9/gLs8hRxJonWPiB5AsHX8
      WgnXsXGXxsBz8XJTAFjf/P16Hfv2HwBwp2+sl1krMztrKGDd/Xz92Jm/v35sT1wPyhbGADEJ
      FjwF9v3PdtuE544QgGBrSDJK2yBIMu7SGJJq4Nt15FgzUjiJV87hF5d228p15GgKOdWOuzyJ
      ZEbB8/CKy6itA7ir8/hW8MZYzAEEW8P38Sp5lHQvUjiJfuovkWMZ/EYFHAu1bXC3LdyA1ncK
      r7yCpBpoPcfRB19FH34LVA3jxIX1eht6gJBp8B/+9Qc7bux+I5X4Ciq7bcVO4+NXVvDrJfzi
      Es7U1aC0VkTuPL7uDdoruPkl9EOv4ObmkMMJJDOCXymgtvQhx9IgSeD7GwXguB5Xx8XG7R/j
      37TGIdG322bsDHZk/VDtHMGZuw2aidLch18r4lXz+PjgWLto5JNIkoRXyAI+9uxd1OZu7Nm7
      KE0d+FY92M6HmAM8E77T2PzN50uG7z/ayO/M3wG7AYqGM30dPA9cG2ePPf0BnMWHSKEYXmEZ
      OZamsTSBb9dBUbGn76zX27YAZEnCe4qoxbIEuqpQt7e2xHVPYlegurzbVuwM+mN7Oe1G8NO1
      g5dbexjfqq1PdB9fCuHlFzfU23QSrKsymbiJBLQmQ4QNFVNTkNaiFwPEQhpnBtLoqkxrIoS2
      FvQpHtJojpsAtCaCc3VVJhnReX2olWPdKUxNQVdldFWmOWaSCOtk1s4RCHaKTXuA80daSYR1
      roxn6WuJYagKuVKdu7MFejIRxuaLHOlI4no+h9ri9DRHqTYc/nxngaNdKcp1G1mCwY4EIV1h
      pdwgV6yDD5PLJY52JSlUgzqmrtKSMMlXLPJVC9vZ2dfme4lsySKsK1iORzKi7bY5Lz2bCsBy
      PL64t0jE1Fgq1GlPhZEkiXTMQJFlZFnCcT0kCTRF5vb0KpVGsOKvbrvYrkc6ZpItBudW6g4T
      y2WiIZ1C1UJTZdIxg9Vyg/nVCqoiUaxaQYz8fYLjevz5zgpD7REs12ch3+BoZ5TZlTqaItHX
      Emap0KDacJnK1oiFVNpTJj3NIRq2x+h8mRM9cTzP58v7q7TEDcKGguf53J+v8NawCCXxotlU
      AFfHs7Slwkwvl+lqjnJ1PBs06qjJ+GIRy/GYX60iSbBUqNGTiWG7wZM7bKgsFWosrFbpbYlx
      dTy7PuZ/uFjEdX0mlsoossRquYHjedTnCriev36N/UCh6rBctOhrCfObiwuoioTlePi+jyxJ
      tCYMrk0UAUhFNRJhjbGFCt1pk99fX+baRJFESMXxfMKGwo3pIsmwxmB75EfuLHhebCqAmuUy
      vhjEvJxYKq2XV+qPvB+LhUf7Lx+vc+nB8npDfrwcoLrWSywVNu7ddNydXy++XQxNJmIo3Jgs
      0hzXaU+aJMIqbUmDqeUaH9/OUaw5dKVD6KpMPKSyVJCQJImfn85wojdOT3OIpUKDrx/kA89c
      eLe/1cHihbhB99NTfDtEDIX3TzSjqzK+72O7PoYqI0nQkjBo2B6aEjR4CN69tCYNAFRFpqc5
      BEAmrvPr19pQ5aCuJEF7SjgEdoJNvUC9mSjnDmdoTwWPpKaowZvDrQCc6G3i9cEWZCnw8rwy
      0Lwz1u4xJEkipCsosoSqBNlh5LVGLK99pioyiiyhyEHZt4F0v3sdU3tUd7N6gufPpj3A1HIZ
      1/PXXZulmk2t4aCrMpbjslSo0ZYMk46ZHIznveBlZFMB9LXEcDyPqWww5rddD5/gDbIqB/77
      pqiJqSt0NUW4MZHDOWDBX23H4798McfRrhhn+hPYjsfffj6HLEu8eyzN5/cCD5Hvw8RylZaE
      wZtHhGdnL7GpAKIhDVWWqDVcfHzCukospNGSDFG3XVIRg2sTwbqhmabIgWv8EATHffdYmmwx
      WAezXLQ43Z/AcT0+upklpCss5hv8xckM5bpDc0wktttrbCqAG5MrG37P0WA69/1LIGdXDtzS
      yO8lYircmS3jeT6dTWaQ03e2zGf3VuhvCdOVDu22iYLvIBbDbYOa5XJtoojr+bSnTExdpiWh
      o0gSw51RPh9d4WRvnMV8g6sTwbuTgVbh499LCAFsg5Cu8KtXWjeUneh5tHzh7eEgQUZvRjj3
      9ypCAIIfRE60oQ1f+PGKewC5dRB4utigQgCCH8Rdnadx/Q+7bcaW0I49vSNG7AkWHGiEAAQH
      GiEAwZZR+86gZPqeKJciKVAeTf6VtsMgq6BoSOHEDlr49Ig5gGBraCb60XdpXPtn9GMX8Ool
      sOvI8QxuYREvN43W92aw71ZWcbPTqO2DaIffwLr5e5SOYbzVOaRwAsmI4OWmkZPtuLkp5GQb
      fimHM3sHteckUiiGff/LIKr0C0b0AIKtYddxpm7glXKgGajtQ8jRNNatj5CNKFIoDnoIpf3I
      +ilubgZ7/DJyqgPr1h+Ro2lwLOzRz9GG3wFZRjIiSJKMM3MLJBkpFEM2oyDvTFJx0QMItoxX
      Wgb8IEhWcRmvuIx+7Ce4hUVwHcDHKy3jlXPgu/hWFSXVgT19E33kfbyVGXzHwndtnPHLSNE0
      frWA++0eE8/BvvdZsG7c25mgCUIAgi3jTAUBb63rv3tUOHt7/dC69rvvnkLjyn8NPstObii3
      xzYJpeJ78IzLyiRZQU62/njFxxACELw0eJJMTc881TlCAIKXBt+xaUzeeqpzhAAEW0YbOIdX
      WcV3HZTmbpzxK8iJFvB95Ggar1EJwiXmF5DjGbzC4o9fdJcRXiDB1pAk5KYuQEJJd+NMXkft
      O4Paexp3dQ4pkkQfegs50YrSOYxk7L1Vr3IoGrybMB4tThQCEGwRKYgEnepAMsJog+dxF+6v
      TYwlJCOMV1rGmb6F1nkMd3liV60NDZ0jeu7nKLEUkRPvEDryGlpLD0o4htk3AkDk5HtiCCTY
      Ir6HdeuPACiZftzl8aB8bZjTuPyPAMhNndjj3+x4UrwnkFWqd79Ca+5EMsKY7QNYC+M4q4+G
      ZZ5VEwIQPD3rjf978FZmd9CSzfEbFXBdcD1k3cSrlfFqFXzXxatXAdDbRJrUZyPagSSf3W0r
      dgSp/GiNjxROorQewstNoXQcxW9UcKZvovWfwZm6ETS6PUJ9PHhn0Zi+Q+OxcOgAjUo+qPPg
      qhDAM1Gcxl/8cret2BF8/djakYR+9F3ssa/xyqt4979EH34bOZ7BmbmDNvg61s0/7qqtT0tj
      5p6YBAu2iKIiR1KoPSeR4xmUdCfO4hhecRnt0Dnsyeu7beETKPE0yApKIoOaCt4Qy+HYhnVG
      QgCCreHaeNUCkqyC56Bk+vGykxgn/gKQggVsewjZjJB8739GiTUROfoG5qFTqKk24uf/BUo0
      tV5PDIG2QcP2+E9/muEXp5pJRTSiporn+zRsj9WKTUfKpFx3iJgKH17P8ZdnMni+T6nmkK86
      FKsOh1rD6yHmy3WHeEil4Xg4rk/EVChWHWIhlelcnY6UQc1yiZkqluPRcDziIXU99ugL/76X
      fxNkfPccrNsfBWXX/jl4ou7Q4rWtEj56nsbMPSRVQzLDKH4Yt7xK/eHGnkoIYBuU6w41y8N2
      ff72ywXakwYNx6O3OUSuZBExFP7u4hKpiIahBY30qwcFqnWX1qRO1XL5T3+awXZ8/uqVDH+8
      GUSSm8zWkICTvTGuTpT41dkMN6dLXJssETEUDE1mfrVBtmTxv7/fha7uUBxR33vk3vw2LZbn
      7rnGD2CvzhPqP4lWKeDVK/i2hZpsQWvpBlnGLeYAXwhgOyTCGsc6IyzkG5zpi3NntkwirHK8
      O8rHt1e4O1fhRE+UW9NlWhJBVLhK3eXVQ3GWiha5sk3UVHmlP86DhSpn+uOML1U53BpGUyVa
      EzrDnREeLATelVRE5Y3BJB/dWqEloaMqIoDuZjQmbmHN3A+WbUQSIMt4tQr1h9fx15Zug+gB
      toUsw6m+OBFD4fLDAu8dbUKRJa5PlTjVGycWUvj6QYELI00YWjDdens4yWf38pzujZGJ6aQi
      GnXb40xfnAeLVd4aSmFoMrIEiixRrjm8MZikVHfQFBlVljjTF+PKRIkHC1VEEOnN8ddSt7rl
      1fUye3l6Qx0hgG0gSxLta/H+L4yk18u70o9i+79/PL3hHFNT+OljZY/nAWtbu9bj/OxkEHo+
      Fnr0r8rEdbrSJofbwiKM+jYRAtiHSJLESNfe8rrsV4QAtoHn+/zhRo6B1jCHWsP4vs/vrmWR
      ZYkTPTEujhVIRTQyMY0b02XeH2kiLSJE7ymEALaB5wXDnVItyG+2XLTJJAxc10dXJIbaI4wt
      VKk0XP761RY+ur3Cz07sr2w6SrINfeT93TZjS0itQ8DTvY0WAtgGqiIRM1UatrVW4q+nefUB
      WQrSzYaUnYlw8CJw8ws0bu2PJQ7qMyxAFQLYBjXL5asHeWqWR3vKwFBlFguNwHtT17k7VyEV
      1WhN6PzdxSUujIjsMHsNIYBtENIV/tXrbRvKfnn60absvsyjhBhHO8WkdS8i1gIJdhQ53fW9
      5bsVQvGJHuDbrJCCzTmYnncJ/fhP8fLz+L6HuzSB0tSB2nYYfJ/GjQ9RmnuD/QL5+eAMMwau
      jRxrxrr3OdrQG8iRJhxzLcKcrKB2j+CVchhH36N++TeobYdxlidw50d35FttEICpq/yPF47u
      yI33M7HKKOz9gAfPH98HRUWJNOGtzAaRH4pZfN8DWUUyo1ijX6AfOgeKhnXnE/TB89gTV9CP
      X8Aeu4SS7kJOtOI7FkrrIZzpW3irs8iRFG52CqVlAEl5xpG5oqA1f38Psxkb7uT6MF2oP9vN
      DxC2dPAyYiJJ4LvIZgzfqqIfeQt3dS4Ihuv7gA+yinHsJ7i56WCBnGvj+y7aodewxy6hDbwC
      roObm0brPY09eRWt5wSOZoAkoWR6wfeCnuNZTETeEPFhK4hJsGBr+B7W7T/9cJXKCo3Z2+BY
      62X2vc/Wjxvf/NP6sTMTBLByF8eCn0sPN/z+TCa6NtbM0w2dfnTA79hW0MUJBD+Cm53a0Pj3
      A5v2AKWVLNVSnlq5jGYYJDNteK5LKZ+jpbuflYVZFFWjUS2T6e4nNztFJJHCjERZnHpIx8AR
      SqtZbKtBc0fPTn4nwQtCMqPIqU7chVHkZHtQKCvI0Sa8wtL65HevI6k64OM79uYCuPP1x7T1
      DeJ5DmAwdeca4XiS0cuf0zj9Oo1ahZX5GVp6D7E0OUa5sMLi1BiyrNDae4h7lz7FbtQxQhEM
      M0ysaX8tARA8iX7kbezJa0H0t0wf7sID/GoBX5JRWvr3lACUWBN6Wx/W4iRuOY8STYIko2W6
      cAtZjJ5h6uM3NxfAwIlzjF39mlRbJ12DI1SLeXLz03QfOY5Vr5Fq7cCxLGKpZmyrjiTJSJKE
      JEm4joMkSfi+j+e5B9Vv+HKhaMhNXWiaGWRu8VyUI29Rv/wb5HQX9oOvd9vCDcRe+yUgBRP0
      1l4kzcDoGsJ3XayFh1jz45gDJzYXgB4Kc/jM60RTzai6Qc/wSRq1CrbVIJJIoaga8XQrqq5T
      zudYXZxj8Ox5VN0gOzvJ0CtvUSms4tgNYinx9N/3uDZ+aTkIfltYRmnuxreqSHooWBW4A+mM
      nga3tIK9soA1M0r03AfU7l5EjTdjLU3hWTW0TBeSJG8ugHjTxjjrRjiCEd4Y8FTTgw0cieZW
      4ukWlDX/bXv/EIAY9rxk1K/+Fkkz8WtF3OxEsLXQsbHH9tbTH6D8ze+RQzF8z8N3HOzcLE5+
      CTkUwa0UcQtZvFrp+bhB5R3K5yTYZRxrfZuh/21aI3jmjC4vEt+xcUsrAJS+/Me1Mgu3tLZN
      cu2zTQWwPDPBxK0rvPrzvwbg4Y1LlFdzdA4eY2nqIdnZSY6dv8CDb74k091P/4lXdiw8h0Dw
      vNj0PUCqpYNQ9NEbObtex3NdFFVj+LV3aWrrQjfDIEnBRFcg2EOER9763nLz0KngrfYam/YA
      qr5x617f8bOomsatz/9I1+AIqdZAIK/87F9w67Pf4/u+6AEEewZZM1ASGaJn3sdenkFv7aUx
      ex/ZjBB95We4xRy1HwqOO33vJrVSkcWpMTTdoFGrkp2ZYODkq9TKRVr7DmPX64xd+5pUa4do
      /II9h97ag708g5rMUBu7it7Wh5NfonbzKqFDp8H3NhdA95HjdB85vqHsW+9ONBnsbFIiUUbe
      3B/7RZ8rsW5of223rdgZqvtzE3995h6+3cDoGqI2dhUlksRamMApLIPnYi0FaVvFYrhnoTCF
      P3MwwqNjjuy2Bc+Ekw0SdVQLWQC++5bCzS8DYkeY4IAjegDBS0v09PtU718mNHgWJRynPnET
      vbUXZIXy5Q8B0QNsi0LV5ssHeaqWi+N6VBsuDdvD931sx6Ncd6g2XD69l2elbON6e/CN0UuK
      1taPEm8CSaJy9SPc8irW/DiV21/gVYrr9UQPsA184OFSjfvzVXqaTUp1F8f1+eBEms/v57k7
      W+GtI0nyVZurkyVMTebNoeRum30giBw7j2xGMNr6sXPzOIUs+B5m7wj1qdvr9brB890AAAvG
      SURBVEQPsE2GOyLEQyqGKnPhWBAdulR3sByfCyNNjC5USYRV3hlOih5gB8n/8W8oX/uIxswo
      ajJDY/oeAL7r4FVL6/VED7ANIoZCoepwvDsaJMFQZd44nODWTJnTvTGmc3VO98ZoimgossRw
      x97Lnv5jyPsoNKL8ndCI1uwD4FHGSID62NUN5wgBbANNCZ76j5OJ6/xkrawjZTzx2X7Dyy9g
      3fzDbpuxJVT36XtYMQQSHGiEALaB5/t8eCPH2GKQedz3ff75Wpb/fiNH3Xb5z5/OYTke1yZL
      /P2lpfV6gr2DEMA28DzoajIo1YPVsMslm5a4TjKssly0aY7qeJ7PUHuYjpTBSnlv7Zp6WrSh
      8yiZvi3VVTs3BliT0z0gycixzCZn7A5iDrANVEUiFlJplJ5s2GFD2ZC9UVdlCtV9LADNRDv0
      GtadTzC6RvCtKn6jij1xBa33FEpTJyBh3f8Srf8sqDp+o4raPYK7PIlx8gPqF/8eKZpC6RxG
      0ky8UhY5nsGv5J/LrjJJDxE+/XQTdiGAbRCERy9Qsz3akzqGKrNUtJBlCcvxmFiuI0sFQobM
      UsFiqH3/eYHWses4UzfArmOPX0btPBZEYZNVJD2Mm5vBtxsorQNYt/8UZJRPdyGpOpIZwZ66
      jpufQ2vqQFI0/FIWORTDuvMJWs/J52KiZ9UoXfnoqc4RAtgGIV3hX73WuqHsF6ce7YP+jxc6
      d9qkF4qbm8LNTqEfeRuvuIRv19GHzgeN36qC6+DnptGG3sSv5PFrVTzVwMsvIqdk5EQr3soc
      km4imVGcxTHwHNz8wq59JyEAwZZxFwK/uvVYxphvyx7HuvHho1++DYGYndz0ul5u6jlZ+PSI
      SbDg5USSkVQNJHn992/L1GQLRvcwKKroAQRbR053o6S7sR98jdp9HBwriPTcfxZ7/PLGSBG7
      TPzVn6M1d1CbuI2zuojW3IkaTaImM1TvXcJ3XWKnfiJ6AMEWkST0oTfxq3mU5m6UVDtevbTW
      +L9B6zuz2xZuQIkmqdz5isbkbUL9x3FWF9fLvEYVSVGQjZDoAQRbRFbBdUA10NqP4MzdQ+0c
      BsfGb1T2XATx0tWPMDoO07BG8epVrIUJvHoFvbWX2vhNJHltOLTbhgr2CW7Q0JVUB9aDr9EP
      v4bXqOAVlzFO/zLw6OwhnJUFnJUFJM2gPjOK71jY2Vnsta2SANXRy0IAgq3TuPbP68f1i3+3
      fvxtsou9iG83sJc29zKJOYDgpSV27gNkM0zszE+JnngHSdWJnn4fs+9RtJMNPYAiw0BT6IkL
      CTaiF8RzY6+jdxxCCUWRNBMt00nt4XXMvmPImo7vNNbrbRCA58FcaX+luNkNbHdvTfgETxI5
      cg45HEdv62Plv//fRI6dR4kmqT64gtlzlMbcQ/BcMQcQvJysfvT/orcP4BSzxM7+NIgEcf0T
      oqfeC/YHr8WzFQIQvLRY80HmydI3j3a0Fb/6bxvqbDqYzS8vMnbtEr4vNnILXl427QEufvgP
      9A6fZPSbL7GtOr3DJ3lw7Wt6hk8w++AuyUwbPUeOM3XvJsXcMk1tHZRWc8TTLSxOjjFw4iyT
      d64TSaSQJJmVhRlUTSeSSHH41Ks7+R0Fgk3ZtAfoGDhC/8hpGrUK8+P3Gb91hZHzFyjmlqmV
      iuSXF/A9j+JKlpHzPyE3P0P/yFnGrl/C9z2WZyZxbJupuzewrTqHTr1KPN2C6+zjTSGCl45N
      ewAzEsX3fRrVCqFIlOaOHm5+/kfa+g6DJJFIt4AkoekGt7/8mFgqjW6atHT1USsXMUJhXMfB
      jEQxQhEUVcUIhZDk/R9GXYp3I3UckF6sZu62BS8UyX9skF+1XP6fq3sn1+te5a8bvyH54G93
      24wdwY6cpPzpP+22GVtCOfo+C5893Y4w8UZHcKDZVAC+71PKr6z/Xi0VmLl/m0qxQKWYZ3Vp
      Ht/3KWSX1o8Fgv3GpnOA+Yn7jF27xDu//l8AmLxznXRHN7IscefiZyiKimNZLE49pGNgaMcM
      3ov4vs/XD0u8fij+XK63WLRYLloc74o+l+ttBznRhnZsP4VGfE6b4jv6h1ieebSPM9Hcyszo
      bcxIlHhThlRLO2PXL+E6NncuLvHmr/6nDdn3DgLZks1/ubjE+0dTjC5UuTtf5dX+GJcngkjQ
      EUMhEVaxHA/Pg3zVYbFoca4vxu25Cr9+JcPsSoM781VczyekyczlG7w28HyE9Dxw8ws0buyX
      0IjPcM5mH6wuzrGyMEtxJYuiqvieR6q1nVqpSCG7RCG7RP/Iaabu3QJ8fOBgNX+ImgonuqJM
      r9TpSZt0NxmMLdV4tT/OeLZG1FDIVxxcz6czZXBjpsyZ3hiKIvHB8SaSYZUrEyV+ebKJD2+u
      MpGtc7o3iqHJNGyx3uhpkXWT6POKC6TqBifeeh9F1VAUhUxXL+X8Cr1HT2HVqziWRSSRIhSN
      I6sqsnww59M1y2WwLYymSEQNhXRU48pkib5mk95mk4dLNRRZorvJJGzIzK1adDcZRAwFgGOd
      ET68uUrd9vjlySYmsnXaEroIpf4MeFb9+cUFiqXSxFLpDWVNbUGcGzMchXBQ9m3GyIOIqcn8
      7PiT3/8nR1Prx4+P4492RDj6nRDpYUPG1GXeG06QimgMtoVfnMHbRTWCbt51wXOCbZKKEmQK
      cRogSUhGBL9RXftZCaIxyArgB8d2fZe/xEbEYrhdJmaq/OLEPniIyArht/8tKCrOwgOcyeuo
      3SOomX7QDKp//L/QB1/H93283DT60XdxCwsosQz21HW0gXNIRojan/8mEMYeQQhgG1iOxx9v
      54mFFAZbQ3zxoMihlhC26zGVa/DGoTitif2XE+B7kZVgX+3oF7iFRUKv/A80bv0JOd6CM3YR
      8JF0E+veF+j9Z3Bm76C0DuBmJ3Hm76MNnMO6/Qm+u3NLYeRwHDWRxpoff+IzNdWKlu4QAtgO
      U7kGfRmTe/NVHNdnpDPCrdkKvzjRhKpITK/UXx4BOBb22MX1IY5bWMLNTSOZESRFB9/HGv0S
      feBsEDGi7TDW6JfBkMdzse59hhxNww4JIHribZRYE9bCBMl3/iVIEm5pFWQFp5hFCcfxbUsI
      YDt0Nxn84fYqDxZrnD8cZzJXR1clqpbLQt6iKarttonPFWf+PgByLI01+kVQNnt3/XPfqmHd
      +xwAq5TbcK67NI679OST+IUhyVRuf4ne2oMab6L28AYoKtV7lwgfOYckK/iIIdBz4WxflFRE
      ZXmhRiKkcHuuSqXh0dX0cnrGvO807r2ItTSF0T1EffIO+D6+76GaESLH3qA6+g1KLAmuIwSw
      HQxN5i9PPfKUfdfD87Kh9Z5CiiRxpm6gDZzFb9Rw8/OorYdwlydx5kd328R1rIUJrIUJAKrF
      QLBKPI27duzVgkyRL+cjSvD8kRW0/jPguXi1Is7sPSQjgpudxl2ZQ4rs/fzH3zb+xxECEGwZ
      r7CEuzqHku4Jlr3Iaz5+30NSjR+/wB5Da+kWQyDBFvFc3HIOtfUQzuwd1M6jQQqk1gGUpg7c
      lbndtnAD4eHXUGMpKvcuEj50msbiBEb7AF6tgrU4gdl/QswBBE+Hff+r9WM3N7N+7Mzc3g1z
      fhBJkihd+5jw4dNBb+VDY+Y+WnMHRvcRSt/8gfDQK2IIJHg5URPNxE5foDE7thYUdw6z9xiS
      ZuKsLBA7fQF8X/QAgpeT+vQojdngvYVTWAag+PVvH30+Fby/ED2A4KXk28b/YwgBCF5a1Ka2
      tZWoElpzJygqZv9xlNijxYdCAIKXEjkcI/n2r1HCMYzuIWJnf4pshHAKWaIj5x/V20UbBYIX
      RvTku1iLk6jJDGb3Ebx6Bd+xMbuH8d1HeyeFAAQvJfWpu8i6iaTqNGZGkc0IWrodr1pE0vT1
      9KnCCyR4KbHmxrAWJ4Mw6L5PY24M33VxowVqE7dgLamfEIDg5cV11g/9tZi0bmllQxUxBBIc
      aL6TI0yiJ/lyB0N9Huh2H1L3+R+v+BKgGP0Yx/fOHt4fQuk5Raz2dMF5/n/bWgbbyKcPCwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TYPE_RATING' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy993Md15Xv++lwcs7IgQABECAYRVoURYlWtIJHsi2H8Yzr1tyqqVuuej/f
      er89/w233v1paurW1Fx75snWtSzJiqSYxEyCBAEQOedzkA6Akzu8H0CCbDQAUrLIGVrnW4Vq
      8nx77V69e6+9115rd29B13WdIor4jkL8j1agiCL+I/HIDKA4sBTxJOCRGYCqqo+q6CKK+Nbw
      jQ1AU/KkM/m1/+gqC/NzLC6tUOz3i3iS8I0MQNd1Brra6RgYAkBbneX28Cyr6cy3qlwRRTxq
      yN9EKDU/ieqMYM+n0YGCJiMUVognREpLI6CqaJpGoVD4ltUtoohvF9/IAFRdJLcyx8TcKlWx
      KIIsYJNEsukUmi5glWUURUGWv1HxRRTx2CD8RXkAXWdycpLS8nJEQTBQ38QAVFVleHiY+vr6
      b6xSEUV8HfxlXbQgUF5R8RcVMTk5ybVr15DvjBoLCwtFAyjiseGRJ8JGRkbI5XKcPn2a3/72
      t8zOzhp4r9dLNpvl2Wef5ejRo3g8nketUhFFrOORG0B3dzfLy8tMTk7y5ptv8tVXXxl4l8tF
      S0sLsiwzPT3NCy+88KhVKqKIdTxyA6iurubEiRPEYjFWV1cpLS018NevX2d0dJT/8T/+B3Nz
      c1y8ePFRq1REEet45AYQCoV45513CIVCXLp0id27dxv4XC7H3r172b9/P/v37y9mkIt4rHjk
      BtDW1kYymaS9vZ1jx45x8uRJA3/48GGsVisvv/wyVquVZ5555lGrZEIulyOVSpHNZotrmL5j
      eOSB+mg0yqeffkowGCSfz+N2uw387du3aW9vx+Vy8eabb3LmzBl+8pOfPGq11jE0NMS5c+eI
      RqMsLS3R0NDAwYMHH9v1i/iPxSM3gH379pFMJjlw4ABerxdRNA466XSaZ599lnw+z8mTJ9E0
      7VGrZMDU1BStra3s37+f4eFhuru7v1E5mqaxvLyM3+//ljUs4lHiL0uEbYO7ibDTp08TiURo
      b2/njTfe4IsvvuCdd95ZP09VVaanpykvL2d0dJTl5WX27NmzzmezWT755JP1ucHx48cJh8Pf
      mp6apnHlyhXGx8fx+/0cP34ci8Xy0PJtbW10dnYiSRI3b97kH/7hH2hubn5o+WvXrpFIJDh+
      /DgOh2Pbc1VVZXx8nJqamocuX1EUrly5wt69e3E4HMzNzRGNRh9a/q8dj3wEiMViZLNZXn75
      ZT7++GMURTHwkiRRcSeZVllZSX9/v4G/cOEC+/fvp7q6mqWlJc6cOcPbb7+9zi8uLjI8PIyi
      KHR2dvLaa68ZIk1DQ0NUVFTw1VdfMT09zcsvv2xoALdu3aKiooK2tjZUVeXGjRscPnz4oe+v
      oaGBwcFB6uvrsdvtNDU1fa36mZyc5ODBg3z22WfYbDaOHDliGEUmJyfXDaxQKDA/P/+1DOD0
      6dNEo1Hef/993nrrLb766it+/OMffy0dt8PY2BgnT57E4/GwurrK0aNH2blz57dW/teBruvk
      83lsNttDyzxyA2hqaiKTyeB0OnnrrbfI5/NbnqvrOsvLy4bf9u7dy0cffYTL5SKbzZomydPT
      03z11VccOXKEVCpl6r1v376N3+9nenqa119/nVOnThkaQDabZWZmhmg0yoEDB0wu0OjoKGVl
      ZVy6dInJyUleeeUVgsHgOu92u/nJT37CjRs3CAQCKIqC1Wp96Ppxu92EQiHefvttlpaWSKfT
      BgOw2+3Mz8/z0ksvkc/nuXTp0kOXDRAMBrFYLDz33HN8/PHH37qL2dvby/Hjx6mpqWFycpJb
      t249VgPI5XJkMpn1f1+9epU333xznc9kMpw6dYp0Oo3T6eT48eM4nc51/tEawOoswlwPdy/n
      vPOHVgHBOgAGBgb44osv8Pv9KIpCPp839MB2ux2Xy8WhQ4eoqKgwjRDNzc1Eo9F1V2uje1Rb
      W8vnn39OaWkpq6urlJWVGfjDhw9z+fJl5ufnuXnzJq+99pqBb29vx+v1MjIywuuvv87Zs2cN
      I1ChUCCXy9HY2Eg+n+eLL77gjTfeeOgq+v73v49wZx2V2+1maGjIoGMwGOTQoUO43W5mZmZ4
      8cUXH7psgNbWVlZXVykUCjQ0NJjyMH8pnnvuOb788kuuX7+O3W5/7InM3t5evvzyy/X6T6fT
      Bv7s2bO0tLRQXV3N2NgYZ86cMTzjR2wAMzB80vx75TPrBlBdXU19fT0vvfQSiqJw4sQJw6nn
      z5/n6aef5sKFCzgcDrq6ugxuRi6X49y5c+zfv58zZ84Qj8cNLs6uXbtYXFxkcHAQi8XC008/
      bSh/ZGSEyclJAoEAN27coLm52VB+VVUVn376KSUlJaRSKZP/PDQ0xAcffEBTUxOKophGMF3X
      WV1dXe+B3G73eoOHtQ7gzJkzuN1uFEVBVVUOHDiwzt+4cYPh4WHef/99WltbsdvtHD9+/AEV
      b6y/xsZG/vjHP7J7924WFxeJxWKm83RdR9d1U5DiQZibm2NsbAyv18vS0hITExM0NDR8rTL+
      ErS0tGC322loaCCfz5s6yMbGRr788ks8Hg+pVIrnnnvOwG9rALquM5uYJxYJGR7atwmLxcLL
      L7+8/u+NPXBTUxNTU1O8/vrrfPDBB6Y5xLlz59i7dy+//e1v+cd//EfOnz/Pj370o3X+0qVL
      WK1Wqqur0TSNU6dO8corr6zzDoeDTCbDs88+i67rpoV4ra2tTE5OUl9fz9WrV3nppZcMfEND
      A6+99hotLS0oisLt27cN/N0wazweJxKJcPjwYVpaWtb56upqqqqqeOWVVygUCnz++ecG+ZWV
      Ferq6ujv76e+vt70gJPJJH/6059wOp1ks1lefPFFQy8fCoVob2/H5/OhaRqSJBnk+/v78fl8
      fPLJJ1gsFg4fPmyog3g8TigU4tatW4yNjfHqq69it9vX+ba2Nn7605/yu9/9jl/96lecOXPG
      YAB3/XJFUZAkCZvNZmhLqqoiiiKFQgFFUXA4HF+rrU1MTHDq1Cl6enqYnZ01dQ7RaJRAIMDx
      48fxeDyMj48b+G3NfTWV5v/9539jaib+0Ap9HSwk4ty4fMH0Nzk2sn5OZWUlS0tLJJNJnE6n
      oXEDhMNhdF3nrbfeQhAEUyQlHA7T3d1NR0cHNTU1pjlCaWkpv/zlL+np6cFqtZqWcJ85c4ad
      O3fy3nvv8cwzz3DmzBkDn0gkOH/+PJ9//jn/8i//YpqAjY6O8sILL7B7926OHz9uasCapnHk
      yBGuXbvGJ598YnIhjh07RjKZ5L/+1//K4OCg6QGfP3+eN954g3feeYe33nqLy5cvG/jdu3ez
      a9cuvF4vXq+XY8eOGfihoSFyuRxut5vXXnuNrq4uA3/hwgVSqRQ3b97kwIEDpkTm0aNHef/9
      96mrq+O9994zjF6w5qK8++67nD17lvfee4+Ojg4D/8UXX5DJZPif//N/8u6773L9+nUDf+bM
      Gd59912Ta3MX7e3t/PKXv2R4eJi//du/Nel/8uRJnn76ad5//30ymQw3btww8NJvfvOb32ws
      VFU1Pjl5jv/z5xMsLa+gqhpN9bVI0sMPj5qmIaYTMLdJXN1XCcF6FhfmGO3vI726avhzutyE
      omvD9N0k1R//+Ed+8IMfcOHCBRobG43XEUV27tyJ2+029eC5XI6KigpeeuklAoEAtbW1JnXu
      yjc0NDAwMEAoFFrnMpkMX331Fblcbj2EWF1dvc6fOnWKN998kxMnTvCrX/2Ky5cvs2vXrnW+
      urqaixcv4vV62blzJzU1NQYj+eKLL4hGo1y9epUXX3yR06dPG+5veHiY69evMzs7y8LCAjab
      zeDClJaW8uGHH9Lf38/t27d54YUXDJO87u5uPvvsMxKJBAsLCxQKhfWoG6y5eKdPn2ZoaIjx
      8XFef/11g36JRIK2tjZCoRChUIhMJmOIQt24cQNd13nxxRc5fPgwXq/XULcdHR3U1dXxzDPP
      YLfbmZiYoK6uziC/tLSE3W5fN8D77//mzZu8/PLLnDhxgtu3bxOJRAz3Z7PZ0HWdffv2kclk
      cLvdRCKRdT6fz5PJZDhw4AB/+tOf0HWd1tbWdX5TF0iSRAI+D/OLSd5+7QWOHz30yFygByEU
      CtHW1oYoily5cgWfz2fg29rakGWZS5cu0draSmNjo0HX69evY7FYuH79Oq2trTQ0NGx7LxtH
      gF27dlFbW4vFYmFlZYXFxUUD39raSjKZ5Be/+AWZTMZkYB9++CHLy8sEg0FsNpvJBdm7dy8n
      Tpygr68PVVXZt2+fgR8bG+PIkSM0NzczMjJCd3e3IU9yNwLS0tJCfX09HR0dhkDAxMQEb7zx
      Bu+99x4//OEPuXr1qqF8RVHQdX1d741RoiNHjqyHou12u6HxwZqLdPToUT799FMkSeLZZ581
      RMmee+45Ll26xB/+8AecTievvvqqQf7tt99mfHyc5uZmstmsyUe/W29vv/02uVyOlZUVA+90
      Ovnkk0+or6+nr69v3Z2+i+rqahwOB2NjY9TV1fHUU08Z+E0NoFBQcDoc/Pf/6x9QVe0/rPHD
      WpSntLQUl8vF4uLipkmwZ555BofDQUdHB11dXYYFd4IgcPToUex2+6b81NQUHR0dSJKEoijE
      43F27Nixzk9PT2/L3z8aqKpqekAAP/7xj5mdnV13Ee4fpcrKyvjRj37EysoKNpvNtBjw2LFj
      nD9/nvfee49AIGCKAl2+fJk33niD06dPr0er7ndDjh8/zscff8wPf/hDzpw5Y5j/wFqU5MiR
      I5SWljI3N8e5c+f44Q9/uM6fOnWKWCzGBx98wFtvvcX58+cNYWSfz4fH4+FHP/oRq6urpFIp
      Q/nt7e2MjIwAa53R3ZH2Lm7fvs3Vq1epqanh2Wef5csvv+T1119f55ubm/n9739PU1MTXV1d
      pgZ++fJlfvjDH/JP//RP/Lf/9t84c+aMYYQ7ffo0x48f5+TJkxw4cIALFy4Y3MxNDcBikdnX
      +vUSOo8CmYUUy+MLACyRQgDmZ6dxRjx4ytZi5c8//zxOpxNJkkz+58PwDoeDRCKxPgm9cOHC
      1+I3YmMOoKGhAavVyo4dO6itrTXlQe7OWxwOB6qqMjMzY+AlSVrvFRVFYXBw0OAiHDx4cN11
      +eijj0xzHKvVuh62raurY3Bw0JBnOHDgAJ988gkul4tMJsPzzz9vkA8Gg1itVo4dO7ZpHuH5
      559f7yAdDgfxuHG+WFNTQ19f33oEa6OLOjMzw1tvvbU+T8tmswb+4sWLvPrqq/zTP/0Tv/71
      rzl79ixvvfXWOl9XV0c2m+UXv/gFqVTK0PhhbUQ/efIkFRUVlJSUkEwmjTybQiefy6Fq91ZJ
      CKKEzWbla40FzhCUHTL/7q0CwOXyUFFj9sl9wTUfXNc01Lxi4nV17SHk0vMUVkdIrhp5u6sE
      p7ec1VyORaXA4rLxpr12O37H2lAeCAT48Y9/vD55/sEPfmA490F8IpFgcHBwPZIxMjLC3/3d
      363zVquVf/mXf2Hnzp0cOXKEc+fOGSJJd/MIsOav3rx5k/LycnOd3cHGHjYQCHDhwgVEUURR
      FL7//e9vKavrukne6XTicDhobW1dj+Xfj5aWlvUITXNzsymEqus6ExMTlJaWIkmSwf2BNQP6
      2c9+xvnz5/H5fKYw67PPPksikeDYsWNcuXKFqqoqA3+30/j5z39OOp2mpKTEwN+/7ERVVdOX
      SF577TVWVlawWCwoimLqBLcwAIWTH32Mr/TexWYmF3njp2/w8ElmQJTB6jb9XEDEAoiSiCjJ
      SJJkcLOkO364IInIdvO6HFFeq8RcOsH81BUTH4jtWzOAfI7Rxfn133V9zbDrYqX4HU7U5DLJ
      iXFsskxeFMkpCqquo0SjyOEwLC7C1CT3e70egHAYYmt1o2kat27d4oUXXqBQKDAxMWHQpb+/
      n7fffpuOjg56enpMPdDg4CAfffQRjY2NFAoFVleN1tzb28vZs2fX8wSaphke4pkzZzh06BB/
      +MMf+Pu//3suXLhgcGF6eno4d+4cbrd7vXHcL3/27FmOHj3KP//zP/PrX/+aCxcuGHrYL7/8
      kueff57f/va3VFdXk0wmDZPMCxcusLq6ypUrV3j99df58ssvDS5Sd3c3oVCI3t5enE4nfX19
      Jhdoz549/Ou//iu5XM7kojU1NfHVV18xMjJCU1MThw5t0qHeh40GLAjC+sRcVVUmJiYIBALr
      /BYGIHHo2HMEIyHmJsewBGLs3pXl4ZeIrUHVdDp6x2jeUYYkiiiqitUic6t7kN2+WnRdp7un
      l5bmXeu+ryRJcDd2XFh74IIgoOs6giBQUBRsmoamaaiajqbpa/MUUUASBRRVp1BQ0XUdtVBA
      VRTEOwaWnJ+n68o1an/+MwCGBgYYO3uWgqqyKxajNx4n4HTQfPTomgEk4nB5kzfU9uxbN4BY
      LMbPf/5zvF4vuq4bGges+fDj4+McP36cs2fPmvjGxkYURaGlpQVVVU1hvOrqaqqrq3n55Zc3
      zRPU1tby4YcfYrFY+OCDD9i7d69Jfnx8fH0pxcZEY2lpKaqq8s4771AoFExBhmw2y9mzZykv
      L+eZZ57ZdCnGrl27yGQym67mnZiYwGazEQgEePbZZ7l69arBACYmJqisrFwPcZ88edIwrzp3
      7hzBYJB0Oo2iKJw7d84QCl5cXFx/zzyfz9PT08PPfvazdV6701ZgLSLY399vKH/L1aA3PztJ
      xSuH+Px/fYTF5+PHP3kDabMTt4CiKGTmJ3j/97/jmb11CILA9FySiN/NRFLDGasjn82yMJeg
      traGoaFh8oUCu5t3EYpEmZyZZWZimqg9iM1qY25xHp/by9ziPIJToqy2guGBG8S8c0zNrpDN
      KlSV+xibSqLoXl59879w+eZNxufi7Dp4AASB4e4edE3j+aNHqYvEuPTFCZqWluicmSGvKGQK
      BWRJ5JmXXsKzdy/09cJXZ803t2cfPHUIbWkcdabDRIuhOqRIo1nuEeNusunbDFrouk48Hsdq
      taJpGjabzfBOh6qq68GJyclJ8vm8IRKWz+f5/PPP6evro6SkhL/5m78xyI+OjtLe3s6OHTvW
      f78/zNrR0UF7eztzc3P89Kc/ZWhoyJDL6Ovr48SJEzz99NPk83lGR0f5+c9/vs63tbWtG/Dd
      EfCXv/zlOr9lJjhc6efEHz6kovkQbmvq6/n+d+B22tlRHmFHeYQL7QPkFZXZhWX84Ur2HT7M
      qZNrvdHCwiLJ5WV8Ph+CIJBKpVhYWCC5kmRXrJ7ekX5kSWZuaZ50Nk00XIIkSRzc38xo32my
      WYWl5Sxej43GuhCJJSvxeJyFhXmsdju6rrM4GyeXTjM/G2dhZwN1kRi6KKDpOoqmYZVlakMh
      VnM5FlJpHubbFMr4FXIn/h/T79bD/4gUaUSbWkDtmzTxYlUEaUcJ+bkzZMf/1SwfexN72dus
      ziRZHEyYeG9lAF9ViI7pdk73nzDxh6uP8L3qZ5js76L/6jkTX9P6FDWtTzGyMkDX4g0Tv9PX
      QoOvmZWcylJGAZufPIAEaQXUrILPLrMwP8/s9BQAiZnpdfm5eJzwnSUjVqvVsDhtI+6OcFvh
      bmhbkiQkSTLNj3bu3EkwGCQcDqOqqqmsPXv2IAgC+/fvX59j3Y8tDaCi+SC/aD7ApbMX2fu9
      I9/s3UkBrBaJ3tEZLLKMroPHZaeg5O9YZQXjikJJLEo8kUAQBARRRJIkZFnG4/YgyzIW2UJJ
      OIbVYqV7sAdRFHG5XMhSDlkWEQRwu6xEQk56B+bJFJwcPlZO3+gIi/kcgigSKS8jUl7G5PAw
      3mCA/v5+dpaXc/F6GwGnk/pwmOsT48iiRI3L+eB7ewzIr2ZZHps3/W7z2KEKZpenuThibuCl
      3jK+V/0My3OzDLVfNvG+SAk1rU+xlFugZ8k8ggVtYfA1M5nMcXnMHNbdV+Zib5mb3ttdfPh/
      3jPxL732Oi+88iqfXB7gf31sNrBfvLibHz+3i4+6OvjnS+ao2t8dPMw7+/az2jdO8uaAife2
      7sCzq5rEUoqp+bU502Ty7ud2RKTFFNGAC1iLAu3fvx9YM8aNS923NIBCeokb3eMEAhb6R2dp
      qinZ6tQtIQCHWsxRHryVEKpnJbmE5Y5lPXVg/zrt9nj4/ve/T2YxxcrEInsa78Xtj+z/Hs6w
      G3epn+W5NH6vnQOta2tfUuk8sixSFinH6/Vy5Ngx+hPG7xCV19aiaRplJSXY5uZ59r6Y/jN3
      IlIW8es4e0VsBVXVyBXMHzlQ7kTxVE0jp5ijfIq2JpOdWWDxsnklgTXkxbOrmotdE/zzn80G
      9qtX9/DO883k506Tm/6TibeVvIk18iJKNrN1x95/5QqCvMyl7mWGbt3ErOb2yOVy9HZcp+vG
      Za5fPs9oTxtnz5xibqSTj89cJpvN8tv//b9ZSMR59/d/MBz/7Xe/A+Dff//vpGaT/PGD95kf
      T/DpZ58x0T/GyU9OMDIyQlfvOG1Xz9DedpYLX51icvgK89OdlAYzfPTRR6yk03zw3nuMLMzz
      /ru/Xz9mdJ33338fdWmRf/vzR2Q6OvnTp58yf+MmX5w4wdToCBcvXmRgYIBb4xO0j48zGE9w
      fmCA2eVlPu/qYnV1lT/+8Y9rel5bMhx/9+laZOp///H3ALz75afklQJ/vniGxZVlTp8+zfj4
      OG1dc/SNLNEztMiN23OMT69y/vo0CwvzfPzxx+QLBT67tLb25sNznxiO//qva67T8Pm1xV1j
      V6dQ8ipTt2bJraytkB0ZGWF0dp7JxCIzC0mGphIsrqTpHp0mmUzywYcfoKkabR93AnD9o1sA
      fPqHLwD46L1/B+DiJ++haRptpz8hk1rhxIkTTE9PMzk9w8LSEvG5OWYTCZaSScanpojH43z2
      2WeohRxTvWt1Md55znC8q//kpTV++tp1NEUh3tFJIZ3m9OnTTIyP0zkzytDCDEPzM3TNjDK9
      vMDV8X7m5+f585//jKoUmOy+aCj7qy8+AuC3736Orqzwb3+6ga6s8KfPbpFaWeTTTz4kHo9z
      6sTnm68FAo1UaoVQTSt76spR9QJOqw2rw/G15gLOwjyepXb8chaPlMEvZ/FKGfzRSrwVLaCp
      JOcSSIKALArrx5KyMmrr6pGzIsp0BqtmwY4Fq752DJdHKW+qJr9ym7nBf0dQZpG0OIISR1Lj
      xMqbqG/5AUlNoXNxjrwskZNFCneOlbES9u2owz49g3DyFM5kEkcyiXN5GXtymfCOHUSe/h5+
      VcEzn8DvdOK1O+4c7fhqa/HW1ePJTeGcu47XLuJzSOvHYOOzhJq/j1ew4i0IeF1u/C4PXpcb
      n8uDt7KEQE05TimOS+vG47Li81jXj/5YK6GKp7EURFhScDvdeJxuPC4PHqebkpoyyhurWFDm
      6Fpox+q0YHHIWJwWLHaZvTv2c6j+eyiri8yP9uG0W3HY7vxZLexo3sOO5r1kLSnmhGkcHvva
      n9uGw2NnV9ludpXtJic5SOoOnG4vTo8Xh8uN0+NlZ1mYxooI84k4o4ODWK1W7Dbb+rGldQ/7
      DhxkOlng1mgSi82BxebEYndhsTk52FzL0X07mcllaZ9LYHE6kO0OLA4HssPOofqdfG9nA9Zk
      Dsbm8NicuKx2PHYHLquD0t07ie7aweyKysB0ar3cu9c4sreep1p24JZmcAsjeD336tfrsRIo
      O0yo/Cnk/JYjgMqtWz10XPqKy1cuEE/E+fjj03ydj52LoojH48HnshHwOHDZrUT8LmwWmdKg
      2/AqZCwaMRzL77wQUlm2NuEpCUWRRImIP4TVYiUcjuByuXA7JFwOCaddwuOSsVlF/F4Zi8VC
      WVkZgiDgvzMZC9xJ4Nw93p0slbtcCIJAidOJLIpE7HZskkQoFMLtduN3OvE7nbjtNsJuN3aL
      hRKvD1mW1ydkVUGr8ViylgyqLr/zqme0BFEUKQ1FsFosRO8s6Ap47zwUt5WA14bTIRMOOLBa
      bZSWliKKIiWhNX3LIqWG4139XeG1+Yoz6EAUBRx+O6Is3lk05sJlt+GwWbFbLbgdNqwWGa/T
      bqijQOla6DNwJ7teUrF2zdKKtaRUqLRi7bxoKZJsIRaLrmWv7fb1Rm+32bBaLDgdDmw2GyUl
      JQiCiMOzVhdOX8RwvKu/I7TGO4IBBFHE7vMhSBLRaBSH04HP7sJtteO22fHZXTgsVoJONzbb
      Wh0JoojDGzKUHY6t1VFVxdr/q0rXoktlMReyJFJSUoLdbifg9Ww1B7DwN3/7t5tTRRTxV4Tt
      3weY6ef/+9Mpbt5s50FvkibjY9zsGv4WVSuiiEePbQ1gYXyGsbE+egYmtt37S1eyjMaXkLQC
      uq6vp+xVbfPPHGqatnaOurlZabp25/XA7fmtXvC+W776AP6B8lt8pvGe/Pb8lvf/kPpvWT8P
      qf+D6+cB+j/g+n9p/f7F+m+ln/rw97+tAZS1tFAX9dC4d9+2WeD4xAhLyWWGRkbIKTqSJCGK
      4pbvl96N9W/Fi8KDeOGheGkrXtxeXnhA+cK6/Oa1IjxQ/wfwD9LvAbz4gPp9UP0/UP8HPb9H
      zN/Tb/OQzLq88OD63/ad4NEbbdQ9+yoT1y/TUleKdQuFYjVNxGpU5ueWsVvunSNsETMS1u6C
      7UJKgiCwdUZf2D7dLzyAf4C8cFd+i3MEtubuXH6tjG1u8KH02+IU4UH3/4DyBbbXb13/Bz2f
      b3j9v5S/p9+WFbRt/XHf89l2BPBXlDNy4zJ5NcfQmDklb4REKBx4wDlFFPGfC9uOAKLFgkWS
      qWlqob4yst2pRRTxRGLbEUAUZQq5FCP9t7hysxjhKeKvD1uOALquMzMS55nX3mCur5/6zdb0
      FFHEE44tDUBTVzl/6hSW6UmqK3bS9DW/GFZEEU8CtjQASfbwD//3f/8P/SJEEUU8amw7CV6a
      HuLizX68wQhPHdyH3VJcJlzEXxe29Ws0TSOfzyJLedo7Rh6TSkUU8fiwrQFIuiajrWEAACAA
      SURBVEomXyCPl0P7d2x3ahFFPJHY0gDSy4t0XLtJ5e6DLEyMohXnAkX8FWLrKJCSx1/fAmqK
      soP7v9YXIYoo4knBlgbgDsZo9vhZSWUQRAlN05G2WHxURBFPKraNAg1dPMttzcpU+yXqDr3N
      K888/m/dFFHEo8S2k+CSnRXkF1NU1DUR9tq3O7WIIp5IbDsCJEamUK0iwWgd+3Zv/fGiIop4
      UrHtCOD0OsilchQKX/ejKEUU8WRgyxFAVVKkhCBN1RLODdveFFHEXwu2HAFE0YqkKvhLSlDz
      mW3fCS6iiCcV26wGzfDZH99Hbmog6I6xZ+9WZxZRxJOLLUcAyeLlb//xV1SHw5SXRbc6rYgi
      nmhsOwmeuN3D2GKW1EK86AIV8VeJbcOg0dpqDqZzLOes3+zz6EUU8Z8c27brQnaRts4RXFa5
      OAIU8VeJbUeASN0+3irJIMm2b7RDTBFF/GfHtiOAmkvS1jFEPD6z3WlFFPHEYvtJcMdt+sZG
      uN3Vx+ZfkSyiiCcb2xpA5d49VLggVl2Lpjzo+9BFFPHkYVsDGG27gaW0iq4Lf+b05b7HpVMR
      RTw2bP916KYalkbHKa1rIRZ0PS6diijisWH7r0KoAopSQLYFaN1V+bh0KqKIx4ZtDWBmYAzV
      ZmVpfs6QB9CUHMMDfSQWV+/8UGCwr5eh0akH7iRTRBH/mbBtHsBXWsqLu/ZiFSwGS1EKBbzB
      MP39vUQOH0RdibMqeqkL+4v5giKeKGy/wkHI8ec/fkh375BhBLDa7MQnhhGsazsUqpKd7PwY
      Xd19KNp9WyRtscWQqmkUCoVttyB6KH6bLX62l1f/Inn1jvx2WyQ9XPlbbeGjbsurD6n/VlsE
      qQ/QT1Uf9vlsvQXRX3b/d/Tf6v4fpJ+6vbym3qu/bUeAQKycXc06laXGnn1lMcFqTkMTFeam
      p5AdFiRBQL2za4csyyiKgiRt/jEVSRSRLJYteVEUsTwMv8UWRQ+Wlx5Kni31l5AsFvQHyGui
      tGn+RLxz/7okbrr17Lp+0ub9k/SQ+m+1xZD0gPqTpLv1t/nGuPfqd+stjh7u+WwvL251/9ID
      nu8dXtuqfOle/W2/RdLNW/SMr7KyMEtVbc36yZ5QKYdCpaDrxBMJfL4wTx0ubqBRxJOHbV2g
      YGUMayHFjtYtNskTBKLRaPEL0kU8sdjWAAIVjdSHJb448VUxulPEXyW2dYHmJwdR/Q38+tW9
      xU8jFvFXiW1HgNzSIhcvnue9P31WXAxXxF8ltjUAQbSya1cNkrjtQFFEEU8stm3ZZbsP8laz
      iqoLRReoiL9KPLBrFx4UKy2iiCcYxXfdi/hOo2gARXynUTSAIr7TKBpAEd9pFA2giO80igZQ
      xHcaRQMo4juNogEU8Z1G0QCK+E6jaABFfKdRNIAivtMoGkAR32kUDaCI7zSKBlDEdxpFAyji
      O42iARTxnUbRAIr4TqNoAEV8p1E0gCK+0ygaQBHfaXwr77sXMivc7u5FdARo2VVXtKoinhh8
      K21VsjmJhIMUspniJxSLeKLwrRiApqrYXW4ENUdxM8kiniR8Kwag5NKMjYxh90ewFj8UXcQT
      hG9lDmB3+9l38CkAdF1H1+8cBQlkp1lAtICuIwoiFqvVTEsSuq6DKCBazd+kE2QBXdcRJSsW
      e8DES7IDXdeRRAGHbDHxFlFcK99iQfB4zPrZbHeuL4LNZuZlCXQdJCtscn39zvV1EXTZrL8u
      rumPYAHJbS5ftKLrOsJW9y+tyVskCx6b18RbpTX9JdmCzWUuX7KslS8JEg7J/HxkwbJWvwLY
      JHOPJglrz1eWLThd5t1DLZY1eass4nWan6/NsvZ8rZKE124387K8dv8WCdFl5gWLvH35srR9
      /d65P0QRQdd13XzGN4eu6+vbI221gwdQ5Iv8fwr+W//qoSAI6xfeToEiX+T/M/Df+giwKXSV
      od4uXJEq0CAW8Zv5ni5csWpQdROfWZhkWQoT81kYGR6jprbGKF5I09ndj6JqeEIl1FeVbpCf
      YFmOEvPKJnkll2Y6Pr/+f7vLSyToM+k32N2Jp6QGXYNY2Mjr+RSd3QMomoY3XEpdZYmBT8+P
      s2ItJeYRN7l+iun4wr3ru31EAka3Jrcyz9Syil/OMr0i0Fxv3LM5tzhBXAtRGXKwKbQCA/0D
      5FUdbzBGRUlog/w4cT1CZdDsbgAoq3Nc6RzGLmsogo3q2jpiwftcR63AQN8AeU3HG4pRETOW
      r+dXiK8KrM4OYgvVUBHdUL9agYG+fvIaeEMlVMSCBjq7PMfMKniEVRIZC007yg18YSXOla4x
      HJKKItqo2VFPNHDP9dF1hf6udoKVDWgKREP3dH8s373NxIeYTWbwuwqkZsaIRQ4a+HR8iNnl
      DH53gdTMqInv67jGmBKh1CcjO42VC5BdnELwVbGnwrvpdk29t64yoZVQ4pWQnWEDJ8pWQqEQ
      hVwGTZCxWM0+f3qmn/hKFsWvsTI5RCxs1C+zMI4QqGZPucd0fV3X6W2/wqRQTolHxOIy7qUm
      yjZCoXv3JG2Ys2hKgZxuITPdyUDWw5GDLSb9RJuLmydPsFRbiy9UQlWp8R5Xp3tJ2cvZVepC
      3GTjOtHm5ubJL7aUzyxO4q/eTWNUoK2tk9HBPmLBe3WwOtVN2llNU4lj0/JTs4PEsx5UMczC
      6CAV0QNG/SZvk3bW0lRiN8mrSp48VlbHrzKohXl6X5Op/MzCJMGaVhrCGm03uhgd6CV66D79
      JrqYX8kh5GWSI91EQ/euL/3mN7/5janEbxmyzc7s+AgzM3HC5TVEAh4zPzbCzOzmfDBagqQr
      lFXuwO9147CbG2lP5y0WFhZIKwIh/0b5MoIBPz6fj3AogN12b+IkiCJk5rh4+Rqiv4TZ8QlK
      S6IGecluZ3Z0mJnZOJGKHYT993qX/OoCnUNTzE9PsLi4QFoRTdcPxUoRNIXyqjp8HhcO+73r
      51YSpFWZ2alJksvLKEh43fcmpkouxcTUDILFhddlBdGCx2Xs6UVJRtLy+MJlyLIFt9PYk4ui
      wvUr7aRWk+R0maDPvbl8pAzLJvJWl5fh2+0k4gl8kRJcDjfB+0YpQVC4dqWd1OrSpuVb3AHi
      E9M01Jdic/pxb5jYCuI9+TwWg7ySWWViehbR5sbjtCJIVtP9W9xehjtvEk8kCERLcWzQz2J3
      MjU8wOzsHCU19YS89+r3sYwASkHB4gmxu76Mkoi5B08tTBNuepqDIQudnb1AmYFXU/Mk5ubR
      XGFSs+MEnzL2IBanjx2VJSylFSIh4/AJoKXnGZzIUx50IEhm49E1FZvNxtzMFBbRHDUSRCvh
      0kqcuQJOm7GHsrqDHNy/j2RKJb04hcVrbPyCIKCuJkgk5hC8JaxMjRB8av86b/fFsOsqKwmN
      ZEalxL2h8Ti87CjLMbEisTLVz7Lspsxon2Tig0zPLxMN1LAyPkRJeL+BL6RXKW/cQ1O5xzTC
      rMkPMDWfpCRYy/LYILEN8iARDofI5gvY7U4qN7hQSnqFyqa9NJa5Ni1/Zboff20rDpvKQH8f
      JRHfJvL7aCxzIluMUR2ry0d1NMlEJsiOiETv0AylEWPkTUAmHAmSzSvY7E6TCyVIVsLltXgK
      Cg6LMfL/WFYtWJw+du2sZW68j7NXbpn4wd7bdLa3ce1aG3av2UBs3giSkma4uwOrN2ziM3PD
      zKk+Whpr6LndbeIlm4N8KrWlfrKnhLq6OsIeJw311WgbpkXZuWGW8FNbW0ss5DfJp2cHGY/H
      mV7WGR7oM/FWXxSpkGKoqx2b37ydbDo+wAIhmhur6e4y659fXWB6YhgxWMXKYtzE2/wliPlV
      hrpuYA9ETbzsiSGsTjE4OMjM3NLm8rlVBjtv4AjETHwmPsCyFKa2tpZo0Bx2ldxR8vPD9Pb2
      MhVfNHC6ptHX003HzatcvXodd3Az/UpheXxL/XRVIRGPMzeXIJXNm/jUTC8rltiW+qVm+khZ
      N+cfiwuUTyfpGRglXFrD7sZak5/s9/uJVtSxs7YCLZ/D5doQmxYlArEKIl4HgVAEh82ygRYZ
      HRpkfmEeZyBKdMMkVhAtCHqegqIhW+2mITS3MMLNkSQea4Ge3kGWUwVKDRM5jc72DlKpFXKa
      bHJxLHYn40Oj1O2sRpYd+De4AIIoESypJuKxEgxHsFuNA68oSYwMDrKwMI8rWEJkw0OyuILI
      CFSUBPEHI9g2yGcWZ1gUwhw9tJd0co5AwNgDatklensHUUQLBc1CWdTYgxYyKcK1rTTXVyKq
      BVP967pKR3sn6dQyBawmF2ct5i5ilxXmVnTKY/fKFwSBkN+F7Ktid30p84srBvcEQMss0NM7
      iCJZKehWSu8LgmhqAcEWQFaXWUqp1NfVYNmQWzHoJ1gJeF0beIVbt7pIr5r5R+4C5ZYTrGp2
      HHYrq8l5JoHKEmMv3t9xlXElQplPJqVYiEQ3TMLigwyn7GSXU+iTCQ4fuucC5VOLZDQrpSUR
      VA1cPnPiI5+con9gEGcwhrCUpSy6cYiUcbq8VFcHWVpV0fOrRh5wuFyg5pmdGsNms1FVcq8M
      VQV/yE9iYgyc5hEqPdPPSNZDZnkVfWrOoD+A5Ahw9MhhNB1E0TyJV9Jz9HZ3Yhn34/BFObCr
      xsAXUgvI1hidXd2k0ivs2FFnvP+VeXzRUkRXiMJSHKhd53Rdo/vaGWbkWkrcGhnNYah/XVOR
      3TFeemHtt00n0bKVcDiMrrqZvj1q4jU1z1JyhazHxsJiEmorjPotz+GPlSO6wyiLs0D1PS69
      TB47BU3EYRNJpTM47+sAdU3F4inhpRciW+pn9USoCI4QrWtAyRm3e3zkI4Bsc2HR8zj8UcpK
      wmiFAg6HcRLkdrvx+EOUlpRRWV6CvCF+K1ltDPcNULuzFlGwGidgooRsteH1evH7fbicdkTR
      6NnphRRpzcFKcgHZZqeyzDjMyw4fdm2FydklGpsaCIcjWC33+oZ0YoRCoIG9TVXEZxOsJhco
      L78XihNlK8FgiFDIz/DQCGVlxjCobLUx2NNPfVMdwgb97yIRn8Hu8rBJ+yeTGGFZd+IIlaMs
      xSkvN4Z5JasTfzBEecSLaHHh8xh7QKs7iF2WUZbniFTV43EY/WyP241gsWOzyJSWlRomwbmV
      eVJ5mJmeIplMUtAlI7+6yMpykqn5VdSCQm19HRbJWP8WVwgpm2BqPk3LrgakDTdp9YSwyRKF
      ZIJoTT3u+/STbU4KS+Po/lrKIx5mpqYJBu+NMNnledIFfV0/Bdk0iV8Zu8V0CiRfKXOjfZSV
      35tjPhYXqL/tNF2Tq+RWFxibmqeqwvgAyS9z/doN8ISZHB42NSBBslFZVYnL4TA1HkGUSE3d
      ZqrgI+KRaLt+i7INDUTTwRsqpbG+1tT478Lp8RGJhLHIsqHxA1jdfib6bjE9PUugpByPy4vf
      d88NUrKrDAwOk5ibw+mPmlwEQbZRWV2F027ftPHPTY1y6fIlsrqFSChkMgKrJ4jH7UdZmiRa
      XY/LbmzAamqOa7f6mUsksDg8puvnFse4cKUNf+1u5sZHKbuvDgRBoLA0zmjaSWXEi93uwGa9
      18NqqsLk1MydJS46FpvT4EJmFsb46sJVVnQnkppBFSz4NxhgIbNCfGEFUVlhYqFgcHFgzQU9
      f7mNYP1eEmMjBv10TeXWxS/oj2dJJiYQbAGiofsjPC7E9CxJvCxODJHVrcTCxvKtbh8zIwPM
      ziaoqG/C775nII8lClRStRM7fsIeGzs3WfshiDJ2i8Tk8ABe3yZx/qVplsUQUa/M2OgkVdXG
      RNDw0BCTSpJFj4WSqp0meVFXaLt5gz3NDVitNpwOYyQovzRBd0Jkz84yNl3LJ4i4HA5SBQ2P
      20fEb/SRtcwiGdHDnsYt5LU8Xbc6yWoC1XWNhH1G+UC0jIqKMupqqtlk6Q2Z+XGudCcIe20I
      qynwb1h/oyvYPGEaqoLIm+QxBMmCTZYYH+rD5zW6f/nUEsOJVZYSi8zoQTzBmKGBWxxedu50
      M9J3G09sLRF4P9yxBo59T2LVUUHYKSBK5iYl213U1NSAluP6zT7ud3HW9LNikyXGBvvw+zZE
      8QSRvd97jpm8F2VhGEdgQxINUAtZRnuGqWzcxdLMrLHuknFy2PHGqvACG4J4j34EyC0nyMk+
      UouzLC8vk9MEfPfFudVCjsXVPF6fD7fLRXl5Kc4NPVzXlS/pnkiyMj9DRrVsmKBCrKIWMZ9C
      RSQciRp8RABN1VhMTDEyMYPd5cXn2dCANY2erpvMzS9umkdIz/YxI5SwZ2cpXZ09VGwcYTSd
      ns5t5Gf6WLBVs2dnCbe7eigvM8qLooTPH8TpcGzqAglalrHpFaJhHw6X2zSJ1wWJVHKBVDqN
      JpjzBLogESqrpjwWobqiBPG+IIQgybg9PjxuBzabDZvNhtNuXw9UCIJAerqbvqkkoi9GfLSf
      svv0FwQBIb/M5DKUhr1IG9xPJZ8lPj1BT28/UzNxymrq8Lk36IdIuLyG8miY6vKYUT9BIB0f
      ZDatktGcLM2Om1xA2RnA7bBilwRC0Zih/chWBxZpzQuw2+1YrVZsNuv6/T3yMKhosTE7Mcxq
      Jo9SyJPNFQz83bVDDpeHYMCPRTaqlF2aIVDRREvrXvYdeIr9u+tN18jOj7JsCdPaXM9AjzmM
      qOeTZAQvu+rLmZ2dM/Gy1YbfaSNWWbvpfsj2YDm52QHab3YSiJWZeIvDTUVpDNliJRo25yFk
      d4D4QDttNzpYXJinb3jSdI7T6dq08QPkVpbwRMsIBAIm/xZAlCC5lGRleYnMhkkeAPlVOvtG
      kWUJRVE2yMqIqWlG5rKo+VU6O27RdqvXcI4jVIGYW2Go8wausPn+BZuXyd5rXLt2jcFxYw+s
      qwrLsyPkbGFKon4mp2ZN8np+hc6+MSyyhKqa9XeXNaIkl2ioDlBWVWviMzN9DMSzZLI5dM04
      RAmiSG5ukP7pVTKr89y4cYMbHf3r/CN3gWSbi5gbxpQItaUOOruHofqeBSvZVUTZykJiBk0H
      pzeI974wnChodLa3o7gTJHxWfJFyGmuNa0Fsvhj5wW7akyLeTR6QrqnINjuyxYpAxsRn5kYp
      SA7SBY3l2Sl23KefphZI5aC5pXnNB7aaG2A6PkDKXsqenQ7abvVw+Km9Bl6y+WnetRNdU6na
      0WiKReeSk1zumsLnsuINlVBbYZynWNwBFrt6GFp1449WmHr4TGIMZ3kzu8ttXG27TV2lMdeg
      SzZsWobhoUGc/hg7KjZmul1IehqX24PHl0fUjbF20eqhobkFiytkCjAAyDYrEb8PJBltw8oy
      i8NNbX0dC8NZXE4XcnLFJI9sx6ql1/QLlFBbvkF/JUc2l+N2ZxexykaTuGR3kEstgt+8NH2t
      eBeSXsDl8uD1Kwhq9h63qcS3CEGUCJTV0netk56kjM1tvDnZ4cWDiN1SSq6gmWLQsjvK8e8f
      J6k68DtlpA0+ppJdZXQyQSQaRtd1XJ4Nw6umotrCVAdnmVvM0NRoHkHs4RqckzdIjA5Q12Rc
      a6OrCsvLyyiFHPmCRiAcMyxlyK8u0DUSZ25lFnXRgSaa18cLkozH40FX0tweHCcaNF5DRMPm
      ClBZGcRiMy9os3pKeOWlEtPvd+GI1CLc7uXGHNTsbDDxhZVZXGWNNJVauXmrHzYYgNVfSXN1
      nOV0gX2tzWgbWnEmMUBH1xjlLYdYnhzmqYP7DHxqegBVtuGOVLIcn4IqowFb/VXsLBkjkcyz
      p9W8lqewPIOnvJnGEmlNvw0GkJkfx13ZQlOJhba2DsoiBwyRQtkdo6V+7R0Mi8XcpEVHmBJ/
      nHReZO/uXdw/SDxyA1Cyq4xOzBCORBAEsG94AUWUZNT0PNduDhH228jobva37Lgnn1kmL7kp
      LCeIr66tlrw/GyvZnJSXRMmqAk6HzdRDKdlVetuvMav4KPcJ3Ojo49jh3YZzNEVBtrvxyRqZ
      VArC93poyeogFrBx8eYUEb+Vyek5wvetVbK6gxx6+rlt60ArZJmanERTC1g3ecEmn0mRzaks
      LCzg8oVMPfyDoKQXycgBDuyu3HQxoM0bJnG1k8yMhM1nHCEzS7NkcJKYW8vgJhYdlG/Ik1hc
      AYRCD30dN6io2sFGuEt2UCZnmZ0cwB8zuyjK6iy3hxNEfBJ9gxO0NlZt0C/C7LV20tMSdn+F
      Sd7iKyPd1cPtBRld1xifnjOMklp2ic6bN7H7Qjj9JexrNHaikmxBVxWSy8uspjPsrL+n4yM3
      AFG24tRXGFfC7Iza6B2eMC2XLWSWcYYqaNjh4+pNo/9pdQcR0/N0Tkxjl3XyM3EKSj0Vd7KN
      giBitVmZGBwiW1CRLA7q63dguRNOsTh97GqsIz8tsqshzJW2HpOOulpA0UC22AwhwLtQUku4
      IlXsrHZz7Va/iX8QZLub2ooYacGFz7nJG2oODyvzvSyJXrBu8gbTAy/gorDUwc32BQLRcnZs
      cKEkR4jnjj2NpuumDkK2OVmaTmCxrOm1MQdzV39PIIYDNl3LJUgWZsa70UQRl8c8AhZSC3hi
      tTRUWLjWOQwYDUByhnn+WGjTRGBudZG8biNy57qllSFTpj+7OIMvWoIlUEFudgwwRglVJcvy
      SgrZYicS8tDV3cf+1l3A45gEy1aiFbXkFqaYnJpG3sSHll0RfOIy7bcHqKqpMfG5ZIJAVTNP
      HTqETRKZHhsw8Lqmki8oqKqG1+uk/VangbcFa6jxq3TcHqJ13x5T+ZLVgVWWELQ8qYx5jmAP
      1+ApxLnV1c+OTVyMh0E+vchS2ryOBUC0+2lurMHvdT/wJY7NYLU7cFhtaKqG2725AeWyKfIF
      lXzBOMmUbU4qKirW/0KbZNJXp/txVO3he4cPMjHYuwW/l0NP7WdiwMw7YruICHFu9Yyzd+9u
      Ew+AIGyaBZdtTuyOezoGvWb93JUt1JSXIS2OUlFvniMIsoPKilJ8PjeSxbne+OExLYaTHAGe
      PrSf2roG9jabffDhzsuMLRbwuGwMDY2YeGesltxUN23Xb+ANxwhH7k1S1XyG6ZkETq+faDSC
      w+nmwF6jj63lkvSPzKAWUoyNm6MQaiFHOpMhrwpEw5usVp3pJ+etZt++Fkb7zCPIg6DlV7h1
      ewA1n6FvYNzES1Yn1dXV1NZWMTcz87XLX53px1K6i6cO7mG037wYL780xpnTpxmbX6Gz0xgl
      E0QJMnNcabvFrVu3GJ1OmOStvhLivde5dr2N5ZVl+kenNvAx4r3X7uOnDXxufoR5Pci+vc3Y
      5a/X5NR8hqHBfoaHhxkeHia+uGy+v8VJrl+5hLV0J9OjIyY+O9tLf6KA1WpF3rCO6LEkwvLL
      U5y5cBOLJ4DV7uOZg80GPhAtRydA0G2losr8krog2jhw+Htbl5+cZFIJsyMk09M3xzOHWg18
      LhnHXbqT1io3V290A8Yokmx34XXaWcmp6JukspzhKjLXO7kxIxIorXn4G7+D7MIkot1HTtFI
      LiQwDdG5VYZGp9DUAp7A5pGMrZBbmadncplk6ibZGdumLwyBgM1iYWpsBJfD6KJoaoHV5UXs
      vhKaKv2m5cgAVk+U48fNqzjv8TGOH988ww5rYdLE0DWuLQYJxiqpq9z6XFPZLj+NjeYVuBuu
      gNVqYWp0GJfD6P/nUkuMzadZXkixJAXwiFZDHuqxvBKZmx+ha2KFnKIjqCpPH9643vwvQ2Fl
      hqs9CWpKPUzEUxw+sOGtKV2l//YtFtM6tQ2NRHzGRpCe7aN3xU9rtZvrN3r53mb66To6bDrJ
      fBA0tcBwbyezywq1DY2UbgiD5pdnWSRAzGtufN8GtPwq4zNJHDYRRbAbVoPmU0mGxqdQCiqy
      RcYdiJjmaA+ErjE9MYLTX4KOgH9DJA6tQF93NylFoG5n46ZfcvimUAs5llfTpFaWSOc0YmVl
      +O4LIqhKgXTmvrCn1YbjvheiHosLZAtW0dLUyK6aUna3Npt4Xc1x6+p5xmbmGRn/+i6AxVPC
      ruogy2ll0zCbkl5gcmoGX2kF02MTJt7u///bO7OvttE0Dz+Wbcn7hjfArEmArJWkknT19HTP
      xZwzp//buZ2rmTM13V2nKwsECDsEsLHxvuBVsqS5oKoSIwMhhKVAzzlcyZI/LL16v+9dfl+M
      Tv4j8/Mf8Ef6vJ10jWJuj1qjRa1uXCOcRrddp2P3kwi7qVbrhuOCTWTun//Hx+0dcqXqma8P
      UK/XDDH4X2kVdqjqHiLhIKkjUwTR7Wcy7iVbrlOvFtlYW+VjyjgNOolmdo3VzR2yzS4bq8Y1
      QCOzQtszzuOZcVaXzz6FPAld05DlDharhN/rQjmyxrHa7Hi93t/+Pn/44bLEcS2WQ40Zl8dQ
      KQiHN6iFRENWyWWMWdLT6DbyfNjKYrfILK1+NB7vNBCdHurVCo12xzg8u5uxRAy3x4fXZQxT
      tovbLCytkqm2WFsx3uATx9Zpkq806Za2WU43De2eh9/v5M5oDCwCXfXs0npyu8XSwhzlWoN+
      /twdn8JW2eLt7Ie+eQK5USE2+ZDvX77A7ZAoZowlzSch+SIInTobC7NIfmM5uM0dYG9tjrmF
      ZfLZtGGNcB5skhOPVuJACBCNBklu946906iwurr6218639uwczlrgEqa12s5Am4RdyDC+HDv
      fNIVGcebniW7vc7ElNFDnIbaaeDwRxge8lJc2e05pusaVu8wk+M6hWqH6T4eopXdINXwMj0U
      wmY3GoDN5UdQ2mwsvmdoxBjnPgmLxYIgCIRHZggD/WZQSjXNbjLN0IMhiru7DEXOtg6o10oU
      iyU8+QIBr9tQUNdtlcnm84ieAHuZAtEjxXSeoWl4P89sFobGxrD0qaY4DrlZYzddYnByBl3X
      8R4t1AOkwAh/edKhJI7y4sW3n+ZJvgjZt+9ppq04g715BMkdYOquxOL7RTSbA+mIdueFG4DW
      lakcHIAgEY/HDJlOuVFmYXGZA8WCx2GlXKkyFj/bAyCFxhltbbO5k+XxIOykKAAAC+VJREFU
      k975v9KssTD7mlzXy6DPwrv5Nf7yWSJMrpdYShbYzyex1IP4I8PcO1KqkcxWSdy9f5hp9p9t
      bFbRSTTQ5O8/zWJzeXEF4oT8R0QBHB4sSpv1hTmGEuNnuj5AKDrMqz/YCAzE6ONg6VSyeAdi
      iIE4nfwen1dj/poIszs9HGYCBIYGjfVMx/5/dgmnnCcj3uVOSGV9Z8/QswtgcwXw9hvcN8Dm
      jvBvfw4f21BUTS7R1iz4IiOUsnuMD35a41y8AagKtYaC3+OgWq2g6HV8nk83QHQHmRkNsa0O
      8nDYzdu3C8D4mb6j2yjwYX0Xj8vO1naGh/c+vQVEd4CH9++i5+w8uTvAz7O9YUDRE+LFqz8h
      y13ajRo215F2SqsdsZ0npQ9xN2JlfTtJPHxaVKKXdmkfVzCCGIgZHkAAmyfMn/79rzQPqkje
      sxnYr3i8HhRFQRUERPunUJ/crKJ5hxl1StRzWwxO93pAZyCGEx2hG+CgJSP1KSU4CatdIj5+
      j413W6SaduySsVy5nVvnvz8UiboU8lWFsYkpHtwzZnzPxS/T7H744hNEhTb720sE4r0e/FKK
      4WjkyKsxRkJ2CsUq03d6HwBXbALl3TzvsuCLjh5zpf5oqkK5sI8nOs50wsfyyibQ++M6QuMM
      N7aYX9rgwSNjIqaVXWez6aZVzKOT5NWLT7UuVrtEbHSSj/M7FAUntj5apqfhGpzinqdDfm+L
      yB3jHLy5v8bHto9GIQekDcV0pyFXkvz403tGv/sXGtk0z5995uFqGf72egUpdo8hn51OuwVH
      +hGa6WWWS24mIw5DnPxLsLoi/OsPAVRNx2Y3Zro1XSU+cpenYy5ezy3TrGY5eo++lk6jwnbq
      U27HG4oap5CCRL22h8PlxuHoHd+lrAECkWE0PUDIKx0b53/64uVXXVuT25Q7djyWJvv7bYZG
      xowfslgYHL3D4DG2JXoHKH5Y4O7jR1SKxkSLzR3h1XMPsqJxx9VH7PcUOpU075ayhLwS1lYT
      6P0NJF+Y/NIiU08eUy4Yv/9LkOx2MrvbuI7E+d2xKV4+0amJg4TdgqFhRm5W2SnUOShUqdhD
      ePp0dJ2GpnZp/RJc0HR6dJcAXNEpQrVV3n9QmLk/jXaGNcZpSO4AU/c87CWTqBaroZsPoJnf
      gsAED2KSoWf4UvIAmtJgbnYe1SrhDkR5cKfX+lWlTTZXQNNUrA5f3znkVaJrKu1O51AQ2mbv
      Wy90Et2DNP9YzDE+HMLpDRikD8+L1pXJZNI02irhaJSAz9PTVHLyuQqNE+LkX4Iqt8gVK2id
      KntVG6++6832dw+yvF5KYbfqBM+YCPsSDlLzzG6V8Q1OoNSbvHzWO83r1Pb58fUKQb+HUHy0
      pxz8cqQRCylUmwNnIEqznOeo+xOsdoKhEHq3zcJq6toZgNaVKZVKaHKdTFXg1dOz1QPJjRp2
      j/8wFX8BC8FOcZuN/S7DPpV3b98SDA/x/ZMvG6Ngs+P1ns2gj2KxCEiShGbzoxeMOYRuu4oz
      PMb9hLdvy+R5cfgGiMbdZDO7+AcGDcdFb4SpsSrVjkYs0rvAv5Q8gCsyQmIoAbV9AhFjXbsq
      t0klk+ymMkjO/gKtV8lhPb8PXyCMJh8vsHUcNleAamabVCpFsdKnIeScCKKEJIpEojG8Pj90
      m9/8O05CR6NSLlKuNpnq029hdUdQyzusra2RORKHPy/tgxItiw+7FRLDgwzG+8nSrFJkgJmJ
      OIsLvUGQS/EAYGFvZxPdIuDrUw9vFW0orSYKVryhPhtWXDG61qVUzNNVYfq+MY9wGqIvzl//
      4/iGlvMiBka5006RLRzw5NEDLl7uu5dOaYeN9Y94YgkKtV3++PzTb3QYZnXi8R5WcfYrtz4P
      otOLTe8SCEbxuQQOjHlOJG+Y+uYmixULvtCR2cc3Hc0xtIpJpMFpXr78ntzuluF4Y3+LelfH
      7o9Q6eNCrxqllmF1ZYV0sczSinH8V43aaXLQUhDUOh820rj6iAdfJDbRQWx4nFaljIXeFa4z
      EMPnsCKK9sOdY1QF9biaja9AsNlpplfIyiJ2h8hmn1IMwSZx7/4DXKIF95EgxoV7ALlRZjlV
      oV7P8SYnYfcYXZQ7PEy0e0BhfwdnwNjTe9UIgo1YYoJKpYLdeTEFa+fBKjoZGRlBVzvk51b5
      XPntMhCD48w46uhTd/v2DHdKHynIYSaDCovLK+ym9vnjS2NfxtfiTczQejPH26TA0KTRQ9ez
      WxQ6HjTXKPXkJqPxT9LpF24AojvI99+/OvEzFrsHQd5j7N4DLJftv78AMTDCfUeTrjaOtU+c
      +6pR5RbJdBZ0ePjkmIaTC0Qu7/C/P80z/vzP1DN7PH/Wm42XfBGaH5MUNAlvcABB/8Y7KVps
      hEIBVIsNa58HyDvyEGFxnalpD9VQb3DgktYAJ9PKb5HMVwhJYRr7ScKh56efdIkoB/v87adZ
      Eg9f0izkePbUuEnFVSIIKvuZLJIk0LW58Y192zDjaei/9Btkdj4a8hBw2LT+6pmbjqLidrux
      WL7tzLu+t8Rero5/aILK7h7xgSOqG6U98McRJTfRI7PDa2EAUiCOXdlhZ2WRxIRR2e2q0bQu
      kiSRP2b/gKumVUzhSTzgUULizbtluGQDkIKjvPjBR7OjEQway0Tkyi4//mMeVyiG5A7x6vGd
      Plf5epzBGNGOj+zeFv7wsOG4RfKSfPOaZj7MwJE8wOXsEfYl6PqxxUzXgYNygVpLIRKNIn5F
      ucBFosoNVlY26HR1xu5OM+A7m6rERdPcX2Yl26VrdUC7eeZSj5Mop5bJHah4Eo8YPiaAqHWb
      zL3+mfjUM5SWzFjik+zKtfAAwInFTNcBbzDMV9apXThau0odN88ej/VdhF41rtgUM54W5XIZ
      350+pSrnwDMwyPvZ/6KRbbLngoHBMUOmuZFeR7E6aahWyplkjwFcHw9g8tUozSrv5pcQHS4C
      kUEmho/v370qaskFco573I18+0SnKrdQrU767CkOHHYcLrz5mZJsY+rBI4Yue5dIk4vF7vLz
      hx/+eNXD6Muhro+dfFtC76TJCgPEBowl0+fBKjr7arr+hq6iIOJ2CAbZGdMD3BA215cZmbx/
      7FvwqlCVDprFjq4divIKgvWrSq7Pw8HuHHvSfWaiAm/eLvLis00Kr9+E0eTMZHc3mJt7z9zi
      Mt2ztxRfKFa7RGNvnnTTjmi3MH9EtOwyEANx9lfe8ObtLLValY3dT8ILpge4IawtzzM+9eTa
      eQBd03j3P/9JzjZC2AWDY1MkomfrqLtITAO4IaiqiiBY+zbdXzVap8HGdgql28U3EDfsM3yV
      mIvgG4Bcy1ETgoQ91+z1/wutwhZNMcHUiITVdr1qqcw1wA1AsNl498+/k0ztXUi/wXmxe8Nk
      1mZZWloilS1e9XB6MD3ADcBiczKZiCDLClale/oJl4zdHSQR8aHZRIRv3A9wXkwPcANQDvb5
      uL1L1+Envbt7+gmXzEFqiZZuwRFOUMoa1bmvEtMAbgBW0YlNV9la+QDSV2ywccF44xNEI4NU
      dlbOLCx20ZhRoN853U6TfKlKV5FRVB1/KNx3kwuT/pge4AbQzG6wU1aRrF3WNs4mbHvbMQ3g
      d45NcjE6eQdBaYHFeiGyKzcZcwp0A9C6MuVKFUXVGQiH+0rQm/THDIPeADRVoZDL0pIVqs0u
      0xPXT1jgumK+Km4AmtKm0VYQJTd+z/XqBrvumAZwA7BJbvxeD6htStXrlwm+zpgGcAPoyi2q
      tRqyKpAYutyG+N87pgHcAKxWC82WjKo0SO+Xrno4vytMA7gBdCoZvIkZnj19Qq14vUoNrjtm
      GPQmoKlsri1TbalM3Jsm6Ll+CtvXFdMD3AA0pUG+XEfttqkeXK40+u8d0wBuAO1SCtfQDE+f
      fkd2d5Ou+g33ILrhmAZwA7D74rT211laWkbXNXbS109i/rpirgFMbjWmBzC51ZgGYHKrMQ3A
      5FZjGoDJrcY0AJNbjWkAJrca0wBMbjWmAZjcakwDMLnVmAZgcqsxDcDkVmMagMmtxjQAk1uN
      aQAmtxrTAExuNaYBmNxq/h94mvDQjdL6TwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
